[
    {
        "type": "text",
        "text": "藏文紧缩格识别方法",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "拉玛扎西，才智杰，扎西吉(青海师范大学计算机学院，西宁 810008)",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "摘要：分词是自然语言处理的一项基础性工作，对自然语言处理的后继工作有较大的影响。紧缩格的识别是藏文分词中最难最重要的技术之一。通过剖析已有藏文紧缩词识别方法，分析藏文字词的特征，针对性地提出了识别藏文紧缩格的规则算法、添加一还原算法和最大熵模型的特征模板，从而得到基于规则、添加还原法与最大熵模型相结合的藏文紧缩格识别方法。实验数据表明，该方法识别藏文紧缩格的准确率、召回率和 F1 值分别达 $9 9 . 2 6 \\%$ 、 $9 6 . 4 7 \\%$ 、$9 7 . 8 5 \\%$ ，比现有最高的准确率有了较明显的提高。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "关键词：藏文；自然语言处理；分词；紧缩格 中图分类号：TP391.1 doi:10.3969/j.issn.1001-3695.2017.11.0747 ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Recognition method of Tibetan abbreviated case-auxiliary words ",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "La Mazhaxi, Cai Zhijie†, Zha Xiji (Computer School of Qinghai Normal University,Xining81o0o8,China) ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Abstract: Word segmentation isabasic work of naturallanguage procesing,which hasagreat influenceonthe subsequent workofit,therecognitionofabbreviatedcase-auxiliarywordsisoneofthemostdiicultandimportanttechnologiesofTibetan wordsegmentation.Through dissecting the existing recognition methods of abbreviated case-auxiliary words,this paper analyzedthecharacteristicsofTibetanwords,targetedlyproposedrecognitionalgorithmofTibetanabreviatedcase-auxiliary words rules,add -restore algorithm and the maximum entropy models feature template,then the methods of recognizing abbreviated case-auxiliary words based on therules,add-restore methods and the maximum entropymodel were obtained.The experimental data showed that the accuracy,recal rate and F value of the method is $9 9 . 2 6 \\%$ $9 6 . 4 7 \\%$ ,and $9 7 . 8 5 \\%$ respectively , which shows a obvious progress than that of the existing methods. ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Key words:Tibetan;NLP; segmentation; abbreviated case-auxiliary words ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "0 引言",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "藏文是一种典型的逻辑格语法体系的复杂拼音文字[I]，由实词和虚词按一定的语法结构组合而成。计算机正确识别虚词对文本的歧义消解和句法、句型、语义处理有着重要的意义，虚词中的la 格助词“”、具格助词“N”、属格助词“”、终结词“”、饰集词“Q5”和离合词“Q”与其前一音节不加分字分隔符组成一个音节，在藏语自然语言处理中称这些虚词为紧缩词。紧缩词的识别既是藏文分词的一项基础工作，也是藏文分词的难点，为此学者们围绕紧缩词的识别展开了研究。紧缩词中属格助词“”终结词“”、饰集词“Q5”和离合词“Q可”的识别基本得到解决，由于la 格助词“工”和具格助词“”的情况比较复杂，目前的识别方法还有待改进。本文在现有紧缩词识别方法的基础上，提出了一种规则、还原法和最大熵相结合的la 格助词“工”和具格助词“”（下文称此为紧缩格）识别的混合策略。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1 研究现状",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "自1999 年学者们开始研究藏文分词问题以来，取得了很多有价值的成果。在藏文分词方面，陈玉忠等人[2]首次提出了一种基于格助词和接续特征（BCCF）的书面藏文自动分词方案；这一方案消除了切分歧义和未登录词识别问题，提高了藏文分词精度，其最终切分准确率达 $9 7 . 2 1 \\%$ 。才智杰[3]设计开发了班智达藏文自动分词系统。该系统采用的是基于词典匹配的分词方法，在85万字节藏语语料的切分准确率达 $9 9 \\%$ 。刘汇丹等人[4采用格助词分块并识别临界词，采用最大匹配方法分词，系统最终分词正确率达 $9 6 . 9 8 \\%$ 。史晓东等人[5]将基于HMM的汉语分词系统Segtag移植到藏文分词中，设计实现了央金藏文分词系统，其准确率达 $91 \\%$ 。康才[在常用的四词位标注集扩充为六词位标注集，采用条件随机场作为标注建模工具来进行训练和测试，准确率达 $9 5 . 8 9 \\%$ 。龙从军等人用CRF六字位分词，准确率达 $9 4 . 3 4 \\%$ 。李亚超等人[8基于条件随机场模型实现了基于音节标注的藏文分词系统，准确率达 $9 5 . 3 5 \\%$ 。洛桑嘎登等人[9采用条件随机场和规则融合方法解决藏文分词问题，最终正确率为 $9 6 . 1 1 \\%$ 。李亚超等人[10]从无标注语料中抽取边界特征、邻接变化数特征、无监督间隔标注等无监督特征，并将融合到基于序列标注的分词系统中，其分词F值提高了$0 . 9 7 \\%$ 。由以上文献可以看到，藏文分词主要采用规则法 $[ 2 ^ { - 4 ] }$ ，统计法 $[ 5 ^ { \\sim } 8 ]$ 和规则与统计相结合[9,10]等三种。在这三种方法中，规则法适合于封闭语料的切分，开放语料下准确率有所下降，主要存在的问题是无法识别未登录词和命名题识别问题。统计法通过对语料的训练，自动分析文本特征，从而达到文本的分词问题，能够弥补规则法的不足；但统计法需要大规模的分词语料做支撑，并且要选择适合的语言模型。由于现今的藏文分词语料规模较小，分词语料的准确率也较低，所以只采用统计法还不乐观。整体来看采用多种分词法相结合比较合适目前的藏文分词。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "藏文分词中有一类特殊的词称紧缩词，紧缩在藏文中所占的比较很大，因此藏文紧缩词的识别是藏文分词必须要解决的问题。陈玉忠等人[2]在藏文分词难点分析中指出，500句藏文综合语料中切分错误率占总词数的 $12 . 7 1 \\%$ ，其中紧缩词的切分错误占 $6 . 9 3 \\%$ 。说明紧缩词的识别是藏文分词的难点，学者们围绕藏文紧缩词的识别展开了研究。才智杰[I]系统地阐述了紧缩词在藏文信息处理中的核心地位，提出了紧缩词的“添加一还原法”识别方法，在85万字节的语料中测试，紧缩词的识别准确率达 $9 9 . 8 3 \\%$ ，取得了较好的效果。完么扎西等人[2]在“添加一还原法”的基础上利用藏文文法约束规则识别紧缩词，在含有4040个紧缩词的文本中识别准确率达 $9 9 . 9 5 \\%$ 。李亚超等人[13]再次分析了紧缩词在藏语分词中的地位，指出文献[11,12]中的方法需要词库支持，无法识别未登录词后的紧缩词。为解决这个问题，提出了基于条件随机场的紧缩词识别方法，其识别准确率达 $9 8 . 9 1 \\%$ 。虽然此方法的准确率比基于规则的准确率低但在一定程度上克服了“还原法”中不能识别“未登录词 $^ +$ 紧缩词”的问题。华却才让等人[14]在基于音节特征感知机训练模型的藏文命名实体识别方案中，重点研究了利用藏文紧缩词识别音节的方法，其识别准确率达到了 $9 9 . 9 1 \\%$ 。康才暖等人[15]采用基于词位的统计分析方法识别并切分现代藏语文本中的藏文紧缩词，准确率为 $9 5 . 8 9 \\%$ ，其最大特点是减少了未登录对识别效果的影响。以上文献采用规则法和统计法研究了藏文紧缩词的识别方法，龙从军等人[9采用统计和规则相结合的方法研究了紧缩词的识别问题，其准确率达 $9 8 . 0 1 \\% ,$ 。从以上研究情况来看，规则法适合于封闭语料下紧缩词的识别，统计法不受语料的限制，合适于开放语料中紧缩词识别，规则法和统计法相结合既不全依赖词库，又不完全受训练语料的质量的影响，是藏文紧缩词识别比较有效的方法。紧缩词识别准确率对比见表1。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 1
    },
    {
        "type": "table",
        "img_path": "images/bd699602b4a4650ccce0bfda9d02c800f0bd38e9e23c1fcbf0a519cd5d36a85a.jpg",
        "table_caption": [
            "表1紧缩词识别准确率对比"
        ],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td rowspan=\"2\">方法</td><td rowspan=\"2\">测试语料</td><td colspan=\"2\">紧缩格识别准确率%</td><td colspan=\"3\">接续紧缩词识别准确率%</td><td rowspan=\"2\">平均 准确率%</td></tr><tr><td>双</td><td>H和公</td><td></td><td></td><td>双</td></tr><tr><td rowspan=\"2\">规则</td><td>添加-还原法[1]</td><td>中小学教材</td><td>100</td><td>99.15</td><td>100</td><td>100</td><td>100</td><td>99.83</td></tr><tr><td>文献[12]</td><td>综合1'</td><td></td><td></td><td>-</td><td></td><td></td><td>99.95</td></tr><tr><td rowspan=\"6\">统计</td><td>条件随机场[13]</td><td>政论</td><td>98.48</td><td>98.88</td><td>100</td><td>100</td><td>98.71</td><td>98.91</td></tr><tr><td>感知机[14]</td><td>综合2</td><td></td><td></td><td></td><td></td><td></td><td>99.91</td></tr><tr><td>CRF++[15]</td><td></td><td></td><td></td><td></td><td></td><td>，</td><td>93.20</td></tr><tr><td>黏写分词一体化切分[7]</td><td></td><td>94.80</td><td>94.30</td><td>53.33</td><td>77.32</td><td></td><td>82.81</td></tr><tr><td>双标签黏写切分[7]</td><td>新闻</td><td>95.20</td><td>92.81</td><td>53.33</td><td>84.04</td><td></td><td>83.64</td></tr><tr><td>五标签黏写切分[7]</td><td>中小学教材</td><td>94.19</td><td>91.65</td><td>53.33</td><td>75.26</td><td></td><td>81.22</td></tr><tr><td></td><td>规则和统计相结合[7]</td><td></td><td>100</td><td>98.79</td><td>96.67</td><td>95.88</td><td></td><td>98.01</td></tr></table></body></html>",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "由表1可见，紧缩词“Q'Q5”可直接用规则的方法识别，其准确率达 $100 \\%$ ；紧缩格“公”用规则法识别率相对较低，尤其多种类型的语料中其识别率明显下降。而统计法能克服“未登录词 $+$ 紧缩词”的现象，在各种统计方法中，识别紧缩格的最高准确率达 $9 8 . 8 8 \\%$ ，但对使用频率极高的紧缩格来说还不能满足实际需求。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "2 紧缩格识别 ",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "2.1 紧缩格的特征 ",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "为了便于叙述本文把还未判定是否为紧缩格的“工”称为拟紧缩格，含拟紧缩格的音节称为拟紧缩音节。紧缩格“”识别的难点究其原因有以下几点：",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "a)紧缩格只能出现在后加字位置，即出现在后加字位置上",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "的“”为拟紧缩格。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "b）紧缩格与后加字兼类。例如，文本“穹:』η''\"凶≌（从西宁步行到拉萨，在西宁请拉萨人)”中第一个拟紧缩音节“”后的“”是后加字，第二个拟紧缩音节“”中的“”是紧缩格；又如文本“学5'2'2》‘@'2:≌g·5（源自唐古拉山的水，有些人在放风筝)”中第一个拟紧缩音节“”后的“”是后加字，第二个拟紧缩音节“”后的“”是紧缩格。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "c）紧缩格不能与其他格助词重叠接续。吉太加[16]指出，藏文格助词不能重叠使用。例如“55公（见到什么都想己有的想法)”的“”中的拟紧缩格“工”不是紧缩格。若其识别为紧缩格，对应的还原结果为“”，这就使句中出现了两个格助词重叠接续的现象。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "d）识别时需考虑上下文语境，紧缩格具有动态性，同一个拟紧缩格在不同的语境中有不同的识别结果。例如，单音节“乧”、“5”、“δN”、“N”等具有实际意义，可单独成词；但在有些语句中这些音节后的“工”、“N”是紧缩格，因此识别紧缩格时需具体分析上下文的语境。例如，“'（为了赢得尊严说明实况）”中两个相同的拟紧缩格音节“”有不同的识别结果，其第一个“工”为紧缩格，第二个不是紧缩格。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "2.2 紧缩格识别 ",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "2.2.1紧缩格的规则及添加还原识别算法",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "本文采用模块式分步方案识别紧缩格，由文本读取、规则法识别、还原法识别、最大熵模型识别和文本输出五个模块组成。读取文本后，首先提取拟紧缩音节，对其用规则识别。若规则不能识别，则用还原法识别；若还原法不能识别，则用最大熵模型识别。其识别过程如图1所示。",
        "page_idx": 2
    },
    {
        "type": "image",
        "img_path": "images/c526f291e56f3cf35505fbc5ea75c6679e89be119aae659f62f640256c96efa7.jpg",
        "img_caption": [
            "图1紧缩格识别模型"
        ],
        "img_footnote": [],
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "文本读取后先定位拟紧缩音节的位置i,并读取其前后各2个音节作为待处理的五元处理对象，即处理对象 $\\mathbf { w } { = } { < } \\mathbf { w } \\mathrm { i } { - } 2 , \\mathbf { W } \\mathrm { i } -$ （204号$1 , \\mathrm { w i } , \\mathrm { w i } { + } 1 , \\mathrm { w i } { + } 2 >$ 。当拟紧缩音节 $\\mathbf { W } \\mathrm { i }$ 前或后不足2个音节时，前面的不足位补充“start”，后面的不足位补充“end”。选择五元处理对象的原因是：一方面控制算法时间复杂度，另一方面藏文",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "$1 ^ { \\sim } 4$ 音节词占总词条数的 $9 3 . 7 8 \\%$ ，4音节词以上的只占总词条数的 $6 . 2 2 \\% ^ { [ 1 7 ] }$ 。如文本“52'≌HΕ2≌K2'≌2（我帮卓玛写作业)”中，对拟紧缩音节“5Z”“а”“Z”和“丐”等提取五元处理对象<start,start,5,,>、 $< \\boldsymbol { \\mathsf { E } } ^ { \\mathfrak { N } } ;$ KE,≌H,22,5V、,A,,≌,q>和<q,2,⑤2，end，end>。拟紧缩音节识别算法、紧缩格的规则识别算法及添加一还原算法如下：",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "算法1拟紧缩音节识别算法1：输入：藏文字s2：输出：1或0，1表示s是拟紧缩音节，0表示s是非紧缩音节3： $i f ( L e n g t h ( s ) > 1$ 且尾字符为‘’或‘’）4: $i f ( L e n g t h ( s ) > = 3$ 且尾字符前一字符为‘’之一）5: $i f ( L e n g t h ( s ) = 3$ 且尾字符之前字符为‘5555Q'之一）//除去了再后加字为 $\\mathfrak { N }$ 的情况6: return1;7: elsereturn 0;8: else return 1;9: else return 0;算法2紧缩格的规则识别算法1：输入： $W { = } { < } W _ { \\mathrm { i - } 2 } , W _ { \\mathrm { i - } 1 } , W _ { \\mathrm { i } } , W _ { \\mathrm { i + } 1 } , W _ { \\mathrm { i + } 2 } { > } \\thinspace \\large ; / / w$ 为拟紧缩格的五元处理对象2：输出：1或0或-1，1表示拟紧缩格音节wi为紧缩音节，0表示非紧缩音节，-1表示无法判断3：if(Wi为之）4: return0;5：elseif（wi为‘5qη}q’之-）6: return1;7： else $\\mathrm { i } \\mathsf { f } ( \\mathsf { w } _ { \\mathrm { i } - 1 } \\mathsf { = \\Omega } ^ { \\star } \\otimes \\mathsf { I } ^ { \\star } )$ （208: if（Wi-1为‘）9: return 0;10: elsereturn 1；11: else $\\dot { \\bf 1 } \\dag ( w _ { \\mathrm { i } }$ or $\\mathsf { w } _ { \\mathrm { i - 1 } + \\mathsf { w } _ { \\mathrm { i } } }$ OrWi-2+Wi-1+Wi OrWi+Wi+1or $w _ { \\mathrm { i } } \\mathrm { + } w _ { \\mathrm { i + 1 } } \\mathrm { + } w _ { \\mathrm { i + 2 } } \\in \\mathsf { D B } 1$ ）12: return 0;13: else return  -1;\"2”等4 个字出现的频率非常高，其中的  \n“公或 $\\pi ^ { \\prime \\prime }$ 在任何情况下都为紧缩格，因而用规则识别较为合  \n适；二音节词中第一个音节为“W”，第二个音节的最后一个字  \n符为“2或H”的词“≌'@2≌'SH≌'A≌'A2H≌'A≌Q四2]  \n']W'公]”等中的“2或”不是紧缩格，其他都是  \n紧缩格，这种情况也可以用规则法识别。DB1 存放了单音节、  \n双音节和三音节字中最后一个字符在任何情况下都为后加字的  \n词，这类词共有1622个，如“222222  \n9山H≌]欧A\\@2丨5S/2≌H≌」几αH”等。  \n例如，“2③2E2@A5H△5  \n（扎西在写作业的同时给爸爸打电话问家里情况）”",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "通过算法1提取例句中的拟紧缩音节“、、、H，H、S§2、2”，由算法2可识别“，Z、Z，S2、”中的 $\\mathfrak { N }$ 或’为后加字，“”中的‘’是紧缩格，由紧缩格的特征（3）可以判断“”中的‘’是后加字，规则法无法判断“2”中的‘2’是否为紧缩格。",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "算法3紧缩格的“添加-还原”算法",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "1：输入： $W { = } { < } W _ { \\mathrm { i } { - } 2 } { \\mathrm { , } } W _ { \\mathrm { i } { - } 1 } { \\mathrm { , } } W _ { \\mathrm { i } } { \\mathrm { , } } W _ { \\mathrm { i } { + } 1 } { \\mathrm { , } } W _ { \\mathrm { i } { + } 2 } { > } { ; } / / w$ 为拟紧缩格的五元处理对象  \n2：输出：1或-1，1表示拟紧缩音节 $w _ { i }$ 为紧缩音节，-1表示无法判断  \n3： $w ^ { \\prime } = \\ w _ { i } .$ ‘拟紧缩格’；  \n4： $w ^ { \\prime } { } ^ { \\prime } { = } w _ { \\mathrm { i - } 1 } \\mathrm { + } w _ { \\mathrm { i } }$ ‘拟紧缩格’；  \n5： $w ^ { \\prime \\ 3 \\ 3 } = w _ { \\mathrm { i } - 2 } + w _ { \\mathrm { i } - 1 } + w _ { \\mathrm { i } } -$ ‘拟紧缩格’；  \n6：if(w'中最后一个字符或者倒数第二个字符为下加字或元音或上加字)  \n7: $\\dot { \\bf 1 } + ( w ^ { 3 } )$ 或者 $\\boldsymbol { w } ^ { \\prime \\prime \\prime } \\in \\mathsf { D B } 2$ ）  \n8: return1;  \n9: else return -1;  \n10:else $\\begin{array} { r }  \\mathrm { i } \\mathsf { f } ( \\boldsymbol { w } ^ { , , } + \\mathbf { \\varphi } ^ { , } \\end{array}$ 或者 $w ^ { , , , , } + \\mathrm { ~  ~ \\cdot ~ } { \\sf a } ^ { , } \\in \\mathrm { D B 2 } )$   \n11: return 1；  \n12: else return -1;",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "DB2 中存放了二音节词、三音节词且最后一个音节是无后加字或后加字为‘Q’的词，主要用于利用“添加-还原”法判断紧缩格，如“』』”等词。",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "2.2.2紧缩格的最大熵识别的方法",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "Jaynes于1957年首次提出最大熵原理之后，被广泛应用于自然语言处理领域。其基本原理为：在已知部分信息的前提下，关于未知分布最合理的推断应该是符合已知信息最不确定或最大随机的推断[18]。藏文紧缩格识别可看做是一个序列标注问题，标注时对每个对象随机标注一个标签，并建立已知特征 $\\textbf { x }$ 的条件下输出标签y的概率分布模型 $\\mathsf { p } ( \\mathsf { p } \\in \\mathsf { P } )$ 。其中 $\\textbf { x }$ 属于上下文信息集 $\\mathbf { \\boldsymbol { X } } ( \\mathbf { \\boldsymbol { x } } \\in \\mathbf { \\boldsymbol { X } } )$ ，而 $\\mathbf { y }$ 属于对应的标签集 $\\mathrm { Y } ( \\mathrm { y } \\in \\mathrm { Y } )$ 。从训练集中可获得N个样本集，即 $\\mathrm { S = \\{ ( x 1 , y 1 ) , ( x 2 , y 2 ) , \\cdots , ( x n , y n ) \\} }$ ，根据这些样本可以定义一个事件空间，其特征是一个二值函数 f:X$\\times \\mathrm { Y } \\substack {  \\{ 0 , 1 \\} }$ ，其定义如下：",
        "page_idx": 3
    },
    {
        "type": "equation",
        "text": "$$\nf ( x , y ) = { \\left\\{ \\begin{array} { l l } { 1 } & { { \\mathrm { i f ~ } } x = x _ { i } { \\mathrm { ~ a n d ~ } } y = y _ { i } , ( x _ { i } , y _ { i } ) } \\\\ { 0 } & { { \\mathrm { o t h e r w i s e } } } \\end{array} \\right. }\n$$",
        "text_format": "latex",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "则模型 $\\mathfrak { p }$ 的熵为：",
        "page_idx": 3
    },
    {
        "type": "equation",
        "text": "$$\nH { \\big ( } p { \\big ) } = - \\sum _ { x , y } p { \\big ( } x , y { \\big ) } \\log { \\big ( } p { \\big ( } x , y { \\big ) } { \\big ) }\n$$",
        "text_format": "latex",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "从式(1)中可得出最大熵模型为",
        "page_idx": 3
    },
    {
        "type": "equation",
        "text": "$$\nP ^ { * } = \\arg \\operatorname* { m a x } _ { p \\in c } H \\left( p \\right)\n$$",
        "text_format": "latex",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "式(2)中的C为符合约束条件的模型集合，然后计算满足C条件的最大 $\\mathfrak { p } ^ { * }$ ",
        "page_idx": 3
    },
    {
        "type": "equation",
        "text": "$$\nP ^ { * } \\left( \\boldsymbol { y } \\mid \\boldsymbol { x } \\right) = \\frac { 1 } { z \\left( \\boldsymbol { x } \\right) } \\mathrm { e x p } \\Bigg ( \\sum _ { i } \\lambda _ { i } f _ { i } \\left( x , \\boldsymbol { y } \\right) \\Bigg )\n$$",
        "text_format": "latex",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "其中： $Z ( \\mathbf { x } )$ 是归一化常数，并有",
        "page_idx": 3
    },
    {
        "type": "equation",
        "text": "$$\nz \\big ( x \\big ) = \\sum _ { y } \\exp \\Biggl ( \\sum _ { i } \\lambda _ { i } f _ { i } \\big ( x , y \\big ) \\Biggr )\n$$",
        "text_format": "latex",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "式(3)(4)中的 $\\lambda _ { i }$ 为模型参数，即特征 $f _ { \\mathrm { i } }$ 对应的权重 $\\lambda _ { i }$ ，可通过IIS 算法[4]来估计。",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "藏文紧缩格的识别需要把原始文本内容进行序列标注，如“''52[因这里没有桥)”的文本语料，经过标注后的训练语料为“'F'Q'T'N''N'5'N''TI\"。其中T 表示紧缩格，F表示后加字，N表示不是拟紧缩格。首先将{T,F，N}作为标签集，每个音节及其上下文信息作为输入值；然后使用最大似然估计统计语料中每个特征概率；最后选取模型返回的每个标签的最大输出概率。",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "最大熵模型中针对研究对象选择有效的上下文特征是一个关键问题，根据藏文词语音节的分布特点及上下文激发环境确定了模型，并抽取特征模板。本文选取的特征模板见表2。",
        "page_idx": 3
    },
    {
        "type": "table",
        "img_path": "images/6b559a1744f27d83b4f9d8ff24984b93e1c787cefdba8d1b75a02042fc02378d.jpg",
        "table_caption": [
            "表2特征模板"
        ],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>序号</td><td>原子模板</td><td>模板意义</td></tr><tr><td>1</td><td>NJ</td><td>当前字 (拟紧缩格)</td></tr><tr><td>2</td><td>LNJ</td><td>拟紧缩格和其前一音节</td></tr><tr><td>3</td><td>RNJ</td><td>拟紧缩格和其后一音节</td></tr><tr><td>4</td><td>NJL</td><td>拟紧缩格和其后两个音节</td></tr><tr><td>5</td><td>NJR</td><td>拟紧缩格和其前两个音节</td></tr><tr><td>6</td><td>NJR_R</td><td>去掉紧缩格的字串和其前一音节</td></tr></table></body></html>",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "训练语料的每个音节都采用以上特征模板，拟紧缩格前的音节不足时，用“start”补充，拟紧缩格后音节不足时，用“end”补充，统计模型采用最大熵模型开源程序包。",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "3 实验数据",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "本文在青海师范大学建立的语料中选取了含66184个字的语料作为测试语料（其中拟紧缩格有9387个)，对已有紧缩格识别方法和本文提出的紧缩格识别方法进行了测试。为了确保语料的准确性，全部经过人工反复校对。语料领域包括政治、教材、历史、小说、新闻五种题材，测试方式包括开放测试和封闭测试两种。封闭测试时，用全语料进行训练，然后随机选取 $30 \\%$ 做测试语料；开放测试时，其中的 $80 \\%$ 做训练语料， $20 \\%$ 做测试语料。实验结果见表3。其中，方法A指文献[4]采用的规则、统计相结合的方法，方法B是文献[11]提出的添加还原法，方法C 是文献[13]采用的条件随机场技术，方法D 是文献[14]采用的感知机技术；方法E1、E2、E3、E4分别表示本文提出的紧缩格的规则识别方法、“添加一还原”算法、最大熵识别的方法、“规则 $^ +$ 还原法 $^ { + }$ 最大熵”法(简称为混合法）。",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "由表3可见，紧缩格的识别仅用规则法或统计法其效果不佳，规则和统计相结合的方法识别紧缩格的准确率较高。本文结合规则、添加还原法和最大熵三种方法识别藏文紧缩格，在封闭语料上的测试准确率、召回率和F1值分别达 $9 9 . 8 1 \\% . 9 9 . 1 9 \\%$ 和99.50，在开放语料上的测试准确率、召回率和F1值分别达$9 9 . 2 6 \\%$ ， $9 6 . 4 7 \\%$ 和97.85，比现有最高的准确率有了较明显的提高。",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 4
    },
    {
        "type": "table",
        "img_path": "images/6abcc6ac960072a204e6c1eaa58e770c547a4d9ba9e950bf9f67e11a2e0aaaa1.jpg",
        "table_caption": [
            "表3紧缩格识别实验数据"
        ],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>方法</td><td>测试</td><td>准确率/%</td><td>召回率/%</td><td>F1值/%</td></tr><tr><td>A</td><td>开放</td><td>98.19</td><td>91.50</td><td>94.73</td></tr><tr><td>B</td><td>开放</td><td>95.51</td><td>78.96</td><td>86.44</td></tr><tr><td>C</td><td>开放</td><td>95.92</td><td>78.95</td><td>86.61</td></tr><tr><td>D</td><td>开放</td><td>94.11</td><td>66.60</td><td>78.00</td></tr><tr><td>E1</td><td>开放</td><td>85.29</td><td>85.29</td><td>85.29</td></tr><tr><td>E2</td><td>开放</td><td>42.70</td><td>23.03</td><td>29.92</td></tr><tr><td>E3</td><td>开放</td><td>95.74</td><td>81.28</td><td>87.92</td></tr><tr><td rowspan=\"2\">E4</td><td>封闭</td><td>99.81</td><td>99.19</td><td>99.50</td></tr><tr><td>开放</td><td>99.26</td><td>96.47</td><td>97.85</td></tr></table></body></html>",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "在方法E4中主要出现了两类错误，一类是拟紧缩格后的格助词没能正确识别，例如，“（木匠更嘎乘飞烟在空中遨游)”中，由于把兼类格助词\"5\"识别成了格助词，从而没能识别拟紧缩音节“5”中的紧缩格，这类错误可以通过提高格助词识别得以解决；另一类是训练语料没能覆盖，这类错误可通过增大训练语料的方式弥补。",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "4 结束语",
        "text_level": 1,
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "藏文紧缩格的识别是藏文分词中最难最重要的技术之一。本文通过剖析已有藏文紧缩词识别方法，分析藏文紧缩格的特征，针对性地设计了识别藏文紧缩格规则算法、添加一还原算法和最大熵模型的特征模板，结合三种算法对藏文紧缩格进行了识别。实验数据表明，该方法识别藏文紧缩格的准确率、召回率和F1值分别达 $9 9 . 2 6 \\%$ 、 $9 6 . 4 7 \\%$ 、 $9 7 . 8 5 \\%$ ，比现有最高的准确率有了较明显的提高。今后在此基础上研究藏文分词技术，使藏文分词尽早满足实际需求。",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "致谢：本文在测试紧缩格的识别效果时，中国科学院刘汇丹老师、西北民族大学李亚超老师、青海师范大学华却才让老师和完么扎西老师等给予了帮助，特此表示衷心的感谢！",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "参考文献：",
        "text_level": 1,
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "[1]孙萌，刘群．基于判别式分类和重排序技术的藏文分词[C]//第十二",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "届全国少数民族语言文字信息处理学术研讨会论文集.2011.  \n[2] 陈玉忠，李保利，俞士汶．藏文自动分词系统的设计与实现[J].中文信息学报,2003,17(3):15-20.  \n[3]才智杰．班智达藏文自动分词系统的设计与实现[J].青海师范大学民族师范学院学报,2010,21(2):75-77.  \n[4]刘汇丹，诺明华，赵维纳，等.SegT:一个实用的藏文分词系统[J]．中文信息学报,2012,26(1):97-103.  \n[5]史晓东，卢亚军．央金藏文分词系统[J].中文信息学报,2011,25 (4):54-56.  \n[6]康才唆．藏语分词与词性标注研究[D].上海：上海师范大学,2014.  \n[7]龙从军，刘汇丹．藏文自动分词的理论与方法研究[M].北京：知识产权出版社,2016.  \n[8]李亚超，江静，加羊吉，等.TIP-LAS：一个开源的藏文分词词性标注系统[J]．中文信息学报,2015,29(6):204-207.  \n[9] 洛桑嘎登，杨媛媛，赵小兵．基于知识融合的 CRFs藏文分词系统[J].中文信息学报,2015,29(6):213-219.  \n[10]李亚超，加羊吉，江静，等．融合无监督特征的藏文分词方法研究[J].中文信息学报,2017,31(2):72-75.  \n[11]才智杰．藏文自动分词系统中紧缩词的识别[J].中文信息学报,2009,23 (1): 35-37.  \n[12]完么扎西，尼玛扎西．藏语自动分词中的几个关键问题的研究[J].中文信息学报,2014,28(4):132-139.  \n[13]李亚超，加羊吉，宗成庆，等．基于条件随机场的藏语自动分词方法研究与实现[J]．中文信息学报,2013,27(4):51-58.  \n[14]华却才让，姜文斌，赵海兴，等．基于感知机模型藏文命名实体识别[J]．计算机工程与应用,2014,50(15):172-176.  \n[15]康才唆，龙从军，江获．基于词位的藏文黏写形式的切分[J].计算机工程与应用,2014,50(11):218-222.  \n[16]吉太加．藏文语法研究[M].青海：青海民族出版社,2013.  \n[17]才智杰，才让卓玛．班智达藏文标注词典设计[J]．中文信息学报,2010,24 (5): 46-49.  \n[18]宗成庆．统计自然语言出处理[M].2版．北京：清华大学出版社,2013,81-128.  \n[19] Liu Huidan, Zhao Weina, Nuo Minghua,et al. Tibetan word segmentationassyllable-tagging using conditional random fields [C]// Proc of the 25thPacific Asia Conference on Language, Information and Computation. 2011:168-177.  \n[20]于江德，王希杰，樊孝忠．基于最大熵模型的词位标注汉语分词[J].郑州大学学报：理学版,2011,43(1):70-74.",
        "page_idx": 4
    }
]