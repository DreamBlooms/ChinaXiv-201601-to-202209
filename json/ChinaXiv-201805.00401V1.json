[
    {
        "type": "text",
        "text": "基于梯度提升决策模型的空间占用检测研究",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "徐新卫1,²，丁敬安1，柳智才1，王多梅³，腾翔1，邵瑞瑞1(1.安徽工业大学 管理科学与工程学院，安徽 马鞍山 24300;2.南京大学 计算软件新技术国家重点实验室，南京210000;3．河海大学 公共管理学院，南京 210000)",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "摘要：随着绿色建筑和绿色生态城区经济激励机制基本形成，面对大量多维空间占用数据，“大数据绿色建筑”节能体系应运而生。然而大量多维的建筑数据却没有被充分利用，且传统空间占用检测模型分类精度还不够准确，模型时间复杂度较高。利用UCI占用检测数据集，在原始数据集上加入时间戳，使模型分类精度均获得提高，同时利用 MCMR（最大相关最小冗余）方法进行特征选择，通过随机森林作为分类器验证分类效果，获取最优特征子集。且利用选取的特征子集构建占用检测模型，其中XGB0ost模型与随机森林模型（RF）进行比对，分类精度较高，且时间复杂度更低。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "关键词：大数据绿色建筑；空间占用检测；最大相关最小冗余；梯度提升算法中图分类号：TP301.6 doi:10.3969/j.issn.1001-3695.2017.09.0907",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Occupancy detection based on extreme gradient boosting decision model ",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Xu Xinwei1,², Ding Jingan1,Liu Zhicai1,Wang Duomei³, Teng Xiang1, Shao Ruirui1 (1.SchoolofanagementScience&EngineeringAnhui UniversityofTechnologyMaanshanAnhui2430o,China;2State KeyLaboratoryforNovelSoftwareTechnology,NanjingUniversityNanJing0o,China;3.hoolofpublicdmintation Hohai University,NanJing 21000, China) ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Abstract: Withthe green buildings and green-economic environmentalcities are graduall formed,\"bigdata greenbuilding\" energyconservationsystemscome intobeing.However,alarge numberofmulti-dimensionalbuildingdataarenotfullyutilized andoccupancydetection withaccuracyof traditional algorithms isnotaccurate with the highertimecomplexity.This article acquiredthe data of Occupancy Detection from UCI.Adatimestamp to theoriginal dataset,te auracy is increased.Using the MCMR methodto select features with maximum correlation and minimumredundancy,random forest is using as clasifier to verifyclasificationefect.TheXGBoost modelconstructedbytheoptimalsubsetiscompared with therandomforestmodel (RF),and the classification accuracy is higher and the time complexity is lower. ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "KeyWords:big data of green buildings; occupancy detection; MCMR;XGBoost ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "2017年3月1号，《住房城乡建设事业“十三五”规划纲要》提出“发展绿色建筑、绿色建材，大力强化建筑节能”，明确要求“到2020年，城镇新建建筑中绿色建筑推广比例超过$50 \\%$ ，绿色建材应用比例超过 $40 \\%$ ，新建建筑执行标准能效要求比‘十二五’期末提高 $20 \\%$ ”。3月21日，以\"提升绿色建筑质量，促进节能减排低碳发展\"为主题的第十三届国际绿色建筑与建筑节能大会暨新技术与产品博览会在北京国家会议中心召开，会议上除了从国家政策、经济形势、产品提升、运营管理等方面探讨，技术创新、平台建设与大数据分析等方面成为建设绿色建筑与建筑节能的热点话题。由于我国人口众多，资源、能源有限，能源、经济和环境问题已经成为一个城市的热点话题,如何合理的综合利用能源,提高城市能源利用效率、优化资源配置、保护人类赖以生存的自然环境已然是当今社会关注的热点问题。同时随着“大数据”时代的到来，绿色建筑发展理念[I'2]和数据挖掘、机器学习等技术的结合得到了一定的发展，通过对大量多维异构建筑空间占用数据特征提取，寻找最优特征子集构建模型，进行空间占用检测，提高检测的分类精度，是对建筑内部相关能源优化配置的一种新方法。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "空间占用检测本质属于模式识别范畴[3-5],利用多传感器监测室内环境获取空间占用，通过特征的提取和分类算法的选择进行分类模型的构建，对空间占用状态进行预测，利用预测的准确性进行HVAC系统智能控制，达到节省能源耗费的目的。研究表明通过空间占用检测技术对 $H A V C$ 进行智能控制，理论上估计能够年节省能源 $2 9 \\% { \\sim } 8 0 \\%$ 左右[6\\~10]。通过摄像机与传感器引入时间特征，获得实时数据，作为扩展卡尔曼滤波算法模型输入值，能够提高空间占用检测准确率[II]。利用RFID 技术和运动传感器进行实时空间占用检测能够减少天然气消耗和空间被占用但房间不温暖的时间，从而提高空间的舒适度[12]。通过不同的特征组合与算法模型的结合，对空间占用检测的准确率也有一定的影响。提取商业建筑现有的环境资源，包括进入许可证、无线记录，日程表，通信客户端等获得数据，使用线性回归和C4.5 算法进行占用检测准确率达到 $90 \\%$ 左右[13]。通过决策树对单传感器数据进行占用检测得到的准确率是 $9 7 . 9 \\%$ ，进行多传感器数据特征组合检测的准确率可达 $9 8 . 4 \\%$ 。而加入声音和 $C O _ { 2 }$ 等传感器数据时，预测的结果却不太理想，得出决策树可以提高单一传感器检测准确率，对过多传感器数据特征组合检测会出现精度下降现象[14]。通过对光线、温度、湿度、$C O _ { 2 }$ 等传感器数据特征组合进行空间占用检测时，发现随机森林在对全部特征组合进行预测时，出现过拟合现象。而线性判别分析在仅只有两个特征的准确率可以达到 $9 7 \\%$ ，不同的特征组合对预测的精确度有影响[15]。通过上述文献分析，其一，可以发现引入时间戳能够提高空间占用检测的准确率；其二，多传感器特征组合，却导致分类模型分类精度下降，分析主原因是，特征与特征之间具有高度相关性，或者存在冗余特征。某些特征包含类别信息量较少，对分类识别效果很低，影响模型的分类性能和时间复杂度。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "针对多传感器特征组合出现模型分类精度下降以及时间戳引入提高检测率等问题，本文提出了一种最大相关最小冗余MCMR（maximumcorrelation and minimum redundancy）的特征选择算法。在UCI占用检测原始数据集上提取时间变量，细化时间粒度从而引入时间戳形成新的数据集，在新的数据集上利用MCMR进行特征的选择，选择出的最优特征子集作为梯度提升决策模型（XGBoost）算法的输入。XGBoost是一种梯度提升框架下的集成学习算法，具有灵活可移植的分布式决策梯度提升库，在处理大量数据时，保证相对较高分类精度下，时间复杂度更低[16-18]。在分类研究中，采用该方法对空间占用信息提取进行详细研究成果较少。本文结合了MCMR进行特征选择的优点与XGboost分布式并行运算的优点相结合，从特征组合的角度达到了提升空间占用自动识别模型的准确率，同时降低了模型的时间复杂度。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "本文主要贡献如下，在原始数据的基础上，加入时间戳，改变XGBoost和 $R F$ 算法无法处理时间变量。实验结果表明，加入时间戳与没有加入时间戳的模型相比分类精度均得到提高，变化最明显的是XGBoost 在testing 测试集上分类精度提高了$4 . 0 9 \\%$ ， $R F$ 在testing数据集上分类精度提高了 $2 . 7 8 \\%$ 。同时，$R F _ { - } I$ 比文献19引入时间戳更合理。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "利用MCMR特征选择方法进行特征选择，剔除关联度小冗余度高的HumidityRatio特征，利用随机森林作为分类器，进行迭代寻优，获取了最优特征子集。通过特征与分类算法构建检测模型得到XGBoost在训练样本数据集上的分类精度最高，精度为 $9 9 . 4 1 \\%$ ： $s V M$ 在测试样本数据集1上的分类精度最高，精度为 $9 7 . 9 0 \\%$ ；BP在测试样本数据集2上的分类精度最高，精度为 $9 9 . 0 7 \\%$ 。最后将XGBoost与随机森林（RF）分类方法进行比较，XGBoost 模型分类精度更高，算法时间复杂度更低。评估基于XGBoost算法的多传感器数据源综合分类方案在空间占用分类中更实用，为HAVC系统智能控制及构建绿色建筑节能体系提供依据。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "1 理论与方法",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "1.1MCMR特征选择方法",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "基于关联性较小冗余度较高的特征，影响分类模型的精度，所以需要对样本数据集进行特征筛选。特征选择目的在于从样本数据集合中选择一个规模较小的特征子集，该子集能够在数据挖掘和机器学习任务中提供与原集合近似或者更好的表现。在不改变特征包含类别信息量的基础上，较少特征为数据提供了更强的可解读性[19-20]。传统特征选择方法中，特征之间的相关性只考虑特征之间的线性相关或非线性，没有考虑特征之间的全相关性，再者特征选择往往将特征相关性和冗余性分割判断，无法判断整个特征子集的组合效应[21-22]。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "以线性相关和非线性相关为基础，计算特征之间的全相关系数度量特征间的独立和冗余程度。同时以信息论为基础，计算特征与类别间的互信息，即特征含有类别信息量的大小，表示特征与类别间的关联程度[23-27]。综合封装式和滤波式两种特征选择方法的优点，本文提出一种最大相关最小冗余MCMR（MaximumCorrelationandMinimumRedundancy）的特征选择算法。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "假设样本集中想 $x , \\ y$ 分别表示长度为 $n$ 的成对连续变量，通过pearson相关，计算特征之间的线性相关系数 $\\mathrm { ~ \\bf ~ r ~ }$ ，如式（1）所示。",
        "page_idx": 1
    },
    {
        "type": "equation",
        "text": "$$\nr = { \\frac { \\sum \\left( x - { \\overline { { x } } } \\right) ( y - { \\overline { { y } } } ) } { \\sum \\left( x - { \\overline { { x } } } \\right) ^ { 2 } \\sum ( y - { \\overline { { y } } } ) ^ { 2 } } }\n$$",
        "text_format": "latex",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "构造关联度矩阵 $A$ 。利用距离相关，计算特征之间的非线性相关系数 ${ \\mathrm { R _ { n } } } ^ { * }$ ，构造关联矩阵 $B$ ，dcov $( x , y )$ 为变量 $x , y$ 的距离协方差,dvar(x)与dvar(y)分别为变量 $x , \\ y$ 的距离标准差，如式（2）所示。",
        "page_idx": 1
    },
    {
        "type": "equation",
        "text": "$$\nR _ { n } ^ { * } = d c o r ( x , y ) = \\frac { d c o \\nu ( x , y ) } { d \\nu a r ( x ) d \\nu a r ( y ) }\n$$",
        "text_format": "latex",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "综合线性相关和非线性相关，计算特征之间的全相关，得到关联矩阵 $C$ 。特征之间的全相关计算过程如下，全相关系数为 $w$ 。",
        "page_idx": 1
    },
    {
        "type": "equation",
        "text": "$$\nw = e ^ { [ e ^ { | r | - 1 } + e ^ { R _ { n } ^ { * } - 1 } ] - 2 }\n$$",
        "text_format": "latex",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "其中： $i , \\ j$ 代表关联矩阵中第 $i$ 为 $j$ 列，得到全相关矩阵 $C _ { \\circ }$ ",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "以信息论为基础，计算特征与类别间的互信息用 $P ( x _ { i } )$ 表示特征 $x$ 取第 $i$ 个值 $x _ { i }$ 的概率， $P ( x _ { i } | y _ { j } )$ 表示类别 $y$ 取值为 $y _ { j }$ 时特征 $x$ 取值为 $x _ { i }$ 的概率。 $x$ 的信息熵 $H ( x )$ 及已知变量 $y$ 后 $x$ 的条件信息熵 $H ( x | y )$ 的计算方法如下：",
        "page_idx": 2
    },
    {
        "type": "equation",
        "text": "$$\nH ( x ) = - \\sum _ { i } p ( x _ { i } ) l o g p ( x _ { i } )\n$$",
        "text_format": "latex",
        "page_idx": 2
    },
    {
        "type": "equation",
        "text": "$$\nH ( x \\mid y ) = - \\sum _ { j } p ( y _ { j } ) \\sum _ { i } p ( x _ { i } \\mid y _ { j } ) l o g p ( x _ { i } \\mid y _ { j } )\n$$",
        "text_format": "latex",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "变量 $x , y$ 之间的互信息 $M I ( x , \\ y )$ 可按以下公式计算：",
        "page_idx": 2
    },
    {
        "type": "equation",
        "text": "$$\n\\begin{array} { l } { { \\displaystyle M I ( x , y ) = H ( x ) - H ( x \\mid y ) = H ( y ) - H ( y \\mid x ) } } \\\\ { { \\displaystyle = \\sum _ { x , y } p ( x y ) \\log \\frac { p ( x y ) } { p ( x ) p ( y ) } } } \\end{array}\n$$",
        "text_format": "latex",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "然而互信息存在偏好等问题，所以本文采用互信息率来度量特征 $x$ 与类别 $y$ 间的相关性：",
        "page_idx": 2
    },
    {
        "type": "equation",
        "text": "$$\ns i m ( x , y ) = { \\frac { M I ( x , y ) } { H ( x ) } }\n$$",
        "text_format": "latex",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "由此得到的相关度 $s i m ( x , \\ y )$ 的取值范围在[0,1]，相关度为  \n0 表示两个特征不相关，相关度为1，则表示两个特征完全相  \n关。MCMR特征选择算法描述如下：输入：训练集 $D = \\left\\{ \\left( x _ { 1 } , y _ { 1 } \\right) , \\left( x _ { 2 } , y _ { 2 } \\right) , \\ldots , \\right. \\left. \\left( x _ { m } , y _ { m } \\right) \\right\\}$ a）离散化及初始：采用ChiMerge方法离散数据集 $\\mathrm { ~ D ~ }$ 中的  \n连续特征，结果仍用D表示；b）根据式 $( 1 ) \\sim ( 2 )$ 计算数据集 $\\mathrm { ~ D ~ }$ 中任意两个特征之间  \n的全相关系数 $w$ ，根据式（4） $\\sim ( 7 )$ 计算数据集D特征类别  \n之间相关系数sim;c）设置参数 $\\mathsf { \\alpha } \\in [ 0 , 1 ]$ ，找出 $w { \\ > } { \\mathfrak { a } }$ 相关特征，比较 $s i m$ 值；d）删除 $s i m$ 值较小的特征，通过随机森林分类器精度验证  \n合理性；否则，updata $\\scriptstyle { \\mathfrak { a } } = { \\mathfrak { a } } + 1$ ，回到第3步；e) end for.输出：特征子集 $d = \\left\\{ \\left( x _ { 1 } , y _ { 1 } \\right) , \\left( x _ { 2 } , y _ { 2 } \\right) , \\ldots , \\quad \\left( x _ { n } , y _ { n } \\right) \\right\\}$ ",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "1.2梯度提升算法分类机制",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "XGBoost（extreme gradientboosting，XGBoost）是一种基于GBDT（gradientboostingdecisiontree，GBDT）梯度下降框架的集成学习算法。GBDT是“梯度下降”和决策树相结合，基于前一个模型残差减少的方向上，构造新的分类器，依次迭代，构造一组弱分类器，弱分类器输出结果进行加权累加作为强分类器输出结果[28-29]。XGBo0st与GBDT区别在于，改变了GBDT基于Boosting串行序列化求解问题，利用CPU多线程分布式并行计算，并通过对残差进行泰勒二次展开进行求解，从而打破现有库的计算速度和精度，使得数据处理和运算的速度得到了提升。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "训练GBDT分类算法基本步骤如下：",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "输入：训练集 $D = \\left\\{ \\left( x _ { 1 } , y _ { 1 } \\right) , \\left( x _ { 2 } , y _ { 2 } \\right) , \\ldots , \\right. \\left. \\left( x _ { m } , y _ { m } \\right) \\right\\}$ a)初始 $F ^ { * } \\left( x \\right) = a r g m i n E _ { y } \\left[ L \\left( y , F \\left( x \\right) \\right) | x \\right]$ ",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "b) $F _ { \\mathrm { 0 } } \\left( x \\right) = f _ { \\mathrm { 0 } } \\left( x \\right)$   \nc) for $\\mathrm { m } { = } 1 , 2 , { \\ldots } { } \\mathrm { M }$ do;   \n(a) $g _ { _ { m } } \\left( x \\right) = - \\frac { \\hat { \\sigma } E _ { y } \\left[ L \\left( y , F \\left( x \\right) \\right) \\mid x \\right] } { \\hat { \\sigma } F \\left( x \\right) } \\mid _ { _ { F \\left( x \\right) = F _ { _ { m - 1 } } \\left( x \\right) } } ;$ （20   \n(b) $\\rho _ { m } = \\arg \\operatorname* { m i n } E _ { y } [ L ( y , F _ { m - 1 } ( x ) ) + \\rho g _ { m } ( x ) | x ] \\ ;$ （204号 d) Update $F _ { _ m } \\left( \\mathrm { x } \\right) = F _ { _ { m - 1 } } \\left( x \\right) + \\mathrm { \\rho } _ { _ m } g _ { _ m } \\left( x \\right)$   \ne) end for. ",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "输出 $\\boldsymbol { F } ^ { * } \\left( \\boldsymbol { x } \\right) \\approx \\boldsymbol { F } _ { m } \\left( \\boldsymbol { x } \\right) = \\boldsymbol { f } _ { 0 } \\left( \\boldsymbol { x } \\right) + \\sum _ { m = 1 } ^ { M } \\boldsymbol { \\rho } _ { m } \\boldsymbol { g } _ { m } \\left( \\boldsymbol { x } \\right)$ ",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "上述步骤中， $F ^ { * } ( x )$ 为寻找使得期望损失最小的决策函数，$L ( y , F ( x ) )$ 为损失函数， $g _ { m } ( x )$ 为当前模型的负梯度方向， $\\rho _ { \\textrm { m } }$ 为计算损失函数的负梯度在当前模型的值，将它作为残差的估计，估计回归树叶节点区域，以拟合残差的近似值，利用线性搜索估计叶节点区域的值，使损失函数极小化，更新回归树，得到输出的最终模型 $F _ { m } \\left( x \\right)$ 。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "XGBoost对损失函数 $o b j ^ { ( t ) }$ 做了二阶的泰勒展开，并在目标函数之外加入正则项 $\\Omega ( \\mathscr { f } _ { t } )$ ，整体求最优解，用以权衡目标函数的下降和模型复杂程度，避免过拟合。式（8）中将目标函数做泰勒展开，并引入正则项：",
        "page_idx": 2
    },
    {
        "type": "equation",
        "text": "$$\n\\mathrm { o b j } ^ { ( t ) } = \\sum _ { i = 1 } ^ { n } l ( y _ { i } , y _ { i } ^ { ( t - 1 ) } + f _ { t } ( x _ { i } ) ) + \\Omega ( f _ { t } ) + c o n s t a n t\n$$",
        "text_format": "latex",
        "page_idx": 2
    },
    {
        "type": "equation",
        "text": "$$\n\\approx \\sum _ { i = 1 } ^ { n } [ l ( \\boldsymbol { y } _ { i } , \\boldsymbol { y } _ { i } ^ { \\scriptscriptstyle ( t - 1 ) } ) + \\hat { \\mathcal { O } } _ { \\boldsymbol { y } _ { i } ^ { \\scriptscriptstyle ( t - 1 ) } } l ( \\boldsymbol { y } _ { i } , \\boldsymbol { y } _ { i } ^ { \\scriptscriptstyle ( t - 1 ) } ) f _ { \\mathbf { \\Phi } _ { t } } ( \\boldsymbol { x } _ { i } ) +\n$$",
        "text_format": "latex",
        "page_idx": 2
    },
    {
        "type": "equation",
        "text": "$$\n\\frac { 1 } { 2 } \\hat { O } _ { y _ { i } } ^ { ^ 2 } { } ^ { . . . \\hat { l } ( y _ { i } , y _ { i } ^ { . . 1 } ) } f _ { \\mathrm { \\ell } _ { t } } ^ { ^ 2 } ( x _ { i } ) ] + \\Omega ( f _ { \\mathrm { \\ell } _ { t } } ) + c o n s t a n t\n$$",
        "text_format": "latex",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "求解每个样本的一阶导 $g _ { i }$ 和二阶导 $h _ { i }$ ，将目标函数按叶子节点归约分组得如下公式：",
        "page_idx": 2
    },
    {
        "type": "equation",
        "text": "$$\no b j ^ { \\left( t \\right) } \\approx \\sum _ { i = 1 } ^ { n } [ g _ { _ i } f _ { _ t } ( \\chi _ { i } ) + \\frac { 1 } { 2 } h _ { _ { i } } f _ { _ t } ^ { 2 } ( \\chi _ { i } ) ] + \\Omega ( f _ { t } )\n$$",
        "text_format": "latex",
        "page_idx": 2
    },
    {
        "type": "equation",
        "text": "$$\n= \\ \\sum _ { j = 1 } ^ { r } [ G _ { i } w _ { i } \\ + \\ \\frac { 1 } { 2 } \\left( H _ { i } \\ + \\ \\lambda w _ { i } ^ { 2 } \\right) ] \\ + \\ r T\n$$",
        "text_format": "latex",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "2 空间占用检测模型构建流程",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "本文对空间占用样本数据集加入时间戳，利用MCMR特征选择法，删除关联度低，冗余度高的特征，选取最优特征子集，利用最优特征子集以及XGBoost分类算法构建空间占用检测模型，流程图如图1所示，主要包括以下几个步骤：",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "a)加入时间戳。通过对原始数据集日期变量进行重新提取，增加分类特征，改变原有算法模型不能直接处理时间变量，对空间占用进行实时检测，构建样本数据集。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "b)利用MCMR方法选择特征。通过计算特征之间全相关系数，及特征与类别之间的互信息率，选择相关度较高冗余度较低的特征。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "c特征子集选取及验证。利用封装式随机森林特征递归删减法，验证MCMR特征选择方法的合理性，获取最优特征子集。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "d)训练分类器构建。输入上一步选取的特征子集作为训练样本，通过迭代建立一系列回归决策树，构成XGboost分类器",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "学习模型。",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "$e ) H A V C$ 系统智能控制。通过分类器模型的学习，获得较高分类精度的模型。依据学习逻辑对现有室内环境变量因素分析，预测占用状态，智能调节HAVC系统，达到节省能耗的目的。",
        "page_idx": 3
    },
    {
        "type": "image",
        "img_path": "images/9523287ebe7a5a178f7a77596ecd6af252519348fa4ee803d82365babc4750b9.jpg",
        "img_caption": [
            "图1空间占用检测模型构建流程图"
        ],
        "img_footnote": [],
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "3 实验设计与结果分析",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "3.1实验数据 ",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "空间占用检测影响因素往往存在检测困难等问题，所以只能获得较容易监测数据，导致大体量超高维数据很难获得，本文的数据来源于UCI上Occupancy Detection 数据集，其中训练集training和测试集testing均是门关闭时测量得到，testing2测试集是门打开时测量得到，数据集包含的变量为：时间(Date)、温度（T)、湿度 $( H )$ 、光照（Light）、 $C O _ { 2 }$ 浓度（ $C O _ { 2 }$ 、湿度比（HR）和占用状态（Occupancy），training为8143条记录，testing为2665条记录，testing2为9752条记录。其中 training数据格式如表1所示。",
        "page_idx": 3
    },
    {
        "type": "table",
        "img_path": "images/7e71c51c70e80a4e074c56d1c7096964d4568d4033cc56d214114a93aa23110b.jpg",
        "table_caption": [
            "表1实验数据集"
        ],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>Date</td><td>T</td><td>H</td><td>Light</td><td>CO2</td><td>HR</td><td>Occupancy</td></tr><tr><td>2015/2/418:04</td><td>23</td><td>27.125</td><td>419</td><td>686</td><td>0.004714942</td><td>1</td></tr><tr><td>2015/2/418:06</td><td>23</td><td>27.125</td><td>418.5</td><td>680.5</td><td>0.004714942</td><td>1</td></tr><tr><td>2015/2/418:07</td><td>23</td><td>27.2</td><td>0</td><td>681.5</td><td>0.004728078</td><td>0</td></tr><tr><td>2015/2/418:08 22.945</td><td></td><td>27.29</td><td>0</td><td>685</td><td>0.004727951</td><td>0</td></tr><tr><td>2015/2/418:08 22.945</td><td></td><td>27.39</td><td>0</td><td>685</td><td>0.004745408</td><td>0</td></tr></table></body></html>",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "3.2评价指标",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "对于空间占用检测模型，本文选用决策模型常用的混淆矩阵，作为模型性能评价指标，对训练样本集和测试样本集进行性能度量。",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "使用 $2 { \\times } 2$ 的混淆矩阵来表示预测准确度：",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "其中：TP、TN、FP和 $F N$ 指的是模型预测值落入这些类别中的次数，因此，准确度表示正确分类的数目除于所有预测值的个数。",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "3.3 实验与分析",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "本文实验环境如下：操作系统为Windows7，CPU为Intel $\\textsuperscript { \\textregistered }$ CoreTMi5-3210M $\\textcircled { a } 2 . 5 \\mathrm { G H z }$ ，实验内存为4GB，主要实验平台Rversion3.3.3 版本。",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "1）数据预处理（1）引入时间戳",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "由于梯度提升模型和随机森林模型无法对时间变量直接处理，所以本文对收集到的数据进行如下处理，利用lubridate包对时间变量进行重新提取，公式10 中 $x$ 代表原始数据中date样本数据。",
        "page_idx": 3
    },
    {
        "type": "equation",
        "text": "$$\nT i m e = { \\frac { \\mathrm { h o u r } ( x ) \\times 3 6 0 0 + \\mathrm { m i n u t e } ( x ) \\times 6 0 + \\mathrm { s e c o n d } ( x ) } { 8 6 4 0 0 } } + \\mathrm { d a y } ( x )\n$$",
        "text_format": "latex",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "文献[19]对时间变量的处理，如式(11)(12)所示，NSM为Date样本中时、分、秒转换成总秒数和，weekstatus为星期状态，休息日为0，工作日为1。",
        "page_idx": 3
    },
    {
        "type": "equation",
        "text": "$$\n\\mathrm { N S M } = \\mathrm { h o u r } ( x ) \\times 3 6 0 0 + \\mathrm { m i n u t e } ( x ) \\times 6 0 + \\mathrm { s e c o n d } ( x )\n$$",
        "text_format": "latex",
        "page_idx": 3
    },
    {
        "type": "equation",
        "text": "$$\n{ \\mathrm { w e e k s t a t u s } } = { \\left\\{ \\begin{array} { l l } { 0 } & { { \\mathrm { w e e k d a y s } } ( x ) = { \\mathrm { w e e k e n d } } } \\\\ { 1 } & { { \\mathrm { w e e k d a y s } } ( x ) = { \\mathrm { w e e k d a y } } } \\end{array} \\right. }\n$$",
        "text_format": "latex",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "本文中引入时间戳相对文献[19]中的优点在于，细化了时间粒度，虽然文献[19]中时间戳的引入更容易解释，但是文献[19]中引入的时间特征为2个，本文只有一个特征，而且没有时间信息的丢失。在文献[19]中NSM变量值较大，没有消除量级，影响模型训练的权重，对特征选择时，依据特征重要度排序时有可能会排除掉。本文中引入时间戳，处理后得训练样本集数据如表2所示。",
        "page_idx": 3
    },
    {
        "type": "table",
        "img_path": "images/fcb535cf3f3de348ac201f280226db4af4022cbecaf0f7c2cabe373d0cf8758b.jpg",
        "table_caption": [
            "表2实验数据集"
        ],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>Date</td><td>T</td><td>H</td><td>Light</td><td>CO2</td><td>HR</td><td>Time</td><td>Occupancy</td></tr><tr><td>2015/2/418:04</td><td>23</td><td>27.125</td><td>419</td><td>686</td><td>0.004714942</td><td>4.752778</td><td>1</td></tr><tr><td>2015/2/418:06</td><td>23</td><td>27.125</td><td>418.5</td><td>680.5</td><td>0.004714942</td><td>4.752778</td><td>1</td></tr><tr><td>2015/2/418:07</td><td>23</td><td>27.2</td><td>0</td><td>681.5</td><td>0.004728078</td><td>4.754167</td><td>0</td></tr><tr><td>2015/2/4 18:08</td><td>22.945</td><td>27.29</td><td>0</td><td>685</td><td>0.004727951</td><td>4.754861</td><td>0</td></tr><tr><td>2015/2/418:08</td><td>22.945</td><td>27.39</td><td>0</td><td>685</td><td>0.004745408</td><td>4.755556</td><td>0</td></tr></table></body></html>",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "(2)基于MCMR特征选择方法",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "本文提出基于特征之间冗余度和特征与类别间的相关性相结合的特征选择方法，主要计算过程如下：利用Pearson系数对样本数据集计算线性相关矩阵 $A$ ，利用距离相关系数计算特征之间的非相关系数得矩阵 $B$ ，运用式（3）求得全相关系数矩阵C，相关系数属于[0,1]，其中(0.8,1]属于极强相关，(0.6,0.8]属于强相关，(0.4,0.6]属于中等强相关，(0.2.0.4]属于弱相关，[0.0.2]属于极弱相关或不相关。可以看出以相关系数度量特征之间的冗余程度，相关系数越大，冗余程度越高。同时基于信息论，计算特征之间互信息率，作为衡量特征与类别之间的相关性，系数越高，特征与类别之间的相关性越高。",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "通过计算求得全相关矩阵 $C$ 如表3所示，从表中可以看出HumidityRatio与Humidity全相关系数为0.96，两特征之间具有极强相关性，冗余程度非常高， $C O _ { 2 }$ 和Light之间相关系数为0.596属于中等相关，其他特征之间相关性较小，冗余程度低。",
        "page_idx": 4
    },
    {
        "type": "table",
        "img_path": "images/a9132878b1ba357c59866a24079d48c7fe41c77723f578c0a05a1abc7c992cd2.jpg",
        "table_caption": [
            "表3全相关矩阵C"
        ],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td></td><td>T</td><td>H</td><td>Light</td><td>CO2</td><td>HR</td><td>Time</td></tr><tr><td>T</td><td>1</td><td>0.335</td><td>0.558</td><td>0.518</td><td>0.334</td><td>0.442</td></tr><tr><td>H</td><td>0.335</td><td>1</td><td>0.299</td><td>0.408</td><td>0.916</td><td>0.583</td></tr><tr><td>Light</td><td>0.558</td><td>0.299</td><td>1</td><td>0.596</td><td>0.342</td><td>0.320</td></tr><tr><td>CO2</td><td>0.518</td><td>0.408</td><td>0.596</td><td>1</td><td>0.495</td><td>0.335</td></tr><tr><td>HR</td><td>0.334</td><td>0.916</td><td>0.342</td><td>0.504</td><td>1</td><td>0.485</td></tr><tr><td>Time</td><td>0.442</td><td>0.583</td><td>0.320</td><td>0.335</td><td>0.485</td><td>1</td></tr></table></body></html>",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "进一步，为了明确度量各特征含有分类信息大小，进行互信息的计算，然而数值型连续型特征变量无法直接计算互信息[30-31]，所以本文采用 ChiMerge 算法进行数值型特征离散化，ChiMerge是最常用的基于卡方的离散化方法，它是一种有监督的、自底向上的数据离散化技术。首先将数据取值范围内的所有值列为一个单独的区间，再递归地找出最佳邻近可合并的区间，通过合并以形成更大的区间。它使用卡方统计量来检测邻近区间相关度，以确定最佳邻近可合并的区间。其中Time 离散化为47类、温度（T)离散化为67类、湿度 $( H )$ 离散化为274类、光照（Light）离散化为56类、 $C O _ { 2 }$ 浓度（ $C O _ { 2 }$ ）离散为239类、湿度比（HR）离散为718类，离散化的训练样本数据集如表4所示。",
        "page_idx": 4
    },
    {
        "type": "table",
        "img_path": "images/2aaf29660d776b3a0a11ebc9562a4049d5d11bf062a9d681a28696aa54b9e4fe.jpg",
        "table_caption": [
            "表4离散化数据集"
        ],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>T</td><td>H</td><td>Light</td><td>CO2</td><td>HR</td><td>Time</td><td>Occupancy</td></tr><tr><td>67</td><td>155</td><td>21</td><td>74</td><td>591</td><td>1</td><td>1</td></tr><tr><td>67</td><td>155</td><td>22</td><td>74</td><td>591</td><td>1</td><td>1</td></tr><tr><td>67</td><td>154</td><td>21</td><td>74</td><td>591</td><td>1</td><td>1</td></tr><tr><td>67</td><td>152</td><td>21</td><td>74</td><td>591</td><td>1</td><td>1</td></tr><tr><td>67</td><td>152</td><td>21</td><td>74</td><td>591</td><td>1</td><td>1</td></tr></table></body></html>",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "利用式（3）对离散化的特征,计算特征与类别之间的相关性系数 $w$ ，得到表5所示结果，从表5可以看出，特征包含类别信息比率最大的是Time 变量，最小的是Temperature 变量。对相关系数 $w$ 进行排序Time>Light>Humidity>HumidityRatio ${ } > C O 2 >$ Temperature。",
        "page_idx": 4
    },
    {
        "type": "table",
        "img_path": "images/1dae620ea34bb9c8471b0c61f662cca2c54fe827235e5acc0c3c9c01cdc43a9f.jpg",
        "table_caption": [
            "表5特征与类别相关矩阵C"
        ],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td></td><td>T</td><td>H</td><td>Light</td><td>CO2</td><td>HR</td><td>Time</td></tr><tr><td>Occupancy</td><td>0.245</td><td>0.303</td><td>0.460</td><td>0.289</td><td>0.293</td><td>0.552</td></tr></table></body></html>",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "以随机森林算法作为分类器，通过 $\\scriptstyle a$ 的迭代寻找最有特征子集，初始化设置 $\\scriptstyle { a = 0 . 4 }$ ，每次加0.1,遍历结果如表6所示。从表可见变量个数为5时，选出的特征子集为最优子集，特征子集为：Light， $C O 2$ ，Humidity，Temperature，Time。其中HumidityRatio特征删除是合理的。",
        "page_idx": 4
    },
    {
        "type": "table",
        "img_path": "images/92a1ee8703f3330c733ff0c985e1179d4239ce3e8e6b0c45c6d98f1d6c283b67.jpg",
        "table_caption": [
            "表6特征选择结果"
        ],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td rowspan=\"2\">α数值</td><td rowspan=\"2\">Parameters</td><td colspan=\"2\">Accuracy</td></tr><tr><td>accuracy</td><td>kappa</td></tr><tr><td>0.4</td><td>Light ,Time</td><td>99.27%</td><td>97.81%</td></tr><tr><td>0.5</td><td>Light,CO2,H,Time</td><td>99.38%</td><td>98.15%</td></tr><tr><td>0.6</td><td>Light,CO2,H,T, Time</td><td>99.39%</td><td>98.16%</td></tr><tr><td></td><td>Light,CO2,H,T,HR,Time</td><td>99.37%</td><td>98.11%</td></tr></table></body></html>",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "2）实验结果及分析",
        "text_level": 1,
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "由数据预处理阶段选择出的最优特征子集，以及样本数据集中时间戳的引入，构建分类模型。获得表7的实验结果。",
        "page_idx": 4
    },
    {
        "type": "table",
        "img_path": "images/eb267fd36213b99ce105272fe1e6c95f10de6085746cba4b392762d6270fd8dc.jpg",
        "table_caption": [
            "表7实验结果比较"
        ],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td rowspan=\"2\">Model</td><td rowspan=\"2\">Parameters</td><td colspan=\"3\">Accuracy</td></tr><tr><td>training</td><td>testing</td><td>Testing2</td></tr><tr><td>XGBoost_1</td><td>Light,CO2,H,T,HR,Time</td><td>99.41%</td><td>97.67%</td><td>97.65%</td></tr><tr><td>RF_1</td><td>Light,CO2,H,T,HR,Time</td><td>99.37%</td><td>97.71%</td><td>98.15%</td></tr><tr><td>文献19</td><td>Light,CO2,H,T,HR,NS,WS</td><td>99.36%</td><td>95.53%</td><td>98.06%</td></tr><tr><td>XGBoost_2</td><td>Light,CO2,H,T,HR</td><td>99.31% 93.58%</td><td></td><td>95.37%</td></tr><tr><td>RF_2</td><td>Light,CO2,H,T,HR</td><td>99.30% 94.93%</td><td></td><td>97.21%</td></tr><tr><td>XGBoost_3</td><td>Light,CO2,H,T,Time</td><td>99.41%</td><td>97.75%</td><td>97.52%</td></tr><tr><td>RF_3</td><td>Light,CO2,H,T,Time</td><td>99.38%</td><td>97.67%</td><td>97.36%</td></tr><tr><td>C50</td><td>Light,CO2,H,T,Time</td><td>99.40%</td><td>97.75%</td><td>98.26%</td></tr><tr><td>SVM</td><td>Light,CO2,H,T,Time</td><td>98.71%</td><td>97.90%</td><td>93.64%</td></tr><tr><td>BP</td><td>Light,CO2,H,T,Time</td><td>98.72%</td><td>97.86%</td><td>99.07%</td></tr></table></body></html>",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "（1）时间戳对分类精度影响",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "加入时间戳与没有时间戳的特征组合进行比较，如表7所示，XGBoost_1、RF_1与文献19均是没有经过特征选择时加入时间戳，与没经特征选择的，同时也没有引入时间戳的模型相比，XGBoost_1比XGBoost_2在testing 数据集上分类精度提高了 $4 . 0 9 \\%$ ，RF_1比RF_2在testing 数据集上分类精度提高了 $2 . 7 8 \\%$ ，加入时间戳的模型整体分类精度均得到提高。再者RF_1比文献19对时间处理，所得分类模型分类精度在每个数据集都高，说明本文的加入时间戳的方法更加合理。",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "（2）实验结果比较",
        "text_level": 1,
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "利用上述步骤获得的最优特征子集，通过调整参数寻得最优分类模型 XGBoost_3、RF_3、C50、SVM、BP 等如表7所示，XGBoost_3在训练样本数据集上的分类精度最高，精度为$9 9 . 4 1 \\%$ ；SVM在测试样本数据集1上的分类精度最高，精度为$9 7 . 9 0 \\%$ ；BP在测试样本数据集2上的分类精度最高，精度为$9 9 . 0 7 \\%$ 。",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "其中 XGBoost_3 模型的训练集上准确率为 $9 9 . 4 1 \\%$ ，在 testing测试样本的准确率为 $9 7 . 7 5 \\%$ ，在testing2测试样本集上准确率为 $9 7 . 5 2 \\%$ 。RF_3训练集上的准确率为 $9 9 . 3 8 \\%$ ，在 testing 测试样本的准确率为 $9 7 . 6 7 \\%$ ，在testing2 测试样本集上准确率为$9 7 . 3 6 \\%$ 。如图2所示，XGBoost_3模型的分类精度在最优子集上均高于RF_3模型的分类精度，在testing数据集上差距最大。",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "1.0 Ⅲ   \n0.8   \n0.6   \nAoeunoo mu XGBsttCO,Hd   \n0.4°   \n0.2   \n0.0 \\* ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "参考文献：",
        "text_level": 1,
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "今后的工作将更加深入地研究空间占用检测影响因素，在原有硬传感器的基础上寻找可替代的软传感器获取占用影响变量，减少资源的浪费。同时通过观测得到影响因素数据对空间占用人员个数进行预测和设置资源利用标准对空间进行合理的分配，使得资源得到充足利用。",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "精度为 $9 9 . 0 7 \\%$ 。同时XGBoost 和RF分类模型，两者相比，XGBoost模型分类精度更高，算法时间复杂度更低。",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "上述通过分类精度对模型的性能进行了评价，再从时间复杂度对模型的性能进行评价，时间复杂度函数定量地描述一个算法模型的运行时间，对于大量数据的处理，本文在寻求准确的分类精度的同时，仍然追求算法模型处理数据的时间能够相对较短。本文通过caret寻优时得到的参值，作为原有算法的参数值，利用原有算法包重新构建分类模型，把XGBoost模型和RF 模型时间复杂度进行对比，通过调用system.time(函数得到表8的时间复杂度，由表可知与传统的随机森林相比，XGBoost模型用时更少，主要原因在于XGBoost算法采用分布式设计，从而降低了时间复杂度。",
        "page_idx": 5
    },
    {
        "type": "table",
        "img_path": "images/16c16bef1e3f10102ea1876cd6382351322f0cb59d787d4e6e3aba8e59a24c34.jpg",
        "table_caption": [
            "表8模型时间复杂度"
        ],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>Model</td><td>Parameters</td><td>running time/s</td></tr><tr><td>XGBoost</td><td>Light,CO2,Humidity,Temperature,Time</td><td>0.4500</td></tr><tr><td>RF</td><td>Light,CO2,Humidity,Temperature,Time</td><td>2.2000</td></tr></table></body></html>",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "4 结束语",
        "text_level": 1,
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "本文主要的工作是对空间占用检测进行研究，在原始数据的基础上，加入时间戳，改变XGBoost和RF算法无法处理时间变量，实验结果表明，加入时间戳与没有加入时间戳的模型相比分类精度均得到提高，变化最明显的是XGBoost在 testing测试集上分类精度提高了 $4 . 0 9 \\%$ ，RF在testing数据集上分类精度提高了 $2 . 7 8 \\%$ 。同时，RF_1比文献19引入时间戳更合理。同时利用MCMR特征选择方法进行特征选择，剔除关联度小冗余度高的HumidityRatio特征，利用随机森林作为分类器，进行迭代寻优，获取了最优特征子集。通过特征与分类算法构建检测模型得到XGBoost在训练样本数据集上的分类精度最高，精度为 $9 9 . 4 1 \\%$ ;SVM在测试样本数据集1上的分类精度最高，精度为 $9 7 . 9 0 \\%$ ；BP在测试样本数据集2上的分类精度最高，",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "[1]仇保兴．我国绿色建筑发展和建筑节能的形势与任务[J].城市发展研 究,2012,19 (05): 1-7,11.   \n[2] 郭萍，李国刚．浅析中国当前绿色建筑发展的问题及对策[J].土木建 筑与环境工程,2015,37(S1):96-98.   \n[3] 徐涛，王祁．基于模式识别的传感器故障诊断[J].控制与决策,2007, (07): 783-786.   \n[4] 金连文，钟卓耀，杨钊，等.深度学习在手写汉字识别中的应用综述 [J]．自动化学报,2016,42(8):1125-1141.   \n[5]杨赛，赵春霞，刘凡．多核学习融合局部和全局特征的人脸识别算法 [J]．电子学报,2016,44(10):2344-2350.   \n[6]Erickson VL, Careira-Perpinan M A, Cerpa AE. OBSERVE: occupancybased system for efficient reduction of HVAC energy [C]// Proc of the 10th International Conference on Information Processing in Sensor Networks. 2011: 258-269.   \n[7]Erickson VL, M. A. Carreira-Perpinan,A. E. Cerpa, Occupancy modeling and prediction for building energy management，ACM Trans. Sensor Network,2014,10 (3): 42.   \n[8]Dong B，Andrews B.Sensor-based occupancy behavioral pattern recognition for energy and comfort management in inteligent buildings [C]//Proc of Building Simulation. 2009.   \n[9]Brooks J, Goyal S,Subramany R,et al An experimental investigation of occupancy-based energy-efficient control of commercial building indoor climate [C]//Proc of the 53rd IEEE Annual Conference on, IEEE,Decision and Control. 2014: . 5680-5685.   \n[10] Brooks J,Kumar S,Goyal S,et al. Energy-efficient control ofunder-actuated HVAC zones incommercial buildings [J].Energy Build,2015,93 ( 160- 168.   \n[11] Tomastik R,Narayanan S,Banaszuk A,et al.Model-based real-time estimation of building occupancy during emergency egress pedestrian and evacuation dynamics [C]. Berlin: Springer,2010: 215-224.   \n[12] Scot J,Brush AB,Krumm J, et al.PreHeat: controlling home heating using occupancy prediction [C]// Proc of the 13th International Conference on Ubiquitous Computing. 2011: 281-290.   \n[13] Ghai SK,ThanayankizilL V, Seetharam DP,etal. Chakraborty: occupancy detection in commercial buildings using opportunistic context sources [C]/ Proc of IEEE Percom Workshops. 2012. ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "[14] Hailemariam E,R.Goldstein,R.Attar,A.Khan: Real-time occupancy ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "detection using decision trees with multiple sensor types,in: Proceedings of the 2011Symposium on Simulation for Architecture and Urban Design, Society for Computer Simulation International, San Diego,CA,2011, pp. 141-148.   \n[15] Luis M.Candanedo,VAOronique Feldheim.:Accurate occupancy detection ofan office room from light, temperature,humidity and CO2 measurements using statistical learning models [J]. Energy and Buildings,2016,112(1): 28-39.   \n[16] Chen T,He T.Higgs boson discovery with boosted trees [C]//Proc of International Conference on High-Energy Physics and Machine Learning. 2015.   \n[17] Chen T,Guestrin C.Xgboost:a scalable tree boosting system [J].arXiv preprint arXiv:1603.02754,2016.   \n[18] Song R,Chen S,Deng B,et al. eXtreme gradient boosting for identifying individual users across different digital devices [Cl//Proc of International Conference on Web-Age Information Management.[S.1.]: Springer International Publishing,2016: 43-54.   \n[19]姚旭，王晓丹，张玉玺，等．特征选择方法综述[J].控制与决策，2012, 27 (02): 161-166+192.   \n[20]毛勇，周晓波，夏铮，等．特征选择算法研究综述[J].模式识别与人 工智能,2007,20(2):211-218.   \n[21]仇利克，郭忠文，刘青，等．基于冗余分析的特征选择算法[J]．北京 邮电大学学报,2017,40(01):36-41.   \n[22] Yu L,Liu H.Eficient feature selection via analysis of relevance and redundancy[J]. Journal ofMachine Learning Research,20o4:1205-1224.   \n[23]李扬，顾雪平．基于改进最大相关最小冗余判据的暂态稳定评估特征 选择[J].中国电机工程学报,2013,33(34):179-186.   \n[24]赵伟卫，李艳颖，赵风芹，等.基于互信息和随机森林的混合变量选择 算法[J].吉林大学学报：理学版,2017,55(04):933-939.   \n[25]徐峻岭，周毓明，等．基于互信息的无监督特征选择[J].计算机研究 与发展,2012,49(2):372-382.   \n[26]张振海，李士宁，等．一类基于信息熵的多标签特征选择算法[J]．计 算机研究与发展,2013,50(6):1177-1184.   \n[27]董红斌，滕旭阳，杨雪．一种基于关联信息熵度量的特征选择方法[J]. 计算机研究与发展,2016,53(8):1684-1695.   \n[28]薛薇．基于R统计分析与数据挖掘[M].北京：中国人民大学出版社， 2014,1-399.   \n[29]周志华．机器学习[M].北京：清华大学出版社,2016,1-425.   \n[30]赵静娴，倪春鹏，詹原瑞，杜子平．一种高效的连续属性离散化算法 [J]．系统工程与电子技术,2009,31(01):195-199.   \n[31]杨萍，杨天社，杜小宁，等．一种基于类别属性关联程度最大化离散算 法[J].控制与决策,2011,26(04):592-596. ",
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 6
    }
]