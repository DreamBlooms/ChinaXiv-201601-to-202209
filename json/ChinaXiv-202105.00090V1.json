[
    {
        "type": "text",
        "text": "基于深度神经网络的锂离子电池分容工序容量预测方法",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "孙瑜1\\*1（广州领博科技有限公司）",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "摘要：本文提出了一个使用深度学习方法预测锂离子电池分容工序的容量的解决方案。该方案从化成和分容工序中提取部分工步的物理观测值记录作为特征，训练了一个深度神经网络（Deep NeuralNetwork,DNN）实现了电池容量的精准预测。据测试，该模型预测的电池容量与真实值相比，平均百分比绝对误差（Mean Absolute Percentage Error,MAPE）仅为$0 . 7 8 \\%$ 。将该模型与生产线结合，可以大大缩减生产时间与能耗，降低电池生产成本。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "关键词：锂离子电池容量预测；深度学习；神经网络；分容",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "引言",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "在锂离子电池生产工艺中，电池分容工序（GradingProcess）中的容量（Capacity）数据，是出厂前评价单体锂离子电池质量好坏的一个重要指标。厂家会将锂离子电池根据不同的容量等级进行分档，相同档位的电池会进行配组成为电池包（Pack)，以获取更好的稳定性和寿命。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "目前常用的获得锂离子电池容量数据的方法是，通过充放电设备，先对锂离子电池进行完全充电，然后进行多组阶梯式的电流放电，即让电池完全放电，最终将每个放电工步的总容量叠加，作为电池的出厂容量。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "该方法的缺点是，整个充放电过程极度耗时耗能，以标准容量为3200mAH的18650 电池举例，整个充放电过程会持续4\\~5小时，其中每个充放电阶段都会消耗非常多的电能。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "通过技术手段对生产过程中的锂离子电池的容量进行预测，既可以满足工程上对锂离子电池分组的要求，同时也能缩减生产时间，减少生产耗能。传统的容量预测方法一般假设电池电压为线性变化，结合工步内两个时间点的电压差进行计算，估计目标电压的时间落点，进而估算出电池的总放电时间和容量（图1)。这种方式的缺点是需要对锂离子电池进行实际放电，同时预测精度较差。",
        "page_idx": 0
    },
    {
        "type": "image",
        "img_path": "images/73a12cde046ae60039f3e59f2e7700af627357489c19d009dd5d3e98223d247a.jpg",
        "img_caption": [
            "图1线性模型估算电池容量示意图"
        ],
        "img_footnote": [],
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "近年来，随着深度学习技术的不断发展，一些深度学习模型逐渐被应用到数据预测的研究中。深度学习模型是一种拥有多个非线性映射层级的神经网络模型，能够将输入信息在多个隐藏层中进行抽象，并提取信息特征，挖掘出更深层的潜在规律。在实际应用中，包括物品分类检测问题（objectdetection）、自然语言处理（Natural Language Processing,NLP）问题、数学证明问题(math improve)、分子模型预测问题等等，都得到了很好的表现。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "本文中，我们从单体锂离子电池在充电状态下的部分数据中提取特征，训练了一个深度神经网络预测锂离子电池的总放电容量，获得了很好的预测效果。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "1深度神经网络",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "神经网络是基于感知机的扩展，而深度神经网络(Deep NeuralNetwork,DNN）可以理解为有很多隐藏层的神经网络。DNN 有时也被称为多层感知机（Multi-Layer Perceptron,MLP）[1]。",
        "page_idx": 1
    },
    {
        "type": "image",
        "img_path": "images/60a3d4816a743498d4296f70c2b902d5c896b51f68e6fef0e753b2ba0f53e1ef.jpg",
        "img_caption": [
            "图2DNN神经网络标准模型"
        ],
        "img_footnote": [],
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "按层的不同位置划分，DNN内部的神经网络层可以分为三类：输入层、隐藏层和输出层。一般来说第一层是输入层，最后一层是输出层，而中间均为隐藏层。层与层之间是全连接的，也就是说，第i层的任意一个神经元一定与第 $\\mathrm { i } { + } 1$ 层的任意一个神经元相连。虽然DNN看起来很复杂，但是从小的局部模型来说，还是和感知机一样，即一个线性关系 $z = \\varSigma w _ { i } x _ { i } + b$ 加上一个激活函数 $\\sigma ( z )$ 。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "以图2 中经典DNN模型为例，在输入层输入一组矩阵序列 $X =$ $( x _ { 1 } , x _ { 2 } , x _ { 3 } \\cdots x _ { n } )$ ，通过隐藏层1获得其特征1的特征序列",
        "page_idx": 2
    },
    {
        "type": "equation",
        "text": "$$\nW = ( w x _ { 1 } , w x _ { 2 } , w x _ { 3 } \\cdots w x _ { n } )\n$$",
        "text_format": "latex",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "再通过隐藏层2获得二次特征序列",
        "page_idx": 2
    },
    {
        "type": "equation",
        "text": "$$\nH = \\left( \\hbar w x _ { 1 } , \\hbar w x _ { 2 } , \\hbar w x _ { 3 } \\cdots \\hbar w x _ { n } \\right)\n$$",
        "text_format": "latex",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "以此类推，最后获得输出矩阵。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "在实际操作中，我们一般使用反向传播机制来控制模型的拟合过程。我们的神经网络的输入层和输出层各有一定量的神经元，再加上一些含有若干神经元的隐藏层，此时需要找到适合所有隐藏层和输出层对应的线性系数矩阵W和偏倚向量b这一系列参数，让所有的训练样本经输入层一隐藏层一输出层计算出的结果尽可能的等于或无限逼近真实的测量值。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "为达到这一目的，首先要选择一个适当的损失函数，来度量训练样本计算出的输出和对应的真实测量值之间的差异。接着应用合适的优化器，对这个损失函数进行优化；在求其最小化值的过程中，反向不断对一系列线性系数矩阵W，偏倚向量b等进行更新，直至达到我们预期的效果。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "2模型构建与训练 ",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "2.1 实验数据",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "本文采用某锂离子电池厂生产的18650 电池数据作为实验对象，该批次电池参数如下：额定电压3.6V，额定电池容量3.2AH，额定内阻 $2 8 \\mathrm { m } \\Omega$ ，最大充电电压4.2V，放电截止电压2.5V，充放电温度 $2 6 \\pm 5 ^ { \\circ } \\mathrm { C }$ ，，数据集为10万颗电池数据，单颗电池分容充放电整体数据可见图3。",
        "page_idx": 2
    },
    {
        "type": "image",
        "img_path": "images/b1f7dd1c511ce271a8b6be9d0a0fd8efaee785faabba5dbc5f2f88b0f4569aac.jpg",
        "img_caption": [
            "图3电池充放电整体数据图表"
        ],
        "img_footnote": [],
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "实验数据为约10万颗电池数据，其中 $80 \\%$ （约8万颗）数据作为训练集数据（trainingdataset)，在训练集数据中，我们另外切割出 $20 \\%$ （约1.6万颗）数据作为验证集数据（validated dataset）。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "实测数据（testdataset）采用上述未参与训练和验证的约2万颗电池数据，数据结构与实验数据一致。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "2.2 特征矩阵 ",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "数据以csv格式进行保存，原始数据含采样时间、循环、工步、工作状态、",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "工作时间、电压、电流、容量、能量、温度、电池异常标记等11个数值特征（见表1)。",
        "page_idx": 3
    },
    {
        "type": "table",
        "img_path": "images/f1db573d279b7a2aec74d412eb895df4e10f5dbf9c066492f0153b243ada72d1.jpg",
        "table_caption": [
            "表1原始数据示例"
        ],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>2021-02-2814:18:43,0.0,3,0.0,3604.5,0,0.0,0.0,23.4.0 2021-02-2814:19:24,0,0,3.0.4,3604.6,1.5,0.0,0.0,23.3.0, 2021-02-28 14:19:27,0,0,3,0.4,3604.6,-3.5,0.0,0.0,23.2,0, 2021-02-28 14:19:31,0,0,3,0.5,3604.5,-1.1,0.0,0.0,23.2,0, 2021-02-28 14:19:34,0,0,3,0.5,3604.5,0.2,0.0,0.0,23.2,0, 2021-02-2814:19:38,0,0,3,0.6,3604.6,0.1,0.0,0.0,23.1,0, 2021-02-28 14:19:41,0,0,3,0.7,3604.5,-0.1,0.0,0.0,23.1,0,</td></tr></table></body></html>",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "我们认为适合作为神经网络的输入有当前电压、当前电流和当前容量这些特征，并将其按照时间顺序组织，形成最后的输入特征矩阵。",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "2.3数据预处理",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "原始数据中存在大约 $0 . 5 \\%$ 左右的电池数据 (表2)，在充放电过程中出现异常（包括设备异常、电池异常、或接触异常)，具体表现为电池异常标记列的值${ > } 1 0$ 。这部分数据是无效的，会干扰正常的模型训练和预测过程，因此在提取特征的步骤中我们已将出现这种情况的样本剔除。",
        "page_idx": 3
    },
    {
        "type": "table",
        "img_path": "images/8da21cabf6cb0c61163ea783337d80e13df2acf5163df4cad78448563372465d.jpg",
        "table_caption": [
            "表2异常数据示例"
        ],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>2020-11-0406:14:40.0,0,3,0.0,879.4,0,0.0,0.0,29.70, 2020-11-04 06:15:05,0,0,3,0.0,889.4,0.9,0.0,0.0,29.6,3020,0CV 异常</td></tr><tr><td>2020-11-04 06:15:20,0,0,3,0.4,889.3,0.9,0.0.0.0,29.5,3020,0CV异常 2020-11-04 06:15:23,0.0,3,0.4,889.2,0.9,0.0.0.0,29.5,3020,0CV异常 2020-11-04 06:15:27,0,0,3,0.5,889.1,0.9,0.0,0.0,29.5,3020,0CV异常 2020-11-04 06:15:30.0,0,3,0.5,888.9,0.9,0.0,0.0,29.5,3020,0CV 异常</td></tr></table></body></html>",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "在训练集数据和测试集数据中，全部放电工步的最终容量依次累加可得到出厂容量，该出产容量被作为模型训练过程中的因变量。",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "在进入训练之前，数据仍经过了一系列过滤：1）利用 scipy 模块对因变量的值求 zscore，仅保留 zscore 的绝对值<3 的样本[2]；2）按照缺失值占比过滤特征，如图4所示，电流与时间所围成的区域的面积总和（XoY平面内曲线下面积）为该电池的出厂容量。",
        "page_idx": 3
    },
    {
        "type": "image",
        "img_path": "images/77a787af726d5ebec70843be1c3035187001e6b1de6fef8bc61671630ce11c0c.jpg",
        "img_caption": [
            "图4出厂容量定义"
        ],
        "img_footnote": [],
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "2.4 网络训练",
        "text_level": 1,
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "本文使用 Tensorflow Keras API (v2.4.1)构建网络并进行训练[3]，网络由输入层、一个含有 2048个神经元的隐藏层和一个输出层构成，使用高斯误差线性单元（Gaussian ErrorLinearUnit,Gelu）作为激活函数l4]。模型编译时使用平均绝对百分比误差（Mean Absolute Percentage Error,MAPE）作为损失函数，使用NAdam作为优化器[5]。",
        "page_idx": 4
    },
    {
        "type": "image",
        "img_path": "images/3ae1a494f36d0a2e6586552572dfe6fa672d58396f331e2d5e7dd9ff6a61abbd.jpg",
        "img_caption": [
            "图5模型训练过程"
        ],
        "img_footnote": [],
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "模型训练在经历4739个epoch之后收敛（图5)，在验证集上的MAPE约为$0 . 8 2 5 1 \\%$ 。",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "3预测效果",
        "text_level": 1,
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "为了进一步论证模型在生产环境的表现，本节使用了约2万颗电池的数据来做测试，验证数据与原始数据的结构保持一致。测试数据采用了和2.3节完全一致的预处理逻辑，通过对比预测值和实际的测量值，可以计算出每块电池的绝对",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "百分比误差（Absolute Percentage Error,APE）。",
        "page_idx": 5
    },
    {
        "type": "image",
        "img_path": "images/156b6f9893bda6bae39b971df711eba45ec63b2a64a11277fb19b97da4897691.jpg",
        "img_caption": [
            "图6电池容量值分布"
        ],
        "img_footnote": [],
        "page_idx": 5
    },
    {
        "type": "image",
        "img_path": "images/8210965cdab25de1ff35bd8d8368fd748b95f7f3a9386a79a64c610a2c27b109.jpg",
        "img_caption": [
            "图7预测误差在[0,1]之间的分布"
        ],
        "img_footnote": [],
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "图6中红线为每颗电池出厂容量的预测值，蓝线为电池出厂容量的真实值，图中出现的最大误差为 $4 . 6 \\%$ ，最小误差为 $0 . 0 0 3 2 \\%$ ，平均误差为 $0 . 8 3 \\%$ 。图7中",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "APE 在[0,1]区间上的分布均集中在y轴附近，表明模型在绝大多数样本上的表现更佳。",
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "4结论",
        "text_level": 1,
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "为解决锂离子电池出厂容量的预测问题，本文从充放电数据的部分工步中提取特征值，建立DNN模型，经过训练、验证和测试，可以有效地对电池的最终出厂容量进行预测，平均误差仅为 $0 . 8 3 \\%$ ，拥有较高的估算精度。",
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "在实际生产中，该模型亦可根据具体批次的电池的理化性质进行微调，保证相近的预测性能。因此该技术路线泛化性极强，适合部署于工业生产环境。将该方法与生产线的MES系统、SCADA系统或者是上位机系统有机结合，在实际生产应用中可大幅度缩减生产时间和生产能耗，为企业提供了切实可行的技术支持，积极响应了国家节能减排的号召，具有深远的应用价值。",
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "参考文献",
        "text_level": 1,
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "[1] GU J,WANG Z, KUEN J,et al. Exploring Strategies for Training Deep Neural Networks [J]. 2014.   \n[2] OLIPHANT TE. SciPy: Open source scientific tools for Python [J].2014.   \n[3] TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems [J].2016.   \n[4] HENDRYCKSD,GIMPEL K.Gaussian Error Linear Units (GELUs)[J].2016.   \n[5] SINGARIMBUN R N,NABABAN E B, SITOMPUL O S.Adaptive Moment Estimation To Minimize Square Error In Backpropagation Algorithm； proceedings of the 2019 International Conference of Computer Science and Information Technology (ICoSNIKOM),F,2019 [C]. ",
        "page_idx": 6
    }
]