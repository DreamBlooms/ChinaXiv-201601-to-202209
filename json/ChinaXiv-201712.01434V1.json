[
    {
        "type": "text",
        "text": "最优解算法综述",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "常媛1 张志远²罗健曲径³",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "（1.北京建筑大学,北京100044；2.中国建筑科学研究院，北京100013；3.建研科技股份有限公司，北京100013)",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "【摘要】本文研究了钢筋下料优化的离散组合最优化问题，并对组合优化中常用的遗传算法、模拟退火算法、启发式算法进行了综述,探讨了各自的特点并进行比较。最后根据近几年国内外的文献发现,单独的某个算法找到最优解存在随机性，且得到最优解会花费大量时间。解决这一问题的方法是将几种算法根据具体工况进行组合，组合后的算法的效率更高。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "【关键词】钢筋下料；组合优化；遗传算法；模拟退火算法；启发式算法  \n【中图分类号】TU51;TU723.32【文献标识码】A【文章编号】1674-7461(2017)03-0115-04  \n【DOI】10.16670/j.cnki.cn11-5823/tu.2017.03.20",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "钢筋工程作为工程项目中不可缺少的材料以及核心成本,用量大、价格高,所以如何提高钢筋的利用率以及降低钢筋的废料率一直是亟待解决的问题。解决这一问题的方法就是对钢筋下料进行优化，使钢筋在切割工程中做到最有效的利用，从而降低工程造价。而钢筋下料优化的算法,属于一维装箱问题，是复杂的离散组合最优化问题。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "组合优化是研究工程中存在大量有限个可行解的问题[1],这些问题理论上可以用枚举法实现,但是一般的实际工程规模都很大，可行解的数量非常巨大，所以枚举法并不适用。组合优化中最重要的问题就是如何利用已有知识来减小问题空间，进而有效的处理组合爆炸。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "目前常用的优化算法有智能优化算法和启发式算法以及精确算法。精确算法适用于求解小规模问题，所以在实际工程中并不适用。智能优化算法包括遗传算法、模拟退火算法等，由于其自身的优越性使其广泛应用于优化领域中。启发式算法和精确算法相对应，是一种根据经验去发现的算法，由于其能迅速解决问题而广泛应用。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "前苏联科学家ABK在1939年最早用线性规划法研究排料问题[2]。由于既是整数解又是最优解的答案在实践中很难得到，许多求解近似解的启发式算法也被广泛应用。Hifi[3]采用爬山策略和动态规划技术进行深度优先搜索，解决切割问题。肖专文[4]等人在1999 年将遗传算法与神经网络相结合，构成GA－ANN法，利用了神经网络的非线性映射和预测能力，同时利用了遗传算法的全局优化特性,协同求解复杂工程中的优化问题。蔡依平[5]于2007年运用遗传算法实现了对工程场地的优化布置和分析计算，并达到了 $2 1 . 8 9 \\%$ 的优化概率。赵文余[在2011年采用了自己提出的自适应进化模拟退火搜索算法进行优化计算，由于在迭代过程中加入了模拟退火算子，大大增强了算法的局部搜索能力。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1遗传算法",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "遗传算法（GeneticAlgorithm，GA)是20世纪60年代，人们热衷于借鉴生物界的\"适者生存,优胜劣汰”的进化规律，探索有效的算法来处理复杂的优化问题[]。它首先由美国的Holland 教授于 1975年在其专著《Adaptation in Natural and Artificial Sys-tems》[8]中提出。遗传算法的研究引起了全世界学者的广泛关注，自1985年以来，关于遗传算法的学术会议和研讨会在国际上多次召开，这给遗传算法的研究提供了国际交流和学习的机会。",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "遗传算法模仿生物进化过程中基因的选择、交叉和变异机理[9],在每次的运算中将所有的初始个体利用上述机理对这些个体进行组合，产生新一代的个体群，反复进行上述步骤直到满足设置的指标。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "遗传算法最主要的特点是群体搜索策略和群体中个体之间的信息交换，搜索不以梯度信息为基础[10],是一种有效的全局搜索方法,非常适用于处理传统方法不容易解决的非线性以及复杂的问题，其应用领域非常广泛，比如函数优化、组合优化、生产调度、自动控制、机器学习、图像处理、人工生命、遗传编程、机器学习、数据挖掘等。[11由于其应用范围广、鲁棒性强以及应用简单等特点，使其成为人们广泛研究以及应用的对象，同时成为了一种计算智能的核心技术。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "遗传算法的局部搜索能力较差，但把握搜索过程总体的能力较强[12]，它可以找出解空间内的所有解，不会陷入局部最小值,但是会比较费时。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "2模拟退火算法",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "模拟退火算法（Simulated Annealing,SA）最早的思想是由 N.Metropolis[13]等人于1953 年提出。1983年，S.Kirkpatrick等成功地将退火思想引入到组合优化领域。在大量的研究中，模拟退火算法用于各种组合优化问题，如NP、TSP和Knapsack问题等。并且大量的模拟实验表明,模拟退火算法在求解这些问题时能产生令人满意的近似最优解，而且所用的时间也不是很长。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "$\\circ$ 模拟退火算法来源于固体退火原理,将固体加温至充分高，再让其徐徐冷却，加温时，固体内部粒子随温升变为无序状，内能增大，而徐徐冷却时粒子渐趋有序，在每个温度都达到平衡态，最后在常温时达到基态，内能减为最小。模拟退火算法首先由当前的解空间根据函数产生一个新解，求新解所对应的目标函数差值，判断差值是否符合设定准则，若符合则新解代替当前解循环，否则继续用之前的解。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "模拟退火算法与初始值无关，算法求得的解与初始解状态S(是算法迭代的起点)无关，而且其具有渐近收敛性，已在理论上被证明是一种以概率1收敛于全局最优解的全局优化算法。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "模拟退火算法是一种随机算法，并不一定能找到全局的最优解，但可以比较快的找到问题的近似最优解。同时模拟退火也是一种贪心算法，它在搜索过程引入了随机因素，以一定的概率来接受一个比当前解要差的解，因此有可能会跳出这个局部的最优解,达到全局的最优解[14]",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "3启发式算法（Heuristic Algorithm）",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "1984年PearlJ.在其专著中说道，所谓启发式算法是指一组指导算法搜索方向的、建议性质的规则集，通常按照这个规则集，计算机可在解空间中寻找到一个较好解，但并不能保证每次都能找到较好的解,更不能保证找到最优解[15]。换言之它是一种在解决问题时所采用的一种根据经验规则去进行发现的方法。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "其特点是在解决问题时，利用过去的经验，选择已经行之有效的方法，而不是系统地、以确定的步骤去寻求答案。启发式解决问题的方法是与算法相对立的，算法是把各种可能性都一一进行尝试，最终能找到问题的答案，但它是在很大的问题空间内，花费大量的时间和精力才能求得答案。启发式方法则是在有限的搜索空间内，大大减少尝试的数量，能迅速地达到问题的解决。但由于这种方法具有尝试错误的特点，所以也有失败的可能性。科学家的许多重大发现，常常是利用极为简单的启发式规则。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "启发式算法的本质是忽略一部分算法的概念，将待解决的的问题所属具体领域的特点加入到算法中去，从而提高算法的效率。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "4近似最优解的启发式算法",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "装箱问题(binPacking)是复杂的离散组合最优化问题。所谓组合优化，是指在离散的、有限的数学结构上，寻找一个满足给定条件，并使其目标函数值达到最大或最小的解。一般来说，组合优化问题通常带有大量的局部极值点，往往是不可微的、不连续的、多维的、有约束条件的、高度非线性的NP完全问题，很难求得最优解。装箱问题也不例外，同许多组合最优化问题，如旅行商问题、图的划分问题等一样属于NP难题。经典的装箱问题要求把一定数量的物品放入容量相同的一些箱子中，使得每个箱子中的物品大小之和不超过箱子容量并使所用的箱子数目最少[16]",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "目前有很多求近似最优解的启发式算法，包括次优配合法（NF）、优先配合法（FF）、最佳配合法(BF)和按配件尺寸降序排列后再采用上述算法的次优配合降序法（NFD）、优先配合降序法（FFD）、最佳配合降序法（BFD）[17]",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "装箱问题是一个经典的组合优化问题，有着广泛的应用，在日常生活中也屡见不鲜。设有许多具有同样结构和负荷的箱子B1，B2，其数量足够供所达到目的之用。每个箱子的负荷（可为长度、重量etc.)为C,今有 $\\mathbf { n }$ 个负荷为wj， $( 0 < \\mathrm { w j } < \\mathrm { C } \\ \\mathrm { j } = 1$ ${ 2 , \\cdots , \\mathbf { n } } )$ 的物品 $\\operatorname { J 1 } , \\operatorname { J 2 } , \\cdots , \\operatorname { J n }$ 需要装入箱内。装箱问题则是指寻找一种方法，使得能以最小数量的箱子数将 $\\operatorname { J 1 } , \\operatorname { J 2 } , \\cdots , \\operatorname { J n }$ 全部装入箱内[18]。NF算法的过程是对当前要装的物品Ji只关心具有最大下标的已使用过的箱子Bj能否装得下，如果可以则Ji放入Bj；否则关闭Bj,Ji放入新箱子 $\\mathrm { B j } + 1$ 。",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "其特点是按物品的给定顺序装箱，装不下的时候及时将上一个箱子关闭。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "FF 算法的过程是 $\\mathrm { J 1 , \\cdots , J j }$ 已放入 $\\mathrm { B 1 , \\cdots , B i }$ 箱子，对于 $\\mathrm { J j } + 1$ ,则依次检查 B1,B2,,Bi,将 $\\mathrm { J j } + 1$ 放人首先找到的能放得下的箱子，如果都放不下，则启用箱子 $\\mathrm { B i } + 1$ ,将 $\\mathrm { J j } + 1$ 放入 $\\mathrm { B i } + 1$ ,如此继续,直到所有物品装完为止。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "0 其特点是按物品给定的顺序装箱，且对于每个物品Jj来说总是放在能容纳它的具有最小标号的箱子里。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "BF 算法的过程是与 FF 算法相似,按物品给定的顺序装箱,区别在于对于每个物品Jj 是放在一个使得Jj放入之后，Bi所剩余长度为最小者。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "FFD 算法是先将物品按长度从大到小排序,然后用FF算法对物品装箱。就目前来说,最好的就是FFD算法，因为将物体由大到小排序后，先放入大的物体，这样剩余的空间就给剩余的小物体提供了更多的可选择空间。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "$\\circ$ 这一算法的特点是速度快,但由于是按照顺序排列的，取到当前的最后一个物体而得到解不一定是最优的，有可能是下一个物体或后几个物体，所以该算法得到最优解具有随机性。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "5 算法比较 ",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "上述算法单独来看，每个算法都有各自的长处，同时又有不可忽略的缺点。几种算法的比较如表1所示。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "遗传算法和模拟退火算法对求解组合优化问题有很好的效果[19],这两种算法各自的算法以及组合算法已在工程中得到了广泛的研究和应用，其中应用领域最广的就是巡回旅行商问题(TSP)和配送和回收一体化的车辆路径问题（VRPSDP)以及装箱问题（binPackingProblem）等。这些问题描述非常简单，并且有很强的工程代表性，但最优化求解很困难，其主要原因是求解这些问题的算法需要极长的运行时间与极大的存储空间，以致根本不可能在现有计算机上实现，即所谓的\"组合爆炸”。",
        "page_idx": 2
    },
    {
        "type": "table",
        "img_path": "images/7e3db2e94e30662901be1111654d2c3781408cc73623570019bc85bbd888f080.jpg",
        "table_caption": [
            "表1算法比较"
        ],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>算法</td><td>遗传算法</td><td>模拟退火算法</td><td>启发式算法</td><td>FFD算法</td></tr><tr><td rowspan=\"2\">优点</td><td>全局搜索能 力强</td><td>可以找到近似 最优解</td><td>效率高</td><td>速度快</td></tr><tr><td>不会陷入局花费时间少 部极小值 可以找出所一定概率得到</td><td></td><td></td><td>可以得到 最优解</td></tr><tr><td rowspan=\"2\"></td><td>有解 缺点局部搜索能 不一定能找到</td><td>全局最优解</td><td>不能保证找</td><td>得到最优</td></tr><tr><td>力差 花费时间长</td><td>全局最优解</td><td>到最优解</td><td>解具有随 机性</td></tr></table></body></html>",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "为了避免组合爆炸以及得到更好的结果，考虑将上述几种算法组合起来，取长补短，得到一种混合的算法。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "Chen 等[20]于1996年采用模拟退火的技术求解一维下料的整数规划问题，他将模拟退火算法与启发式算法相结合，实验通过200次随机实验生成下一个下料方案，之后给出该方案的适应度，采用进化算法中的交叉技术，保留较好的下料方案。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "X Shen[2]提出一个包含两个目标函数在动态规划基础上产生模拟退火启发式方法，一种改进的启发式方法禁忌搜索。该方法通过惩罚或禁止一些路径的搜索可以避免对解的重复枚举。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "Leun[22]于 2001年结合进化算法和模拟退火算法进行了二维下料的实验，并证明了算法的有效性。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "王银年[5在2009 年对遗传算法的结构进行了改进，增加了判断遗传算法搜索效率的变量，同时对模拟退火算法的结束条件也进行了改进，以便于能及时结束算法。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "李斌[]等人针对一维下料问题的特点,采用基于配件排序的编码，构造了一种“择优插入”的局部搜索算辅助遗传算子的混合遗传算法，结果表明算法大大提高了此类问题的寻优能力和解的精度。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "6结论 ",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "本文针对组合优化问题中常用的算法，分别进行了详细的阐述，指出不同算法的不同特点，并进行比较。根据以往学者们的研究可知，单独的一种算法不一定能得到最优的解，并且以一定概率得到最优解的过程需要花费大量的时间，所以要将几种算法结合起来，取各自的优点，才能既快速又准确的得到最优解。现如今工程的各个方面都很注重效率，而一种合适的算法能大大地节省时间并得到很好的结果，所以组合算法的研究在今后是一个非常有前景的研究方向。",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "参考文献",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "[1］玄光南,程润伟.遗传算法与工程优化[M].北京：清华大学出版社.2004：41-54.  \n[2］彭文利，陈淑如,张定华.优化排料算法的研究现状与趋势[J].模具工业.2006,32(8).  \n[3］M Hifi.Dynamic Programming and Hill-Climbing Tech-niques for Constrained Two-Dimensional Cutting StockProblems［J].Journal of Combinatorial Optimization.2004,8(1) :65-84.  \n［4］肖专文.求解复杂工程优化问题的一种实用方法［J].水利学报.1999，（2)：23-27.  \n[5］蔡依平.工程建设项目物流关键问题优化理论与方法  \n聘 赵文余.钢材下料问题的多目标智能优化算法研究徐磊.基于遗传算法的多目标优化问题的研究与应用JOHN H. HOLLAND.Adaptation In Natural And Artifi-cial Systems[M].Ann Arbor,MI:University of Michigan马永杰.遗传算法研究进展［J].计算机应用研究.王银年.遗传算法的研究与应用——基于3PM交叉算子的退火遗传算法及应用研究［D].江苏：江南大葛继科,邱玉辉等.遗传算法研究综述[J].计算机应用研究.2008,25（10）：2911-2916.  \n[12］史忠植.高级人工智能第三版［M].北京:科学出版社.2011:367-397.  \n[13］Steinbrunn M,Moerkotte G，Kemper A.Heuristic andrandomized optimization for the join ordering problem[J].VLDB Journal .1997,6（3） :8-17.  \n[14]http://www.cnblogs.com/heaad/.  \n[15］段国林等.启发式算法及其在工程中的应用[J].机械设计,2000,17(6) :1-5.  \n[16]http://baike.baidu.com/link?url $\\ c =$ Lty_Vs1OQMzKs3a6_IE3cNW1tI-itffBy19na2SCR2Gq_v2xRD6zldvF4N62SSkZY2MTcuq3B955CffSaEDSuEzrDhneY8s04Qkjed-7HPFBN4iZh2kTwLgOiqaqp2yw.  \n[17］李斌,贺飞.求解一维下料问题的改进混合遗传算法[N].内蒙古大学学报，2014,45（3）：245-250.  \n[18］信息处理中的组合优化：装箱问题.  \n［19］段国林.基于智能工程的集成化智能设计系统及其在钟手表设计中的应用[D].天津：天津大学.1997.  \n［20］华中平,张立．基于线性规划的角钢优化下料算法研究［J].湖北工业大学学报,2005,20(5)：15-18.  \n[21］XShen,YLi,BZheng.General Particle Swarm OptimizationBased on Simulated Annealing for Multi-Specification One-dimensional Cutting Stock Problem［J].COMPUTATION-ALINTELLIGENCE&SECURITY,2007,4456:67-76.  \n[22]TWLeung，CHyung，MDTroutt.Applications ofgeneticsearch and simulated annealing to the two-dimensionalnon-guillotine cutting stock problem［J].Computers &Industrial Engineering,2001,40(3）:201-214.",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "Optimal Solution of Algorithms Survey ",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "Chang Yuan' ，Zhang Zhi Yuan²，Luo Jian1，Qu Jing (1.Beijing university of civil engineering and architecture， Beijing 1OoO44， China ; 2. China Academy of Building Research，Beijing 10oo13， China; 3.CABR Technology Co.，Ltd.，Beijing 100013，China) ",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "Abstract:This paper points outthat the optimization of rebar cuting is a complex discrete combinatorial optimization problem，summarizes the Genetic Algorithm，simulates Annealing and Heuristic Algorithm that in broad usage as a method for combinatorial optimization，and discusses the characteristics of each method.Finally，we know thatanindividual algorithmfindtheoptimalsolution randomlyand wastealotof time,according to the literature inrecent years.The method to solvethe problem is tocombine diffrent algorithm in special condition，and this kind of algorithm is more efficient. ",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "Key Words:Rebar Cuting；Combinatorial Optimization；Genetic Algorithm；Simulated Annealing；Heuristic Algorithm ",
        "page_idx": 3
    }
]