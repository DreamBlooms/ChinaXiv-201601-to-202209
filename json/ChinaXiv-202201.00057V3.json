[
    {
        "type": "text",
        "text": "Article ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Ladderpath Approach: How Tinkering and Reuse Increase Complexity and Information ",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Yu Liu $^ { 1 , * \\textcircled { \\gg } }$ , Zengru Di 1 and Philip Gerlee $2 \\textcircled { \\scriptsize { \\parallel } }$ ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Citation: Liu, Y.; Di, Z.; Gerlee,P. Ladderpath Approach: How Tinkering and Reuse Increase Complexity and Information.Journal Not Specified2022, 1,0.https://doi.org/ ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Received: Accepted: Published: ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Publisher's Note: MDPIstays neutral with regard to jurisdictional claims in published maps and institutional affiliations. ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1 International Academic Center of Complex Systems, Beijing Normal University, 519087 Zhuhai, China.   \n2 Departmentof Mathematical Sciences,Chalmers University of Technology& University of Gothenburg,40530 Gothenburg, Sweden. ￥ Correspondence: yu.ernest.liu@bnu.edu.cn ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Copyright: $\\circleddash$ 2022 by the authors. Submitted to Journal Not Specified for possible open access publication under the terms and conditions of the Creative Commons Attribution (CC BY) license (https:// creativecommons.org/licenses/by/ 4.0/). ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Abstract: The notion of information and complexity are important concepts in many scientific fields such as molecular biology,evolutionary theory and exobiology.Many measures of these quantities are either difficult to compute,relyon the statistical notion of information,or can onlybe applied to strings.Based on assembly theory,we propose the notion of a ladderpath,which describes how an object can be decomposed into hierarchical structures using repetitive elements. From the ladderpath two measures naturally emerge: the ladderpath-index and the order-index,which represent two axes of complexity. We show how the ladderpath approach can be applied to both strings and spatial patterns and argue that allsystems that undergo evolution can be described as ladderpaths.Further, we discuss possible applications to human language and the origin of life. The ladderpath approach provides an alternative characterization of the information that is contained in a single object (or a system) and could aid in our understanding of evolving systems and the origin of life in particular. ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Keywords: Complexity; Syntactic information; Shannon entropy; Kolmogorov complexity; Hierarchy; Module; Origin of life; Alien signal; Language; Evolution ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Contents ",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1. Introduction 2 15 ",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "2. Ladderpath approach: starting from scratch 3 ",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "2.1. A thought experiment . 3   \n2.2. Definition of generation-operation 4   \n2.3. Definition of ladderpath 6 ：   \n2.4. Definition of ladderpath-index $( \\lambda )$ , order-index $( \\omega )$ , and size-index (S) 8 ：   \n2.5. Ladderpath-index and order-index are two axes of \"complexity' 10   \n2.6. Extension of the concept: The ladderpath of a whole system 12 ：   \n2.7. Algorithm to compute the shortest ladderpaths . 13 ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "3. Ladderpath's significance in evolution: ladderpath-systems 14 24 ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "4. Discussions 15 ",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "4.1. On information: alien signals (isolated system) 16   \n4.2. On information: human language (non-isolated / united system) 17   \n4.3. On origins of life . 18   \n4.4. On why life is ordered . 19 ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "5. Conclusion 2 ",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Appendix 22   \nReferences 28 ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "1. Introduction ",
        "text_level": 1,
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "In an interview, John Maynard Smith noted that while the 19th century had been the century of energy, in which science and engineering were concerned with transforming energy from one form to another (chemical to mechanical as in a steam engine or mechanical to electrical as in a dynamo),the 2Oth century was about information,and in particular the transformation of information [1]. This shift has been particularly pronounced in biology where the discovery of DNA as the carrier of hereditary information,and the subsequent sequencing of the entire human genome has shaped biology into a science of information. ",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "Although most of us have an intuitive idea of what constitutes information, defining the term rigorously turned out to be challenging. This is partly due to the discrepancy in the meanings of the word information. In one sense information refers to knowledge or facts about the world (i.e., semantic information),whereas it can also refer to a characterization of the object structure that is independent of any interpretation or meaning (i.e., syntactic information) [2]. ",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "Consider the sentence: Claude was an American mathematician,and Claude spent his childhood in Michigan. The semantic information of this sentence is impossible to compute without properly defining the constituent words. We need to understand what “mathematician\" refers to in the real world,which cannot be deduced from this sentence on its own. Therefore when considering an object in isolation the only sensible measure of information is a syntactic one. ",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "When considering the transmission of signals along the communication channel, which was Claude Shannon's motivation for formulating the information theory, we would like each transmitted symbol to be as informative as possible. However, when we turn our eye to the human language or to biology, we note that information is often conveyed by structures that contain redundancy. ",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "These structures,which we often think of as complex,are somewhere between completely ordered (e.g. a crystal) and completely random (e.g. a perfect gas). From the intuitive point of view we would not like to assign a high complexity to a highly ordered sequence (e.g. a sentence with repetitive words), but on the other hand, we would not like to call a totally random sequence as complex since it lacks any structure. Instead, we would like to assign large complexity to sequences somewhere in between the repetitive and the random [3,4]. This requirement, motivated by our intuition, makes the definition of complexity challenging. ",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "The first attempt to quantify complexity along these lines was made by Kolmogorov [5] and later refined by Chaitin [6-8],and is referred to as algorithmic complexity. It defines the complexity of a sequence as the length of the shortest possible computer program that could generate the sequence. This sounds promising, but due to the halting problem of the universal Turing machine,it has the practical drawback that there is no universal method for calculating the complexity of an arbitrary string [9,10]. Notwithstanding, algorithmic complexity could be approximated when defined on a weaker class of Turing machines (i.e.,in particular contents or environments). For example, the well-known Lempel-Ziv complexity and algorithm that is widely used for file and data compression [11-13], related to an optimal rate of lossless string compression. Another example is the physical complexity that is particularly devised to characterize the amount of information about the surrounding environment that has been encoded in genomic sequences [14]. ",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "Another family of complexity measures build on Claude Shannon's information theoretic concepts and in particular on Shannon entropy, which is defined as $\\begin{array} { r } { H = - \\sum p _ { i } \\log _ { 2 } p _ { i } , } \\end{array}$ where the sum runs over all possible symbols in the sequence and $p _ { i }$ is the probability of observing symbol i (Shannon entropy itself is not a useful measure of complexity since it is maximized for completely random sequences)[15]. For example, Grassberger introduced a measure known as Effective Measure Complexity which is defined as the average amount of information contained in a string that can be used when guessing the next symbol [16]. A similar measure termed Statistical Complexity was introduced by Crutchfield and Young which measures the Shannon entropy of the probability distribution of the causal states present in the sequence [3]. In statistics,another related concept is Fisher information, representing the curvature of the relative entropy of the distribution of a random variable with respect to its parameters,which measures the information this random variable carries. It has a wide range of applications including measuring the complexity of learning tasks [17] and analyzing signals generated by the market [18]. ",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "Unlike the above-mentioned algorithmic complexity which is a form of absolute information of the individual object [19] and thus sensitive to the particular pattern of the sequence, the Shannon-entropy-related complexity measures rely on a statistical notion of information, which is insensitive to sequences. They can only be defined for sequences (or other objects) drawn from a statistical ensemble or equivalently sequences that are infinitely long. A solution to this problem is to assume that the underlying probability distribution for a specific sequence is uniform across all characters that appear in the sequence. However, this approach ignores the information (or “meaning\") stored in the particular sequence. The question of how to characterize the syntactic information content and the complexity of finite length single instantiations thus remains open. ",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "Since information is related to repeated patterns (as the Lempel-Ziv algorithm, for example, which utilizes repetitive substrings to compress information [20,21]), the above questions can also be approached from another angle,in a more general sense. The idea of joining or alternating objects that have already existed to construct new objects (e.g., gene sequences, molecules, technological inventions) was conceived in 1977 by Frangois Jacob, phrased as “evolution as tinkering\" [22]. This idea of accumulating information has laid the basis for many research fields such as protein interactions [23,24] and software modularity [25,26],and continues to inspire new research from a more general perspective, e.g. the evolution of network complexity where reuse plays a significant role [27]. In 1997 Donald Knuth extensively studied the “addition chain\" in his famous computer science book, which has a similar motivation: The shortest addition chain for n can be considered as the most efficient addition sequence to reconstruct an integer from integers that have been constructed previously [28]. More recently, the concepts of “pathway complexity\" [29] and \"assembly space\" [30,31] were developed to characterize the object complexity, by counting the number of construction steps, in which already built structures can be reused in subsequent constructing processes. This theory has been applied to detect biosignatures, and the hypothesis is that if a sufficiently complex molecule is found in abundance, biotic processes must have been involved [32]. Lately, the concept of \"molecular assembly tree\" was developed to characterize the hierarchical relationships within a group of distinct molecules, which shows great potential in fields such as drug discovery and origin of life research [33]. ",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "Following those lines above,i.e.,\"evolution as tinkering\",\"addition chain\",and especially \"assembly theory\",in this paper we formalize an alternative approach to characterize information and complexity by focusing on the process of generating given objects, e.g. sequences,sentences, pictures, molecules, proteins,architectural structures.We call this the ladderpath approach. It is grounded not in the abstract theory of computation such as Kolmogorov complexity or Shannon entropy, but rather, as suggested by assembly theory, inspired by the tinkering process and reuse in construction that has shaped the living world. ",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "In the following Section 2 we elaborate our ladderpath approach from scratch by giving related definitions one by one, followed by introducing an algorithm to calculate the ladderpath of an object. In Section 3 we relate the ladderpath to evolution,and lastly in Section 4 we discuss our findings in the context of interpreting unknown signals and ideas about life /evolution. ",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "2.Ladderpath approach: starting from scratch ",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "2.1.A thought experiment ",
        "text_level": 1,
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "In order to motivate the need for the definition of a ladderpath let us consider the following thought experiment: From somewhere in the universe, we have received a sequence of letters (assuming we have somehow translated it into Latin letters): ACXLGICXGOXEMZBRCNKXACXLPICXEMZBRCNKX. ",
        "page_idx": 2
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "Does this string contain any information,if yes,how could we understand or interpret it? First of all, we may say that this string contains information in the semantic sense, but we abandon this idea because we have no means of assigning a meaning to the individual letters in the string. ",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "How do we approach the problem of extracting information from the string? We may start by searching for repetitions in the sequence. In the string, EMZBRCNKX appears twice. But in such a short string, the probability that this 9-letter substring appears twice from randomness alone is very low (if it appears 3,4,10o or more times,we may be more certain that it mustn't appear randomly, and must have a specific semantic meaning). Although appearing twice is not completely impossible, here we assume that anything that repeats twice or more is not random. Therefore we assume that EMZBRCNKX must have a specific semantic meaning. Nonetheless, by just looking at this string itself, we cannot infer what EMZBRCNKX really refers to; If we frequently see EMZBRCNKX appears together with other texts, pictures,objects, etc., we have the possibility to infer what it refers. But for now, we can only say that EMZBRCNKX must mean something or it must be a word or phrase in an alien language. In addition, we see ACX appears twice so it also means something. ",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "How about other non-repetitive substrings such as LGIC and LPIC? Do they have particular meaning or semantic information? From this single string we can never figure it out. But if we find LPIC repetitively appears in some other places or sources, we can be sure that it must have a particular meaning. Thus, for the original string viewed in isolation, information in the semantic sense is just contained in EMZBRCNKX and ACX.1 ",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "2.2.Definition of generation-operation ",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "Let us now move one step closer to a rigorous definition of a ladderpath. The motivation comes from the following question: Imagine we have a set that includes letters A, B, C, D,E,and F, and we need to obtain a specific string ",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "",
        "text_level": 1,
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "then what is the quickest way (i.e., the least number of steps needed) to obtain $\\mathcal { X } ?$ Surely, this question can be extended to other situations, e.g. we have a set of atoms and need to obtain a specific molecule (a preliminary idea in the case of molecules has been investigated in our previous publication [33]); or we have a set of hardware and need to obtain a bicycle; or we have a set of ingredients and condiments,and need to obtain a specific dish. Here we just take the string as a simple but generic example. ",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "First of all, we define a basic set, denoted as $\\bar { \\mathbf { S } _ { 0 } } = \\{ \\mathbf { A } ( 0 ) , \\mathbf { B } ( 0 ) , \\mathbf { C } ( 0 ) , \\mathbf { D } ( 0 ) , \\mathbf { E } ( 0 ) , \\mathbf { F } ( 0 ) \\}$ which is defined to be a special type of partially ordered multiset,i.e., its elements are partially ordered (the ordered parts are separated by double slash $^ { \\prime \\prime } / / ^ { \\prime \\prime }$ ,between which we can call \"one level\"; and the unordered parts are separated by comma $^ { \\prime \\prime } , ^ { \\prime \\prime }$ ),and the number of instances (called multiplicity)of each element is written in the brackets behind the element. Note that the basic set $\\pmb { S } _ { 0 }$ should be predefined, according to the specific research problem currently at hand,after which the analysis can be conducted (see Section 4.1 for more discussions).In this specific case we defined the basic set to be constituted from single letters. ",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "Any element in this type of partially ordered multiset is called a building block (block for short).The elements in the basic set are called basic (building) blocks.In addition, the string we want to obtain, $\\mathcal { X }$ , is called the target (building) block.Note that, in $\\begin{array} { r } { { \\bf { S } } _ { 0 } , } \\end{array}$ .as shown above,the basic blocks are all unordered and their multiplicities are all zeros.Then, we define an operation on this type of partially ordered multiset: ",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "Generation-operation is defined as: take any number of blocks in the partially ordered multiset (the multiplicity decreases accordingly, but note that any block can be taken even if its multiplicity is zero or negative) and combine them in a certain way (note that the newly-generated blocks must not be present in the set),and then put the combined one back into the set at the level that is one level higher than the highest level of the constituted blocks.After this operation, a new partially ordered multiset of this type is obtained. ",
        "page_idx": 3
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "Note that: (1) It differs from the joining process in assembly theory [29,33] in that it allows any number of blocks to be joined and the puttng-back step keeps the partial order. (2) The \"negative multiplicity\" is only a transient notation used for simplicity purposes, which does not appear in the final result. (3) Here \"a certain way\" could be different for different systems. For example, for the string system here, we define “a certain way\" as: write the strings in the same line from left to right; For molecules, there could be a range of different generation-operations that could help capture properties like molecular isomerism (referring to Section 4.3 for more discussions).(4) \"at the level that is one level higher than the highest level of the constituted blocks\" means: for example,if the newly-generated block is made from blocks at level 1,level 3,and level 5, respectively, then the newly-generated block must be put at level 6. ",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "For example, the operation of taking A and C in $\\begin{array} { r } { { \\bf { S } } _ { 0 } , } \\end{array}$ combining them into AC,and then putting AC back is a generation-operation on $\\begin{array} { r } { { \\bf S } _ { 0 } , } \\end{array}$ ：which can be denoted as $\\begin{array} { r } { \\mathbf { S } _ { 0 } { : } \\mathbf { A } { + } \\mathbf { C } { = } \\mathbf { A } \\mathbf { C } \\quad } \\end{array}$ $ { \\bf S } ^ { \\prime } { = } { \\bf \\{  }$ A(-1), B(O), C(-1), D(O), E(O), F(O) // AC(1) }. Note that AC is put back at the next level of A and $C ,$ indicated by the symbol $^ { \\prime \\prime } / / ^ { \\prime \\prime }$ ： ",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "For another example, the operation of taking D,D,F,AC in $\\mathbf { { \\boldsymbol { s } } } ^ { \\prime }$ , combining them into DDFAC and then putting it back is a generation-operation on $\\mathbf { { \\boldsymbol { s } } } ^ { \\prime }$ , denoted as $\\mathbf { S } ^ { \\prime } \\colon \\mathrm { D } { + } \\mathrm { D } { + } \\mathrm { F } { + } \\mathrm { A C }$ ${ \\mathsf { \\Gamma } } = { \\mathrm { D D F A C } } \\to { \\mathbf { S } } ^ { \\prime \\prime } { = } \\{ { \\mathrm { A } } ( - 1 )$ ,B(0),C(-1),D(-2),E(O),F(-1) // AC(O) // DDFAC(1) }. Because AC is at the highest level among D,Fand AC which is level 2, so DDFAC is put back at level 3. For a third example, the operation of taking B, C in $\\mathbf { S } ^ { \\prime \\prime }$ , combining them into BC and then putting it back is a generation-operation on $\\mathbf { S } ^ { \\prime \\prime }$ ,denoted as $\\mathbf { S } ^ { \\prime \\prime } { : \\mathrm { B } } { + } \\mathbf { C } { = } \\mathrm { B C } \\to \\mathbf { S } ^ { \\prime \\prime \\prime } { = } \\{ \\mathrm { A } ( - 1 ) , $ （204号 B(-1), C(-2),D(-2),E(0),F(-1) // AC(0), BC(1) // DDFAC(1) ). Note that BC is put back at level 2,because B and C are at level1. ",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "Now, let's get back to the original question: how to obtain the target block $\\chi$ . The following example $( \\mathrm { E x 1 } )$ shows several successive generation-operations after which we obtain $\\chi$ ： ",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "ix1.1st generation-operation, ${ \\bf S } _ { 0 } \\colon \\mathrm { C } + \\mathrm { D } = \\mathrm { C D }  { \\bf S } _ { 1 } = \\{ { \\mathrm { ~ A } } ( 0 ) , { \\mathrm { ~ B } } ( 0 ) , \\mathrm { C } ( - 1 ) , \\mathrm { D } ( - 1 ) , \\mathrm { E } ( 0 ) , \\mathrm { F } ( 0 ) / / \\mathrm { ~ C D } ( 1 ) \\}$ . 2nd, $\\scriptstyle \\mathbf { 5 } _ { 1 } : \\mathrm { B } + \\mathbf { C D } = \\mathrm { B C D } \\to \\mathbf { S } _ { 2 } = \\left\\{ \\begin{array} { r l } \\end{array} \\right.$ A(0), B(-1), C(-1),D(-1), E(0), F(0) // CD(0) // BCD(1) } . 3rd, ${ \\bf S } _ { 2 } \\mathrm { { : } E + F = E F \\to { \\bf S } _ { 3 } = \\{ \\ A ( 0 ) , B ( - 1 ) , C ( - 1 ) , D ( - 1 ) , F _ { 3 } = \\Delta \\Phi _ { 0 } \\} } $ E(-1),F(-1) //CD(0),EF(1) //BCD(1)} . 4th, $\\mathbf { S } _ { 3 } { \\mathrm { : A + B C D + B C D + B C D + C D + E F + E F = } } \\chi$ （20 （204号 $\\begin{array} { r } { \\to \\mathbf { S } _ { 4 } = \\{ \\mathbf { A } ( - 1 ) . } \\end{array}$ ,B(-1), C(-1),D(-1),E(-1),F(-1) // CD(-1),EF(-1) // BCD(-2) // $\\mathcal { X } ( 1 ) \\left. \\right\\}$ . Lastly, take one $\\mathcal { X }$ out from $\\mathbf { S } _ { 4 } ,$ and then we achieve our goal: obtained one target block $\\mathcal { X }$ . The last step can be considered as one special generation-operation, that is,only take out butdo not putback,which can be denoted as S4:X(-1) → S5= {A(-1),B(-1),C(-1),D(-1),E(-1),F(-1)//CD(-1),EF(-1) // BCD(-2) // $\\mathcal { X } ( 0 )$ 1 ",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "From $\\scriptstyle \\mathbf { S } _ { 0 }$ and $\\pmb { S } _ { 1 }$ alone,we can infer that the generation-operation must be $C + D = C D$ . In general, the same argument applies to $\\mathbf { \\boldsymbol { s } } _ { i }$ and $\\mathbf { S } _ { i + 1 }$ . Therefore,we could simply write this path through which we achieve our goal as ${ \\bf S } _ { 0 }  { \\bf S } _ { 1 }  { \\bf S } _ { 2 }  { \\bf S } _ { 3 }  { \\bf S } _ { 4 }  { \\bf S } _ { 5 } \\Rightarrow \\chi$ Evidently, there are many paths through which we can achieve the same goal. Here is another sequence of operations that also result in $\\chi$ 、 ",
        "page_idx": 4
    },
    {
        "type": "text",
        "text": "$\\operatorname { E x } 2$ .1st generation-operation, $S _ { 0 } \\colon \\mathrm { D } \\mathrm { + } \\mathrm { B } \\mathrm { + } \\mathrm { C } \\mathrm { = } \\mathrm { D } \\mathrm { B C } \\to S _ { 1 } ^ { \\prime } \\mathrm { = } \\{ \\ \\mathrm { A } ( 0 ) , \\mathrm { B } ( - 1 ) , \\mathrm { C } ( - 1 ) , \\mathrm { D } ( - 1 ) , \\mathrm { E } ( 0 ) , \\mathrm { F } ( 0 ) \\ / / \\ \\mathrm { D } \\mathrm { B C } ( 1 ) \\ \\}$ .2nd, $\\mathbf { S } _ { 1 } ^ { \\prime }$ = $\\mathrm { E } { + } \\mathrm { F } { = } \\mathrm { E F } \\ \\stackrel { - } {  } \\mathbf { S } _ { 2 } ^ { \\prime } { = } \\{ \\mathrm { A } ( 0 ) , $ B(-1),C(-1),D(-1),E(-1),F(-1) // DBC(1),EF(1)) . 3rd, $\\mathbf { S } _ { \\gamma } ^ { \\prime }$ $\\therefore \\mathrm { A } + \\mathrm { B } + \\mathrm { C } = \\mathrm { A B C }  \\mathrm { S } _ { 3 } ^ { \\prime } = \\{ \\mathrm { A } ( - 1 ) ,$ B(-2), C(-2),D(-1),E(-1), F(-1) // DBC(1), EF(1),A(1) .4th, $\\mathbf { S } _ { 3 } ^ { \\prime }$ :DBC+DBC=DBCDBC $ { \\bf S } _ { 4 } ^ { \\prime } { = } \\{$ A(-1),B(-2),C(-2),D(-1),E(-1),F(-1) // DBC(-1),EF(1),ABC(1) // DBCDBC(1) } .5th,S $\\scriptstyle \\cdot C + \\mathrm { D } = \\mathrm { C D } \\to \\mathbf { S } _ { 5 } ^ { \\prime } = \\{ \\mathrm { A } ( - 1 ) , \\mathrm { E }$ 3(-2),C(-3),D(-2),E(-1),F(-1) //DBC(-1),EF(1),ABC(1),CD(1) //DBCD(1)} .6th, $\\mathbf { S } _ { 5 } ^ { \\prime }$ .： $\\scriptstyle \\mathrm { A B C + D B C D B C + D + C D + E F + E F = } \\chi$ （204号 →S={ A(-1), B(-2),C(-3),D(-3),E(-1),F(-1) // DBC(-1),EF(-1),ABC(0),CD(0) // DBCDBC(0) // $\\mathcal { X } ( 1 ) \\ \\}$ （20 . Lastly, $\\pmb { S } _ { 6 } ^ { \\prime } { : } \\mathcal { X } ( - 1 )$ （204号 →S={A(-1),B(-2),C(-3),(-3),E(-1),F(-1)//DBC(-1),EF(-1),ABC(0),CD(0)//BCDB()// $\\mathcal { X } ( 0 ) \\left. \\right\\}$ （20 ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "2.3.Definition of ladderpath ",
        "text_level": 1,
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "For a path $\\mathbf { S } _ { 0 }  \\mathbf { S } _ { 1 }  \\mathbf { S } _ { 2 }  \\cdot \\cdot \\cdot  \\mathbf { S } _ { n } \\Rightarrow \\mathcal { X }$ through which we obtain the target block $\\mathcal { X }$ , we construct another partially ordered multiset in the following way: Take the final set $\\begin{array} { r } { { \\pmb S } _ { n . } } \\end{array}$ , delete all of the blocks with zero multiplicity,and then set all other multiplicities to be the absolute value of the corresponding multiplicities (with the partial orders preserved). This procedure generates a new partially ordered multiset J, which we call the ladderpath of $\\chi$ that corresponds to this particular path. Anv block in the ladderpath is called a ladderon. ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "So, the ladderpath corresponding to $\\operatorname { E x 1 }$ is ",
        "page_idx": 5
    },
    {
        "type": "equation",
        "text": "$$\nJ _ { \\mathcal { X } , 1 } = \\left\\{ \\mathrm { A } , \\mathrm { B } , \\mathrm { C } , \\mathrm { D } , \\mathrm { E } , \\mathrm { F } / \\mathrm { C D } , \\mathrm { E F } / / \\mathrm { B C D } ( 2 ) \\right\\}\n$$",
        "text_format": "latex",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "Note that we often omit the multiplicity $^ { \\prime \\prime } ( 1 ) ^ { \\prime \\prime }$ for simplicity. Likewise, the ladderpath corresponding to $\\mathtt { E x 2 }$ is ",
        "page_idx": 5
    },
    {
        "type": "equation",
        "text": "$$\nJ _ { \\mathcal { X } , 2 } = \\{ \\mathrm { A } , \\mathrm { B } ( 2 ) , \\mathrm { C } ( 3 ) , \\mathrm { D } ( 3 ) , \\mathrm { E } , \\mathrm { F } / / \\mathrm { D B C } , \\mathrm { E F } \\}\n$$",
        "text_format": "latex",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "Evidently, every path through which the target block is obtained corresponds to one²   \nladderpath, but not vice versa. For example, 2 ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "$\\operatorname { E x } 3$ .1st generation-operation, $\\mathbf { S } _ { 0 } { \\mathrm { : D + B + C = D B C } } \\to \\mathbf { S } _ { 1 } ^ { \\prime } = \\{$ A(0), B(-1), C(-1), D(-1),E(0),F(0) // DBC(1) } . 2nd, $\\mathbf { S } _ { 1 } ^ { \\prime }$ $\\mathrm { E } { + } \\mathrm { F } { = } \\mathrm { E F } \\bar {  } { \\bf S } _ { 2 } ^ { \\prime } { = } \\{ { \\bf A } ( 0 )$ ,B(-1),C(-1),D(-1),E(-1),F(-1) //DBC(1),EF(1)} . 3rd, $\\mathbf { S } _ { 2 } ^ { \\prime }$ ： $_ { \\mathrm { A + B + C + D B C + D B C + D + C + D + E F + E F = } } \\chi$ $ \\mathbf { S } _ { 3 } ^ { \\prime \\prime } { = } \\{$ A(-1),B(-2),C(-3),D(-3),E(-1),F(-1) // DBC(-1),EF(-1) // X(1) } . Lastly, $\\mathbf { S } _ { 3 } ^ { \\prime \\prime } { : } \\mathcal { X } ( - 1 )  \\mathbf { S } _ { 4 } ^ { \\prime \\prime } { = } \\{$ A(-1), B(-2)C(-3),D(-3),E(-1),F(-1)//BC(-1),EF(-1)//() ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "This path can be denoted as ${ \\bf S } _ { 0 }  { \\bf S } _ { 1 } ^ { \\prime }  { \\bf S } _ { 2 } ^ { \\prime }  { \\bf S } _ { 3 } ^ { \\prime \\prime }  { \\bf S } _ { 4 } ^ { \\prime \\prime } \\Rightarrow \\chi ,$ and we can see that it also corresponds to ladderpath $J _ { \\mathcal { X } , 2 }$ . For a better understanding of the definition of the ladderpath, refer to Appendix B for more examples of the ladderpath of strings. ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "It is worth mentioning that   \nAny target sequence has at least one trivial ladderpath in which all the ladderons are basic blocks. ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "Taking $\\chi$ as an example, its trivial ladderpath is $J _ { \\mathcal { X } , 0 } = \\{ \\mathrm { A } , \\mathrm { B } ( 3 ) , \\mathrm { C } ( 4 ) , \\mathrm { D } ( 4 ) , \\mathrm { E } ( 2 ) , \\mathrm { F } ( 2 ) \\} .$ which represents many paths that only use the basic blocks in any order to make $\\chi$ ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "The significance of defining a ladderpath lies in the fact that one ladderpath represents many different but equivalent paths that generate the target block,meaning that the ladderpath completely filters out all of the tedious information of the steps along paths. The information retained in a ladderpath (including ladderons and their multiplicities,and the order relationships among ladderons) completely but non-redundantly describes all of the equivalent paths. The ladderpath has several good properties: ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "One ladderon is a block that has been reused (i.e., been part in a generation-operation at least twice). The reuse is the ultimate reason why we can simplify the process of making the target block (later we shall see that this type of simplification is closelyz! related to the \"information\"contained in the target block). 2! ",
        "page_idx": 5
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "For any ladderpath $J _ { \\mathcal { X } } ,$ ",
        "page_idx": 6
    },
    {
        "type": "equation",
        "text": "$$\nN _ { a } = \\sum _ { i \\in J _ { \\mathcal { X } } } \\left( m _ { i } \\times n _ { i , a } \\right)\n$$",
        "text_format": "latex",
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "holds for every letter, where $N _ { a }$ is the number of times the letter $a$ appears in the target sequence ${ \\boldsymbol { \\mathcal { X } } } , i$ represents all ladderons in this ladderpath $J _ { \\mathcal { X } } , m _ { i }$ is the ladderon $i ^ { \\prime } \\boldsymbol { \\mathrm { s } }$ multiplicity, and $n _ { i , a }$ is the number of times the letter $a$ appears in the ladderon $i$ ， Take $J _ { \\mathcal { X } , 1 }$ as an example. The letter $\\mathtt { B }$ appears 3 times in the target sequence $\\mathcal { X } ,$ i.e. $N _ { \\mathrm { B } } = 3$ . On the right hand side of Equation (3), the contribution of ladderon BCD is $2 \\times 1 = 2$ (as its multiplicity is 2 and the letter B appears once in BCD); the contribution of ladderon B is $1 \\times 1 = 1$ (as its multiplicity is 1 and the letter $\\mathbf { B }$ appears once in B); and the contribution of other ladderons is zero. So the right hand side is also $2 + 1 = 3$ It is straightforward to see that Equation (3) holds for all other letters A,C,D,E and $\\operatorname { F } ,$ too. Likewise, we can also verify ladderpath $J _ { \\mathcal { X } , 2 }$ and $J _ { \\mathcal { X } , 0 }$ ",
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "Any ladderpath can be fully described by a partially ordered multiset (namely, the partially ordered multiset representation, e.g.,Equation (1) and Equation (2)); Yet sometimes it is more intuitive to represent a ladderpath by a graph or network. We denote such a graph a laddergraph. An example is shown in Figure la, where the levels represent the order relationships in the ladderpath,and the links among blocks represent generation-operations (e.g.,E and F link up to EF, representing that EF is generated from E and F). ",
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "To make the laddergraph more concise, we make several conventions: ",
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "1. Dim all the lines that are linked to the basic blocks.   \n2. If a block $i$ at a lower level can be linked to a block $j$ at a higher level via other blocks, then even if $i$ and $j$ are directly linked, we do not draw the lines between $i$ and $j$ For example,in Figure la, the block CD ata lower level is directly linked to the target block $\\mathcal { X }$ at the higher lower since in the ladderpath $J _ { \\mathcal { X } , 1 } ,$ CD is directly involved when generating $\\mathcal { X } .$ but because CD is linked to ${ \\mathrm { B C D } } ,$ and BCD is linked to $\\chi$ , then we should not draw a line between CD and $\\chi$ ：   \n3. The multiplicities of blocks can either be written down explicitly (as in Figure 1) or not. ",
        "page_idx": 6
    },
    {
        "type": "image",
        "img_path": "images/d1c8f617ef3f4d7f0f1bbae45997bdb61a36a5a1eccfecc339471f435c5c66f6.jpg",
        "img_caption": [
            "Figure 1. (a) The laddergraph that corresponds to ladderpath $J _ { \\mathcal { X } , 1 }$ . (b) The laddergraph that corresponds to ladderpath $J _ { \\mathcal { X } , 2 }$ . Grey blocks represent target blocks. $^ { \\prime \\prime } [ \\times 1 ] ^ { \\prime \\prime }$ in front of the target block represents that \"we need to obtain1of such target block in the end\".If $( n )$ is added behindablock,it means the multiplicity (in the partially ordered multiset representation) of this block is $n$ ,while if there is no $( n )$ behind, it means the multiplicity is 1. Finally, (O) behind the target block means that its multiplicity in this ladderpath is O (in principle, we should not draw blocks if their multiplicities are $0 ^ { \\prime } \\mathrm { s } ,$ ,buthere we explicitly drew the target block,just in order to show the readers the hierarchical relationships between it and other blocks). "
        ],
        "img_footnote": [],
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "In principle, the partially ordered multiset representation and the laddergraph repre-279 sentation of a ladderpath are one-to-one, yet because of the convention (2) and (3) above, the28o laddergraph representation may lose some information.Nevertheless, the most important information of the ladderpath is well-retained in the laddergraph,i.e.,the hierarchical relationships among ladderons. ",
        "page_idx": 6
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "2.4.Definition of ladderpath-index(X),order-index (w),and size-index (S) ",
        "text_level": 1,
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "In this subsection, we will introduce three significant concepts: the ladderpath-index, and its associated concepts,size-index and order-index. But before that, we need to first define the\"length unit of a ladderpath\" and the \"length of a ladderpath\". ",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "For the string examples this paper describes,we define the length unit of a ladderpath as follows: for each operation, that concatenates any two strings (namely, blocks), we associate a unit called a $^ { \\prime \\prime } l i f t ^ { \\prime \\prime }$ (note that since how building blocks are combined together might be different in different systems,the length unit of aladderpath could be defined differently, yet we always term the unit as a $^ { \\prime \\prime } l i f t ^ { \\prime \\prime } )$ ： ",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "Since each generation-operation actually corresponds to writing $n$ blocks together, equivalent to repeating the action of \"writing two blocks together\" $( n - 1 )$ times. So,every generation-operation actually corresponds to a $( n - 1 )$ lifts.For example,in the path in Ex1 that ${ \\bf S } _ { 0 }  { \\bf S } _ { 1 }  { \\bf S } _ { 2 }  { \\bf S } _ { 3 }  { \\bf S } _ { 4 }  { \\bf S } _ { 5 } \\Rightarrow \\chi ,$ the length of the 1st generation-operation $C +$ ${ \\mathrm { D } } = { \\mathrm { C D } }$ is 1 lift, the length of the 2nd generation-operation $\\mathsf { B } + \\mathsf { C D } = \\mathsf { B C D }$ is 1 lift, the length of the 3rd $\\mathrm { E } + \\mathrm { F } = \\mathrm { E F }$ is 1 lift,and the 4th $\\mathrm { A } + \\mathrm { B C D } + \\mathrm { B C D } + \\mathrm { B C D } + \\mathrm { C D } + \\mathrm { E F } + \\mathrm { E F } = \\mathcal { X }$ is 6 lifts. For the last special generation-operation, we can consider it as writing $\\chi$ and another hypothetical empty symbol together,and its length is thus 1 lifts. For anther example, in the path in $\\mathtt { E x 2 }$ , the length of each generation-operation is 2,1,2,1,1,5,1 lifts,respectively. In the path in $\\operatorname { E x } 3$ ,the length of each generation-operation is 2,1,9,1 lifts,respectively. ",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "As mentioned, the length unit of a ladderpath might be defined differently. For example,when studying chemical molecules,the length unit may be defined to be the formation of one chemical bond between atoms,ions,or molecular fragments; when studying evolution, the length unit may be defined to be the emergence of a new species, or a new physiological function; and so on. Therefore, the length unit of a ladderpath is a user-defined quantity. Nevertheless, as long as it is well-defined beforehand, it is not allowed to be altered in the following analyses. ",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "We can now make the following definition: ",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "The length of a ladderpath J,denoted as $| J | ,$ is the sum of the lengths of all generationoperations along the ladderpath J. Note that, the length of any path is thus naturally defined as the sum of the lengths of all generation-operations along this path. ",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "$| J |$ is to describe the $^ { \\prime \\prime } \\mathrm { c o s t } ^ { \\prime \\prime }$ that is required to generate the target block,associated with this ladderpath J. One ladderpath often corresponds to many paths that can generate the target block,but the lengths of allof these paths are identical (which is one of the convenient properties of a ladderpath). This implies that we can pick any of such paths to calculate $\\left| J \\right|$ For example, it is easy to verify that the length of the paths in $\\operatorname { E x } 2$ and $\\operatorname { E x } 3$ are both 13 lifts, and both paths indeed correspond to one ladderpath $J _ { \\mathcal { X } , 2 }$ (evidently, we can conclude that $| J _ { \\mathcal { X } , 2 } | = 1 3$ lifts). For the path in $\\operatorname { E x 1 }$ , its length is 10 lifts,so the length of its corresponding ladderpath $J _ { \\mathcal { X } , 1 }$ is also 10 lifts (which is shorter than $J _ { \\mathcal { X } , 2 } )$ ： ",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "We now define the \"ladderpath-index\": ",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "Theladderpath-indexof targetblock $\\mathcal { X }$ ,denoted $\\lambda ( \\mathcal { X } )$ ,isthe length of the shortest ladderpath(s) of $\\chi$ (there may be one or several shortest ladderpaths). Thus, the length unit of ladderpath-index is also $^ { \\prime \\prime } l i f t ^ { \\prime \\prime }$ ",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "Note that (1) ladderpath-index differs from assembly index [31,33] in that the latter is measured by counting the joining steps while the former is measured by the length of generation-operations where the length unit must be predefined for different systems. (2) Computing the shortest ladderpaths is not trivial at all. Although we have proved that it is at least as hard as an NP-complete problem (i.e., this problem cannot be solved in a polynomial time scale as the size of the problem increases), we were still able to develop a rigid procedure and algorithm, referring to Section 2.7 for details. ",
        "page_idx": 7
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "For the target block $\\mathcal { X } , J _ { \\mathcal { X } , 1 }$ is its shortest ladderpath indeed. So, $\\chi _ { \\mathrm { ~ s ~ } } ^ { \\prime }$ ladderpath-index is 10 lifts, i.e., $\\lambda ( \\mathcal { X } ) = 1 0$ lifts. In fact,for any target block $\\chi$ ,itsladderpath-index $\\lambda ( \\mathcal { X } )$ describes one of its intrinsic properties, i.e., the smallest \"cost\" to generate $\\chi$ . The shortest ladderpaths is a central concept since it correspond to the most compressed way of storing the information contained in $\\mathcal { X }$ ,as we shall see soon. ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "We now proceed to the second critical concept, the \"size-index\": ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "The size-index $S ( i )$ of any block $i$ (e.g.,the target block or a ladderon) is the length of its shortest trivial ladderpath (there could be one or several shortest trivial ladderpaths, but they all have the same length). ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "If the basic blocks are single letters,the size-index is the number of letters in the string, e.g., size-index of $\\chi$ is 16 lifts,because its trivial ladderpath corresponds to the one where we generate $\\chi$ by just concatenating single letters. ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "The reason why the definition emphasizes the word \"shortest\" is that if the basic set includes not only single letters but also strings, the lengths of trivial ladderpaths might be different. For example, let the basic set be $\\{ { \\mathrm { A } } , { \\mathrm { B } } , { \\mathrm { C } } , { \\mathrm { D } } , { \\mathrm { E } } , { \\mathrm { F } } , { \\mathrm { B C D } } \\}$ for $\\mathcal { X }$ . The trivial ladderpath could then correspond to concatenating single letters as before, i.e., $\\{ \\mathrm { A } , \\mathrm { B } ( 3 )$ C(4),D(4),E(2),F(2)) which has the length of 16 lifts. Alternatively, we could employ multi-letter strings in the basic set and obtain a trivial ladderpath of the form $\\{ \\mathrm { A } , \\mathrm { B C D } ( 3 ) , \\mathrm { C } ,$ D,E(2),F(2)) whose length is 10 lifts.In this case,we mustchoose the length of the shortest trivial ladderpath to be its size-index. ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "We now introduce the concept of \"order-index\": ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "The order-index $\\omega ( \\mathcal { X } )$ of the target block $\\chi$ is defined to be ",
        "page_idx": 8
    },
    {
        "type": "equation",
        "text": "$$\n\\omega ( \\mathcal { X } ) : = S ( \\mathcal { X } ) - \\lambda ( \\mathcal { X } )\n$$",
        "text_format": "latex",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "where $s ( \\mathcal { X } )$ is the size-index of $\\mathcal { X }$ and $\\lambda ( \\mathcal { X } )$ is the ladderpath-index of $\\chi$ . Evidently, the unit of order-index is $^ { \\prime \\prime } l i f t ^ { \\prime \\prime }$ ,too. ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "This means that the order-index is equivalent to the number of lifts that are saved when generating the target block $\\chi$ via the shortest ladderpath compared to the trivial ladderpath, or in other words, the work that has been saved from combining blocks when constructing the target. ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "Last, we introduce an important property of the length of a ladderpath, which is crucial for calculating ladderpath-index and order-index: ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "The length of a ladderpath $J _ { \\mathcal { X } }$ can be directly calculated from its partially ordered multiset representation, with no need to convert the ladderpath into one of its corresponding path. The length can be calculated as: ",
        "page_idx": 8
    },
    {
        "type": "equation",
        "text": "$$\n| J _ { \\mathcal { X } } | = S ( \\mathcal { X } ) - \\sum _ { i \\in J _ { \\mathcal { X } } } m _ { i } \\cdot ( S ( i ) - 1 )\n$$",
        "text_format": "latex",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "where $S ( \\mathcal { X } )$ is the target block $\\chi \\cdot$ s size-index, $S ( i )$ is the ladderon $i ^ { \\prime }$ s size-index, $m _ { i }$ is the ladderon $i ^ { \\prime }$ s multiplicity, and $i$ represents all ladderons in this ladderpath $J _ { \\mathcal { X } }$ ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "For example, in $\\operatorname { E x 1 }$ the ladderpath was given by Jx,1 = {A,B,C,D,E,F // CD,EF // BCD(2) }. $\\chi$ 's size-index is 16 lifts; the size-index of any basic block is evidently 1 lift (so their contributions are always O,and thus no need to consider); the size-indices of CD,EF, BCD are 2,2,3 lifts,respectively; so, $| J _ { \\mathcal { X } , 1 } | = 1 6 - \\left( 2 - 1 \\right) - \\left( 2 - 1 \\right) - \\left( 3 - 1 \\right) \\times 2 = 1 0$ lifts. Likewise, $| J _ { \\mathcal { X } , 2 } | = 1 6 - ( 3 - 1 ) - ( 2 - 1 ) = 1 3$ lifts. As we can see, the lengths calculated in this method are identical with the ones calculated directly through the definition. ",
        "page_idx": 8
    },
    {
        "type": "text",
        "text": "In fact,based on Equation (5)and the definition of the order-index,the order-index of the target block $\\mathcal { X }$ can be readily calculated from the following formula: ",
        "page_idx": 9
    },
    {
        "type": "equation",
        "text": "$$\n\\omega ( \\mathcal { X } ) = \\sum _ { i \\in J _ { \\mathcal { X } } } m _ { i } \\cdot ( S ( i ) - 1 )\n$$",
        "text_format": "latex",
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "where $i$ representsallladderons in this shortest ladderpaths. ",
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "2.5. Ladderpath-index and order-index are two axes of \"complexity' ",
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "The shortest ladderpaths of the target block $\\chi$ contains “the whole knowledge\" about how to describe its complexity and the information it carries; The ladderpath-index and order-index calculated from the shortest ladderpaths are abstractions of this whole knowledge in different aspects: ",
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "The ladderpath-index $\\lambda ( \\mathcal { X } )$ describes the amount of “information\" that $\\mathcal { X }$ carries, that is,how many extra steps/\"costs\" or how much extra \"information\" the external agent needs to input in order to generate $\\chi$ , equivalent to the difficulties to reproduce （204号 $\\chi$ (which is distinct from the \"information\" that Shannon entropy or thermodynamic entropy refers to).   \n. The order-index $\\omega ( \\mathcal { X } )$ describes how much “information\" can be saved, i.e., the amount of redundant \"information\" (equivalently, the difference between the trivial ladderpath and the shortest ladderpath). This is consistent with the intuition, as the more steps/\"costs\" (namely,how many lifts) it saves, the more ordered the target block $\\chi$ is.   \n. Now we can see that \"complexity\" that we often intuitively talk about has two aspects: One is described by the ladderpath-index $\\lambda$ which focuses more on the difficulties and costs of constructing the target; While the other aspect is described by the order-index $\\omega$ which focuses more on how the target is built in an organized and hierarchical manner.   \n. Lastly, for a particular target (or target system), the sum of its ladderpath-index and its order-index is always equal to its size-index, which automatically solves the \"normalization\" problem that may occur when comparing different sized targets. ",
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "To be more clear, we consider a simple example: consider the sequence in Section 2 which had some structure, $\\scriptstyle { \\mathcal { X } } =$ ABCDBCDBCDCDEFEF, and another random sequence with the same length, $\\mathcal { W } =$ ABCDEFCFEDCBFDBA.Intuitively, the information that $\\boldsymbol { \\mathcal { W } }$ carries is more than that carried by the non-random $\\mathcal { X }$ ,because,to repeat $\\mathcal { W }$ ， the amount of information needed (i.e., needed to be memorized) is larger than that needed to repeat $\\chi$ . On the other hand, the random $\\mathcal { W }$ is less ordered/organized compared to $\\chi$ . These two aspects are intuitively consistent with the two concepts $\\lambda$ and $\\omega$ : On one hand, $\\lambda ( \\mathcal { W } ) = 1 6 > \\lambda ( \\mathcal { X } ) = 1 0 ,$ ,i.e.,the information $\\boldsymbol { \\mathcal { W } }$ carries is more than that $\\chi$ carries; on the other hand, $\\omega ( \\mathcal { W } ) = 0 < \\omega ( \\mathcal { X } ) = 6 ,$ i.e., $\\mathcal { W }$ is less ordered/organized than $\\chi$ ",
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "The concepts we have introduced apply not only to strings, but also to any other objects. Based on the definition of the order-index Equation (4),we can draw Figure $2 \\mathsf { a } .$ where each diagonal is the contour line of the size-index S.We can see that under the same ladderpath-index (i.e., contains the same amount of information and is equally difficult), the more ordered an object is,the larger it is; while under the same size-index, the more ordered the object is,the smaller the ladderpath-index is,i.e.,the less information it contains. ",
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "Now, we take a detailed example to further explain how the concept of ladderpath describes the \"complexity\" of objects. Consider the patterns shown in Figure $2 \\mathbf { b } ,$ which can be interpreted as stones placed in a clearing. These patterns can be described using the ladderpaths shown in Figure 2c (see Appendix C for details on how to compute the ladderpaths of these stone patterns),and from these the corresponding ladderpath-index and order-index can be computed. ",
        "page_idx": 9
    },
    {
        "type": "text",
        "text": "Based on these we make the following observations: ",
        "page_idx": 9
    },
    {
        "type": "image",
        "img_path": "images/ade4820315d140531d653e4c7eca82bb3afc190a1a374851d73fb25a0149db55.jpg",
        "img_caption": [
            "Figure 2.(a) The relationships among the ladderpath-index $\\lambda _ { . }$ ,the order-index $\\omega$ and the size-index S.The blue diagonals are the contour lines of S.The points [i]-[vi] correspond to the patterns in (b) (note that one coordinate could correspond to an infinite number of patterns),and the coordinates are (6,12),(6,7),(11,7),(6,2),(11,2),(16,2),respectively. (b) The paterns corresponding to the six coordinates in (a). (c) The ladderpaths of the six patterns. "
        ],
        "img_footnote": [],
        "page_idx": 10
    },
    {
        "type": "text",
        "text": "1. For patterns with the same size-index (e.g., [i],[ii] and [vil),as $\\omega$ increases, the pattern becomes more and more ordered, which is consistent with our intuitions. On the other hand,as the ladderpath-index $\\lambda$ increases, the pattern becomes more and more difficult to reproduce (e.g., to reproduce [vi], we need to memorize the position of almost every stone, but to reproduce [i], we only need to memorize the description of the ladderpath,rather than the position of each stone),which is also consistent with our intuitions.   \n2. There are some counter-intuitive points indeed, yet they are also the most important: For example,[i] is more ordered than [ii],but the difficulty to generate eitherof them is the same,as their $\\lambda$ 's are identical.[i] is more ordered than [ii] and [vi],but it is less difficult and takes fewer lifts to generate [i]. [i] is more ordered than [vl, yet not only is it less difficult to generate [i], the size of [i] is also larger than [v] (the same argument applies to [ij, compared with [iv], [v] and [vi]; and so on). We shall see later that this point is the very key to explaining why the emergence of life is not as difficult as imagined before. ",
        "page_idx": 10
    },
    {
        "type": "text",
        "text": "It deserves to mention that we may intuitively say that [vi] is more \"complex\" than [il, because the former looks more random /irregular /difficult to reproduce; while we may also say that [i] is more \"complex\" than [vil,because [i] needs more detailed,complex and delicate mechanisms to generate.However, it is not dificult to realize that these two \"complex\" refer to two distinct directions.The former is about how much information the system contains (or equivalently, how diffcult, how much external information we need to input, to reproduce the system); while the latter is about how organized the system is. In fact, the two directions correspond to the ladderpath-index $\\lambda$ and the order-index $\\omega$ respectively. Therefore, now we are able to distinguish the two axes of \"complexity\" ",
        "page_idx": 10
    },
    {
        "type": "text",
        "text": "The final remark on the two axes of complexity is that we always have $\\lambda ( \\mathcal { X } ) + \\omega ( \\mathcal { X } ) \\equiv$ $s ( \\mathcal { X } )$ , indicating that the two axes are not independent for a particular target or target system $\\chi$ . It is true indeed,but in fact,any target can be placed in a particular position in these coordinates. This is because although the three indices are constrained by $\\lambda + \\omega \\equiv$ S,two of them are free. Referring to Figure 2, if we fix the size-index of a target, by rearranging the patterns of this target, it can move freely in the coordinates (e.g., imaging rearranging among pattern [i], [ii] and [vil). It is exactly because of the internal structure and information of this target, its coordinates are fixed. Note that $\\lambda$ and $S _ { \\nu }$ or $\\omega$ and $s$ could be chosen as the axes,but our motivation here is to relate the intuition of complexity with the axes,and the intuition of complexity often comes from difficulty and order, as we have discussed above.To emphasize, the size is a significant factor of the complexity of an object, but it is not simply a proportional relationship-not simply the larger the size, the more complex—for example,referring to the Figure 2b,pattern [i] is larger than [v] but [i] is easier to be reproduced (as the ladderpath-index of [i] is smaller). This is exactly why we need the indices $\\lambda$ and $\\omega$ to represent the two axes of complexity. With these concepts, we can now readily compare the complexity of objects with different sizes. ",
        "page_idx": 10
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "2.6.Extension of the concept: The ladderpath of a whole system ",
        "text_level": 1,
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "Up until now, we have discussed the ladderpath of a single target block, but all of these concepts can be extended to a whole system of blocks.To do that, we need to consider allof the blocks in the target as a whole and as one huge “target block\".For example, if in the system, there are 2 strings of AAB,3 strings of BC and 1 string of DDF, we can then consider them as one huge \"target block\": the string \"AAB,AAB, BC, BC, BC,DDF\",which we term the target system for convenience (but note that these strings are not connected, which is distinct from the single string AABAABBCBCBCDDF). It deserves to mention that the ladderpath of a target system is different from the concept of the \"molecular assembly tree\" which only handles a group of distinct types of molecules [33]. ",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "Now we take an example to illustrate the ladderpath of a target system (the extension of other concepts is then straightforward). Imagine the target system we need to obtain in the end is ",
        "page_idx": 11
    },
    {
        "type": "equation",
        "text": "$$\n\\mathcal { Q } = \\{ \\mathrm { A B D E D B E D } ( 2 ) , \\mathrm { A B D E D } , \\mathrm { A B D A B D } , \\mathrm { C A B } ( 2 ) , \\mathrm { E D } ( 3 ) \\}\n$$",
        "text_format": "latex",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "while the basic set is ${ \\bf U } _ { 0 } = \\{ \\mathrm { A } ( 0 ) , ~ \\mathrm { B } ( 0 ) , ~ \\mathrm { C } ( 0 ) , ~ \\mathrm { D } ( 0 ) , ~ \\mathrm { E } ( 0 ) \\}$ ．So，the following successive 468 generation-operations make one path: ",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "$\\mathtt { E x 4 }$ 1st generation-operation, U0:A+B=AB → U1={ A(-1), B(-1),C(O), D(O), E(O) // AB(1) } . 2nd, $\\mathbf { U } _ { 1 } { : } C + \\mathrm { A B } { = } C \\mathrm { A B } \\to \\mathbf { U } _ { 2 } { = } \\{ \\mathrm { A } ( - 1 ) , $ B(-1), C(-1), D(0),E(0) // AB(0) // CAB(1) } . 3rd, ${ \\mathrm { I } } _ { 2 } \\colon \\mathrm { A B } + \\mathrm { D } = \\mathrm { A B D } \\to { \\mathbf { U } } _ { 3 } = \\{ \\mathrm { ~ A } ( - 1 ) , { \\mathrm { B } } ( - 1 ) , \\mathrm { C } ( - 1 ) , { \\mathrm { D } } ( - 1 ) , \\mathrm { E } ( 0 ) \\mathrm { ~ / / ~ A B } ( - 1 ) \\mathrm { ~ / / ~ C A B } ( 1 ) , \\Delta { \\mathrm { R } } ( - 1 ) \\} \\mathrm { ~ / ~ C } \\mathrm { A B } ( 1 ) \\mathrm { ~ / ~ C } \\mathrm { B } ( - 1 ) \\mathrm { ~ / ~ C } \\mathrm { B } ( - 1 ) \\mathrm { ~ }$ ABD(1) } . 4th, $\\mathbf { U } _ { 3 }$ $: \\mathrm { A B D + A B D = A B D \\mathrm { A B D }  U _ { 4 } = \\{ \\mathrm { A } ( - 1 ) , \\mathrm { B } ( - 1 ) , \\mathrm { C } ( - 1 ) \\} } $ ),D(-1),E(0) // AB(-1) // CAB(1),ABD(-1) // ABDABD(1) } . 5th, $\\mathbf { U } _ { 4 } { \\mathrm { : E + D / = E D } }  \\mathbf { U } _ { 5 } = \\{$ A(-1), B(-1),C(-1),(-2),E(-1) //AB(-1),ED(1) //CAB(1),ABD(-1) //ABDAB()} . 6th, $\\mathbf { U } _ { 5 }$ :ABD $^ +$ ED $\\ c =$ ABDED $ \\mathbf { U } _ { 6 } { = } \\{ \\operatorname { A } ( - 1 )$ ,B(-1), C(-1), D(-2), E(-1) // AB(-1),ED(0) // CAB(1),ABD(-2) // ABDABD(1),ABDED(1) 1 .7th, $\\mathbf { U } _ { 6 }$ :ABDED $+ \\mathrm { B + E D = }$ ABDEDBED $ \\mathbf { U } _ { 7 } = \\{ \\mathrm { A } ( - 1 ) ,$ B(-2), C(-1), D(-2), E(-1) // AB(-1),ED(-1) // CAB(1),ABD(-2) // ABDABD(1),ABDED(0) //ABDEDBED(1) } ",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": ". Lastly, take all the blocks included in the target system $\\mathcal { Q }$ from $\\mathbf { U } _ { 7 }$ , and then the goal is achieved. The last step can be considered as one special generation-operation, i.e., take out but do not put back, denoted as ${ \\bf U } _ { 7 } { : } \\mathcal { Q } ( - 1 )  { \\bf U } _ { 8 } =$ { A(-1),B(-2),C(-1),D(-2),E(-1)//AB(-1),ED(-4)//CAB(-1),ABD(-2)//ABDABD(),ABDED(-1)//ABDED) ",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "Therefore, the ladderpath that corresponds to this path above is (its laddergraph representation is shown in Figure 3): ",
        "page_idx": 11
    },
    {
        "type": "equation",
        "text": "$$\nJ _ { \\mathcal { Q } } = \\{ \\mathbf { A } , \\mathbf { B } ( 2 ) , \\mathbf { C } , \\mathbf { D } ( 2 ) , \\mathbf { E } / / \\mathbf { \\Delta A B } , \\mathbf { E D ( 4 ) } / \\cup \\mathbf { C A B } , \\mathbf { A B D ( 2 ) } / / \\mathbf { \\Delta A B D E D } / / \\mathbf { \\Delta A B D E D B E D } \\}\n$$",
        "text_format": "latex",
        "page_idx": 11
    },
    {
        "type": "text",
        "text": "In fact, this path is $\\mathcal { Q }$ s shortest ladderpath indeed (verified by our algorithm, detailed in Section 2.7). So,based on Equation (6),we are able to calculate $\\mathcal { Q } ^ { \\prime }$ s order-index $\\omega ( { \\mathcal { Q } } ) =$ $1 + 1 \\times 4 + 2 + 2 \\times 2 + 4 + 7 = 2 2$ lifts. As $\\mathcal { Q } ^ { \\prime }$ s size-index is $S ( \\mathcal { Q } ) = 8 \\times 2 + 5 + 6 + 3 \\times 2 +$ （204号 $2 \\times 3 = 3 9$ lifts (namely, the total number of letters included in all of the strings in $\\mathcal { Q }$ ,we can then use Equation (4) to calculate its ladderpath-index $\\lambda ( \\mathcal { Q } ) = 3 9 - 2 2 = 1 7$ lifts. We can verify this result by looking at the total length of all the generation-operations in the corresponding path: The lengths of the first six generation-operations are all1 lifts, the 7th generation-operation has the length of 2 lifts,and the last special generation-operation has the length of 9 lifts,so the answer is also 17 lifts. ",
        "page_idx": 11
    },
    {
        "type": "image",
        "img_path": "images/387b4d24e3730502b9dfb77247bd3792d4b06bda88bfe8e4369f0fdad7067e43.jpg",
        "img_caption": [
            "Figure 3.The laddergraph representation of one ladderpath of the target system $\\mathcal { Q }$ (this ladderpath $J _ { \\mathcal { Q } }$ is actually the shortest one for $\\mathcal { Q }$ ). All of the grey blocks constitute the target system $\\mathcal { Q }$ ： $^ { \\prime \\prime } [ \\times n ] ^ { \\prime \\prime }$ in front of the grey blocks represents that there are $n$ such blocks included in the target system $\\mathcal { Q }$ .If $( n )$ is added behind a block,it means the multiplicity(in the partially ordered multiset representation) of this block is $n _ { \\iota }$ ,while if there is no $( n )$ behind, it means the multiplicity is 1. Finally, (O) means that its multiplicity in this ladderpath is O (in principle, we should not draw blocks if their multiplicities are $0 ^ { \\prime } \\mathrm { s }$ ,buthere we explicitly drew them,just in order to show the readers the hierarchical relationships among important blocks). "
        ],
        "img_footnote": [],
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "2.7.Algorithm to compute the shortest ladderpaths ",
        "text_level": 1,
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "To find the shortest ladderpath(s), we first developed the procedure that can give us one ladderpath each time, regardless of its length. Here we illustrate this procedure in the case of a target system instead of a target block,as the former is a more general case (without losing generalities, taking strings as an example): ",
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "1. First, create an empty multiset $\\mathcal { H }$ to store blocks in. Later the ladderpath can be readily computed from $\\mathcal { H }$   \n2. Starting from the target system $\\scriptstyle { \\mathcal { Q } } ,$ we preserve only one instance of each type of distinct blocks in $\\scriptstyle { \\mathcal { Q } } ,$ and put all other repetitions into $\\mathcal { H }$ ：   \n3. Keep slicing the blocks in $\\mathcal { Q }$ (i.e. slicing strings into multiple substrings or letters in a pre-determined systematic manner, until in $\\mathcal { Q }$ there are at least two substrings (or letters) that are identical. Preserve only one of such identical substrings in $\\mathcal { Q }$ and put all other repetitions into $\\mathcal { H }$ . Note that there could be many systematic manners to slice the string, referring to Appendix D for an example.   \n4. Repeat from step 3,until no repetitive substrings or letters can be found in $\\mathcal { Q }$ . Then, cut all of the remaining substrings into basic blocks (i.e. single letters in this case), and put them all into $\\mathcal { H }$ . Now, $\\mathcal { H }$ records one ladderpath.   \n5. The final step is to align the (sub)strings in $\\mathcal { H }$ in the right hierarchical order (that is, based on how they are sliced: which is the parent and which are the children), which results in the partially ordered multiset representation of this ladderpath. ",
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "See Appendix D for a detailed example. The output of the above procedure will depend on how we slice the strings. If we go through all deterministic slicing schemes we will generate all possible ladderpaths of the target system. From this collection of ladderpaths we select the shortest one. This gives us the algorithm to obtain the shortest ladderpaths. The code of this algorithm is available at https://github.com/yuernestliu/ladderpath. ",
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "The motivation here is to show a proof-of-concept algorithm and code to calculate the shortest ladderpath for a small target or target system, rather than providing an efficient and practical algorithm to deal with long strings or sequences (which might be used for string compression or gene sequence analysis for example). The idea is that if an algorithm for short strings can be specified, other algorithms for long strings, images,molecules, proteins,3D objects,etc could be developed and sophisticated in the future. ",
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "Indeed,as Lempel-Ziv is alsoa lossless compressionalgorithm [12,13],it shares some similarities with this ladderpath algorithm in the aspects of general ideas of hierarchy and a few coding techniques.Nevertheless,besides their different motivations, the outputs of the two algorithms, resulting from their calculated slicing scheme respectively, are also different. ",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "The final remark on the current version algorithm is that,it is not feasible to enumerate alladderpaths for a large system as the number of possible ways to slice a string increases exponentially with its length. In fact, finding the shortest ladderpaths is at least as hard as an NP-complete problem, because it is a more complex version of the addition chain problem (first introduced by Knuth in his book [28]) which has been proven to be NP-complete [34]. ",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "Nevertheless, in practice it might be acceptable to just have \"short-enough\" ladderpaths. Then there might be shortcuts. For example,we can slightly change the above algorithm: ",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "In step 3, we bias the algorithm to search for repetitive substrings of maximum length. ",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "In this way,although the ladderpath obtained is not guaranteed to be the shortest rigorously, it tends to be often short enough. The intuition is that the longer the ladderons (i.e.repetitive substrings) are, the more generation-operations are saved,and thus the shorter the resulted ladderpath is. ",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "3.Ladderpath's significance in evolution:ladderpath-systems ",
        "text_level": 1,
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "A system's ladderpath-index $\\lambda$ corresponds to the least \"cost\" needed to generate the system. If we assume that the probability associated with each generation-operation is identical, then $\\lambda$ would be inversely proportional to the overall probability to generate this system, i.e., the larger $\\lambda$ is, the less probable the system can be eventually generated. For example, as shown in Figure 2, generating /reproducing pattern [i] is easier than generating /reproducing pattern [vi]. ",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "However, to safely reach this statement “generating [i] is easier than generating [vi]\",a key assumption has to be made. This key assumption is: Any block that has been generated in previous steps can be reused in any amount, with no need to generate it from scratch (that is to say, the number of any block that has been generated is immediately infinite as if any of such block has an infinite reservoir; or equivalently, the number of ladderons is always infinite). For example, the last ladderon of pattern [i] (referring to Figure 2c, the pattern that consists of 8 stones) is reused once (i.e. repeated twice),meaning that the length of the trivial ladderpath of the last ladderon, namely 7 lifts, is saved. This kind of reuse is the very reason that makes generating li] simpler than generating [vi]. ",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "In certain real-world scenarios, this type of reuse is possible (but not in every scenario). For example,in technology, if a new invention gets known in the society, itcanbe reused from that time on, with no need to reinvent it, that is, the reuse of ladderons is possible. But if one invents something but no other person knows it, the reuse of this invention would not be possible from the perspective of the whole society, meaning that the system (namely, the society) will not behave as the ladderpath theory describes. ",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "Naturally,a further question arises: What conditions must a system satisfy such that it can be described by the ladderpath process? The answer is, we need two conditions: the first is the ability to generate new blocks,and the second is that blocks can replicate and thus increase in number. The first condition is implied in the generation-operation, while the second is implied in the assumption that the number of any ladderon is infinite. So, we calla system as a ladderpath-system if it satisfies the two conditions: (i) the ability to generate new blocks,and (ii) some or all blocks can replicate. ",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "Intriguingly, these two conditions hold in many scenarios /systems,such as life,language, and technology. ",
        "page_idx": 13
    },
    {
        "type": "text",
        "text": "Notice that for the first condition “the ability to generate new blocks\",new blocks do not have to be generated by combining two existing blocks, that is, the generationoperation does not have to be exactly like the description in Section 2.2,and it can be defined differently according to the specific system in question. For example,if we consider single cels, not only gene recombination and horizontal gene transfer can be defined to be generation-operations (as the way before, i.e.,by combining existing blocks),a genetic mutation can also be defined to be a generation-operation (in a diferent way, i.e. by changing an existing block). As for language, people create new words by combining existing words, borrowing words from other languages,and so on, resulting in new blocks generated. For technology, inventing is the way to generate new blocks which are always made by recombining or revising what already existed. ",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "As for the second condition \"replication\",refers to either self-replication,or duplication with the aid of other things.That is, if a block can be categorized as a ladderon, it must have the ability to replicate.Allladderons are blocks,but only the blocks that are able to replicate become ladderons.Which blocks can replicate and which cannot set the stage for the “natural selection\". One of the prominent properties of life is the ability to self-replicate: an individual and a species can self-replicate; and DNA can also replicate (it is actually the network consisting of DNA, RNA,and protein that can replicate [35-37]). For languages, the newly-created words and phrases can be used by other people is the way to replicate (when long-distance communication is not as convenient as today, the words that are newly created by local people hardly propagate in the whole society, so seeing from the whole society, these new words cannot become ladderons, which might be the mechanisms that a language is divided into different accents or evolves to different languages). For technology, if inventions are well-documented in papers, patents, etc., such that they can be reproduced, they can be considered as being able to replicate. ",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "Now, that we have introduced the concept of ladderpath-systems, we may further address the following question: do totally random structures (white noise for example) carry the most information, or is the opposite true? There are two different angles to look at the “information\" that the question refers to. (1) To repeat the particular sequence of a white noise, we need to memorize the whole sequence,which itself, in a sense,necessitates the great amount of explicit information. (2) Yet, complexity does not only mean the \"difficulty to repeat\" but also the amount of underlying hierarchical information that involves repetition and selection, which is another layer of information. We argue that the second layer of information is taken care of by the two properties of ladderpath-systems mentioned above. That is, the abundance of such selection-associated information is indicated by the ladderpath-index and the order-index both having a high value.Therefore, in this sense, white noise is almost devoid of such information, since only its ladderpathindexis high whereas its order-index is extremelylow. ",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "To end this subsection, the origin of life is likely to have occurred via this \"ladderpath mechanism\" (not in a \"magical event\"),that is,during the process lots of ladderons (which are able to replicate) must have been generated. In fact, there is evidence for that: e.g., obviously cells and species can self-replicate; the molecules that are made of individual cels or constitute chemical reaction networks (e.g. autocatalytic sets [35-37]) are indeed able to replicate. ",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "4. Discussions ",
        "text_level": 1,
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "In this paper we have introduced the concept of a ladderpath of an object, which makes it possible to characterize the complexity of an object along two axes: the ladderpath-index and the order-index. We will now discuss how this construction plays out in two different context: isolated and non-isolated Iunited systems. ",
        "page_idx": 14
    },
    {
        "type": "text",
        "text": "4.1.Oninformation:alien signals(isolated system) ",
        "text_level": 1,
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "Let us imagine we have received a sequence $y$ of letters from another planet (some signals which have been converted to a sequence of letters): ",
        "page_idx": 15
    },
    {
        "type": "equation",
        "text": "$$\n\\mathcal { Y } = \\mathrm { T B C D E F R B C D E F T E F H K R E F H J K L M U V T E F P S M U }\n$$",
        "text_format": "latex",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "and we need to figure out if it contains any kind of information. First of all, $y$ can be6c considered as an isolated system, because there are no other signals or sequences that can1 be considered together with $y$ 61 ",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "By employing the ladderpath theory and the algorithm we have developed (Section 2.7), we find $y _ { \\textrm { s } }$ shortest ladderpath ",
        "page_idx": 15
    },
    {
        "type": "equation",
        "text": "$$\nJ _ { \\mathcal { Y } } = \\{ \\mathrm { T } , \\mathrm { B } , \\mathrm { C } , \\mathrm { D } , \\mathrm { E } , \\mathrm { F } , \\mathrm { R } ( 2 ) , \\mathrm { H } ( 2 ) , \\mathrm { K } ( 2 ) , \\mathrm { J } , \\mathrm { L } , \\mathrm { V } , \\mathrm { T } , \\mathrm { P } , \\mathrm { S } , \\mathrm { M } , \\mathrm { U } \\mathrm { ~ \\it E F } ( 2 ) , \\mathrm { M U ~ \\it / / \\mathrm { ~ T E F } , \\mathrm { B C D E F } \\} }\n$$",
        "text_format": "latex",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "and its ladderpath-index is $\\lambda ( \\mathcal { V } ) = 3 4 - 1 \\times 2 - 1 - 2 - 4 = 2 5$ lifts. As a result,we can interpret $y$ as T[BCD[EF]]R[BCD[EF]][T[EF]]HKR[EF]HJKL[MU]V[T[EF]]PS [MU],where the brackets separate ladderons. ",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "Although it is too early to conclude that $y$ does not come from total randomness, we can at least see that the whole string is well-organized (we may infer that EF is the most important in the sentence as it appears the most number of times, while MU,TEF,and BCDEF are also important). In fact, $y$ is converted from the sentence (with punctuations and capitals neglected): my mother made a chocolate cake your mother made a chocolate cake my chocolate cake was delicious your chocolate cake was not delicious Iate half of my chocolate cake and you ate half (denoting this sentence as $\\mathcal { Z }$ for convenience). Every letter in $y$ corresponds to a word in $\\mathcal { Z }$ .We can thus see that EF is chocolate cake,TEF is my chocolate cake,BCDEF is mothermade a chocolate cake andMU isate half. ",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "There are four points needed to explain further. First of all, the ultimate reason that $y$ can be interpreted as $\\mathcal { Z }$ is that $\\mathcal { Z }$ is converted into $y$ in the first place on purpose. But in fact, replacing chocolate cake by any noun phrase consisting of two words makes sense (as well as replacing mother by father, etc). So,in principle, $y$ does not contain any information about chocolate cake, but only the relationships among the parts of the sentence. That is to say, we can never interpret EF,BCDEF,or any single letterif there is no information from other places (this is also why some old languages are uninterpretable). ",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "Secondly, for those substrings that appear more than once, they only contain nonredundant information once.For example, the first part of $\\mathcal { Z }$ can definitely be compressed as my and your [mother made a chocolate cake](although there might be grammar errors, the meaning is clear),that is, the information contained in this part [mother made a chocolate cakel as a whole does not change at all, but just with a different qualifier ahead. ",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "The third point is significant but also confusing: the reason why we are able to interpret those non-repetitive substrings is that we wrote $\\mathcal { Z }$ in the first place and then converted it to $y$ on purpose. If we only look at $y$ , there is no way we can tellif the letter that only appears once such as T and $\\mathrm { \\Delta P }$ is noise or contains useful information. Furthermore,after we replaced T by my, why we can interpret my as the actual meaning \"of mine\" is because the word my has already been repeated in my memory. A person who does not speak English does not have the word my repeated in his/her memory, so even if you tell him/her the sentence $\\mathcal { Z }$ he/she cannot understand the meaning \"of mine\". Therefore, fundamentally, if a letter, a string,a word, a phrase, etc. has meanings, or equivalently, contains information, it must repeat, either in your memory/mind,in the system (the sentence) itself,or somewhere else. ",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "Fourthly, there is an important assumption in the interpretation above: We considered the single letter as the basic unit of information,i.e., the basic set of the ladderpath consists of single letters. In fact, we do not have sufficient reasons to do that, because although it is reasonable to consider repetitive single leters (e.g., R,H,and K) as the basic blocks, it may not make sense for non-repetitive single letters such as P and S.In fact, we could consider PS as one basic block since P and S never appear independently. We are used to separating $\\mathrm { \\Delta P }$ and S because they are separated in our own language. What if in the alien language, they as a whole are just one letter (from the signals we received, we do not have enough reasons to believe that $\\mathrm { \\Delta P }$ and S are two separated letters)? ",
        "page_idx": 15
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "So, defining the basic set is the first step,which is subjective.We can define the basic set either based on some assumptions,hypotheses or facts from other sources, or only based on the target block itself.For $y$ ,we can define the basic set to be the set of individual letters as we already did above,yet we can also define it to be only the letters that are repeated. In the latter case, $y$ should be considered as $\\mathcal { V } ^ { \\prime } = \\mathrm { T }$ [BCD[EF]]R[BCD[EF]][T [EF]]HKR[EF]HK[MU][T[EF]][MU],of which the shortest ladderpath is ",
        "page_idx": 16
    },
    {
        "type": "equation",
        "text": "$$\nJ _ { \\mathscr { Y } ^ { \\prime } } = \\{ \\mathrm { T } ( 2 ) , \\mathrm { R } ( 2 ) , \\mathrm { H } ( 2 ) , \\mathrm { K } ( 2 ) , \\mathrm { E F } ( 3 ) , \\mathrm { M U } ( 2 ) , \\mathrm { B C D } / / \\mathrm { T E F } , \\mathrm { B C D E F } \\}\n$$",
        "text_format": "latex",
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "where BCD is considered to be one block since B, C and D always appear together. So, the length of $J _ { \\mathcal { V } ^ { \\prime } } ,$ also the ladderpath-index of $y ^ { \\prime }$ ,is $\\lambda ( \\mathcal { Y } ^ { \\prime } ) = 1 8 - 1 - 1 = 1 6$ lifts where 18 is the size-index of $y \\prime$ , the first1 is the size-index of TEF (since EF is the basic block,we only need 1 lift to generate TEF),and the second 1 is the size-index of BCDEF (since BCD and EF are both basic blocks, we only need 1 lift to generate BCDEF). So,we can see that the ladderpath-index is different if the basic set is different (note that as long as the basic set is defined,it should not be changed in the following analyses). As for what basic set we should define, it is a different game. It should depend on what specific questions we are asking, which leads to the discussions in the next subsection. ",
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "4.2.On information: human language (non-isolated /united system) ",
        "text_level": 1,
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "Imagine we put the sentence $\\mathcal { Z }$ (first mentioned in Section 4.1) in a human language (English in this case). Then what basic blocks shall we choose: single letters, single words, or only those repeated? The most straightforward answer is single words, because the single word is the basic unit that makes any sentence.In fact, there is no problem to define the basic block to be the single letter, but it is just more complicated,since there will be an extra level in the ladderpath,i.e.,the level that makes words from letters. Yet in principle, the two ways have no real difference, but like measuring the same quantity in a different unit. ",
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "However, in the framework of English, it is inappropriate to define the basic set to be the set of only those repeated in the sentence, because although some word does not repeat in $\\mathcal { Z }$ (e.g.,not),it repeats in the framework of English, that is, it can appear in other possible English sentences. Therefore, when we discuss questions under the framework of English, we have actually considered the target sentence and all other possible English sentences as a whole (namely,a non-isolated lunited system) where even though a word did not repeat in the target sentence,it repeats in this non-isolated system,and we thus must consider these words as basic blocks. ",
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "The alien signal $y$ in Section 4.1 isan example of an isolated system,i.e., there are no other signals or sentences that can be considered together with $y$ to be a united /nonisolated system. Thus, the letters that are not repetitive in $y$ are not repetitive in the whole isolated system either (namely, the sentence itself), which is why we have no strong reason to consider these non-repetitive letters as basic blocks. Therefore,for the isolated case, we have two options, both mentioned in Section 4.1: After making some assumptions, take single letters as basic blocks as in $J _ { \\mathcal { V } } ; \\mathrm { O r }$ only take repetitive letters as basic blocks and consider non-repetitive ones as noise,as in $J _ { \\mathcal { V } ^ { \\prime } }$ . Both approaches are correct,which are two interpretations of the original sequence. As for which approach reflects more of the reality, it is a totally different question, which should be addressed from other perspectives (referring to Appendix E for how we can apply this isolated /united-system idea to look for the evidence of intelligent life). ",
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "There is another point associated with the example in Section 4.1 that needs to be addressed: if we received many other signals of the same type as the signal $y$ , then what should we do? In this case,we have to consider $y$ and all of the other signals we have received as a united system, then we need to analyze the ladderpath of this entire united system (whose size-index is evidently very high). If at the end we found that only BCDEF repeats once,then the calculated ladderpath-index would be very close to the size-index and the order-index would be very low, suggesting that the system is more likely to be random. Furthermore,what if there is a virtually infinite number of signals in principle but we only received one of them, which happened to be the $\\mathcal { V } ?$ In this case, we have to accept the fact that we can only consider $y$ alone as an isolated system,which maylead to a wrong or over-extrapolated conclusion (so extra evidence may be necessary, but that is an experimental problem outside of current considerations). ",
        "page_idx": 16
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "We can now come back to the question put forward in Section 1: We see that the \"information\" of a sentence in a language actually contains two levels of meanings. The first is the information in the narrow sense, which refers to the “information\" we can extract from the united system consisting of the sentence itself and the language it belongs to, namely, the ladderpath. The second level of information is above the first level, referring to what reality,real object,behavior, etc that each ladderon corresponds to.The first level is about the sentence itself (namely the so-called syntactic information), while the second level is about the linkage between the sentence and the reality (namely the so-called semantic information). ",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "4.3. On origins of life ",
        "text_level": 1,
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "As forhow small the probability of the origin of life is,there is a famous metaphor called “junkyard tornado\" [38]: The chance of emergence of life would be comparable to the chance that a tornado sweeping through a junkyard assembles a Boeing airplane. This is a vivid metaphor that is meant to help us comprehend how unlikely the emergence of life is. Yet it is misleading. The biggest flaw of this metaphor is that it suggests that the difficulty of making an airplane lies in assembling it with the most basic units (e.g., screws, semiconductors, or small elements lying in the junkyard), which is, however, not correct. Here we clarify this flaw. ",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "How difficult is it for a person to make an airplane? First of all, let's simplify this question as much as possible: We assume that the airplane is just made of four parts, i.e. engine,propellers,wings,and control circuit. ",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "A person living 10 ooO years ago, would need to invent the four parts first, and then assemble them together. So the difficulty for them to make the airplane is the sum of the diffculty of inventing the four parts plus the difficulty of assembling. However, inventing all of the four parts altogether is easier than inventing each of them independently. For example, they need to invent metallurgy to obtain metals,but they only need to invent metallurgy once although all of the four parts require metals. The same reasoning applies to aerodynamics and wings and the propeller. Also, there are two wings, two propellers, and two engines,but he only needs to invent each of these parts once. ",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "Therefore, the difficulty to make an airplane is not the sum of the difficulties of making each part individually, but that with repetitive parts excluded. This is the first level of meanings that the statement “making airplane is simpler than expected\" implies. ",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "The second level of meaning is that the basic set is different, that is,if the person lives in the 2Oth century all of the four parts are already matured technologies,but not the case for the ancients. Under the concept of ladderpath, for a modern person, the basic set consists of the engine,the propeller, the wing,and the control circuit, so an airplane's ladderpath-index (also corresponding to the dificulty) is just 4 lifts. But for the ancients, the basic blocks are merely ore and petroleum.Thus,the difficulty of making an airplane is muchlarger than4 liftsin thiscase. ",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "That is to say, in the 2Oth century, it is relatively easy for humans to invent airplanes, i.e., the probability of the emergence of airplanes is relatively large in the 2Oth century; while in ancient times, the probability of the emergence of airplanes is very small The basic set the modern people face is the set derived from the set the ancient faces that has already undergone lots of generation-operations and generated lots of ladderons of higher levels. ",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "The metaphor above about life actually compares life to the airplane,and compares atoms in the physical world to the scrap parts lying in the junkyard. Indeed, the probability that numerous atoms are assembled into a living system such as a cell by a simple physical process such as a tornado is extremely small. However, on one hand, life has a relatively low ladderpath-index (compared to its size-index) since it has many repeating elements (as we shall discuss below). On the other hand, life did not emerge allof a sudden from non-living systems,but probably through an elaborate path that generates ladderons, which gradually makes the system more and more complex,resulting in life at the end,like the \"emergence\" of the airplane in the 2Oth century. ",
        "page_idx": 17
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "Here we discuss the first point specifically: life has a relatively low ladderpath-index (compared to its size-index),due to its repetitive parts. First of al,ladderpath applies to any kind of object, including molecules. As for how to define the generation-operation and the length unit of ladderpath for molecules,it is different from the cases of strings.Here I give a reasonable scheme (there could be other schemes, see [33] for another attempt where molecules are considered to be composed of bonds, rather than atoms): ",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "The generation-operation for molecules is defined as follows: combine several molecular structures or fragments (namely, the blocks) into one, whereas the combination means that chemical bonds between atoms are formed.   \nThe length unit of a ladderpath is defined to be one chemical bond formed. That is,if $n$ chemical bonds are formed in one generation-operation, the length of this generation-operation is $n$ lifts. ",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "Note that there is a range of possible ways in which molecular fragments could be combined. So, generation-operations could have different types (as we have mentioned after the definition of generation-operation in Section 2.2). For example, $\\mathrm { C H } _ { 3 } \\mathrm { C H C H } _ { 2 }$ $\\mathrm { C H } _ { 3 }$ and H could be combined into $\\mathrm { C H _ { 3 } C H _ { 2 } C H _ { 2 } C H _ { 3 } }$ (namely, butane) or ${ \\mathrm { H C } } ( { \\mathrm { C H } } _ { 3 } ) _ { 3 }$ (namely, isobutane). The choice of generation-operations should be recorded along with the calculated ladderpath as the necessary context. ",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "For lots of molecules, the difficulties of making them (i.e., one aspect of complexity that is described by the ladderpath-index) are smaller than expected (\"expected\" refers to \"assembling individual atoms to make a molecule\"). For example, NADH has two ribose groups,so NADH's ladderpath-index is smaller than the number of atoms it contains; The backbone of RNA is made of lots of identical ribose rings and phosphate groups,and many types of proteins (such as tetrameric proteins) are made of repetitive structures,so their ladderpath-indices are smaller than the number of constituted atoms; Gene sequences have many repetitive segments,so their ladderpath-index is also smaller than the number of constituted base pairs.Furthermore, if we consider a group of molecules altogether (i.e., in the case of a target system, instead of an individual target block), the ladderpath-index will be smaller than the sum of individual ladderpath-indices.For example,if we consider 1 mol of NADH,1 mol of ATP and 1 mol of FAD together,lots of their structures are repetitive. ",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "We often say a protein is complex because we are wondering that although it contains so many atoms,why it is still so “ingeniously designed\" [39]. But after we extract the repetitive structures of proteins,its “complexity\" is much smaller (more precisely, its ladderpath-index is relatively small, compared to its size-index). The same argument applies to life. As we consider a living system (e.g., a cell) as a whole, its complexity is much smaller than the sum of the complexities of each individual part. Although it could still be very complex, it makes the emergence of life look easier. ",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "4.4.On why life is ordered ",
        "text_level": 1,
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "Let's begin with an observation. For a ladderpath-system (namely,any system that satisfies “being able to generate new blocks\" and “replication\"),each time a new ladderon is generated, the ladderpath-index of the whole system is increased (equivalently, the information the whole system contains is increased); each time a ladderon is replicated, the order-index of the whole system is increased.Therefore,the ladderpath-index and the orderindex of a ladderpath-system increase naturally, i.e., a ladderpath-system naturally evolves towards “complex\",which is an inevitable consequence of its two essential properties: \"being able to generate new blocks\" and \"replication\". ",
        "page_idx": 18
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "Now,before we ask why life is ordered,let's first ask:How do we interpret life is ordered, equivalently, wel-organized? It is an intuitive thesis easily obtained from ordinary observations. We have two ways to interpret \"ordered\" here.Taking a cell as an example, the first interpretation is straightforward: it means a vast number of atoms organized into large biomolecules,which are organized into organelles,and in turn into a cell. ",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "The second interpretation is that the atoms constituting the cell are unable to spread evenly in its space,and they are restricted at the positions, energy-levels and states of the large biomolecules and organelles (which is an interpretation in the sense of thermodynamics). As a result, the total number of all possible states in the state space of the cell is much smaller than that of an ideal gas (a typical example in thermodynamics) of the similar size. This implies that the cel's thermodynamic entropy is low (referring to Appendix F for the discussion on the connections between the ladderpath and Shannon entropy). ",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "The first interpretation refers to \"ordered in the sense of the ladderpath\",while the second interpretation clearly refers to “ordered in the sense of thermodynamic entropy\". We can see that the two interpretations of “ordered\" are not equivalent,although either makes sense in its own perspective. ",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "Depending on how we interpret \"ordered\" we will approach the question Why is life ordered? very differently. Under the concept of ladderpath, this question might be solved readily, because evolving towards more and more ordered states is an intrinsic property of a ladderpath-system (to which life belongs), determined by the underlying evolution mechanism as discussed before.Yet, under the framework of thermodynamic entropy, this question is still a bit mysterious, because according to the second law of thermodynamics the entropy of a closed system spontaneously increases. Although, as an open system, the decrease of life's entropy does not violate the second law, we still do not understand why/how life organizes itself so that it can resist the increase of thermodynamic entropy (some authors used more general /vague but more intriguing statements [40,41], e.g. \"the entropy of life tends to decrease\",\"life feeds on negative entropy\",etc.,but all of these statements are basically equivalent). ",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "If the following two statements are true, that is,\"life must be a ladderpath-system (or put differently, life organizes itself into a ladderpath-system)\" and “a ladderpath system is able to resist the increase of thermodynamic entropy\",then the question “why/how life organizes itself so that it can resist the increase of thermodynamic entropy\" is solved.While it has been demonstrated above that life is a ladderpath-system, we thus need to figure out whether a ladderpath-system is able to resist the increase of thermodynamic entropy. The answer is likely to be yes,but a full proof /demonstration could not be provided here,as it requires much more work, both theoretically and empirically. Nonetheless, at least this type of question such as Why is life ordered? has been pinned down to a better understanding of ladderpath-systems. Since ladderpath-systems have a rigid mathematical definition, these questions are easier to pursue. By these discussions, we hope to convey the idea that ladderpath can provide a different angle when investigating this type of questions such as why life is ordered. ",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "5. Conclusion ",
        "text_level": 1,
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "In this paper we have argued for the need of a new method for characterizing the complexity of objects that are neither drawn from a statistical distribution nor infinitely large (e.g. infinite strings). We have presented the ladderpath approach which decomposes a single finite object into a partially ordered multiset which describes how the object can be formed by joining or altering existing building blocks. From the minimal ladderpath we can compute two measures of information, namely the ladderpath-index and the orderindex, which capture two distinct dimensions of complexity: the difficulty of generating the object and the degree of order. This framework forces a distinction between isolated and united systems,and also puts our understanding of the origin of life and evolution into a clearer view. Here we only scratch the surface of many possible areas of application and it is our hope that this approach will be successfully applied in fields such as linguistics, technological evolution,and exobiology. ",
        "page_idx": 19
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "Author Contributions: Conceptualization, YL.; methodology, Y.L.; software, YL.; validation, Y.L.and P.G.; formal analysis, Y.L. and P.G.; investigation, Y.L. and P.G.; resources,Y.L.,Z.D.and P.G.; data curation, Y.L.; writing—original draft preparation, Y.L.,Z.D.and P.G; writing—review and editing, Y.L., Z.D. and P.G.; visualization, Y.L.; supervision, Y.L.and PG.; project administration, Y.L.; funding acquisition, Y.L. All authors have read and agreed to the published version of the manuscript. ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "Funding: The author Y.L. thanks the start-up funding for research (no. 28705-310432106) provided by Beijing Normal University. ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "Institutional Review Board Statement: Not applicable ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "Informed Consent Statement: Not applicable. ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "Data Availability Statement: There is no data for this paper. The code is available at https://github.com/yuernestliu/ladderpath ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "Acknowledgments: We thank Prof.Da Zhou and Prof. Xiaofeng Cai for fruitful discussions,and the five reviewers for their insightful comments and suggestions. ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "ConflictsofInterest:The authors declare no conflict of interest. ",
        "page_idx": 20
    },
    {
        "type": "text",
        "text": "Appendix A: Glossary ",
        "text_level": 1,
        "page_idx": 21
    },
    {
        "type": "table",
        "img_path": "images/ff3c69d906026679460c23dc563ac46aa8ed9f23d1d54adc8d0cc9e0189d0851.jpg",
        "table_caption": [],
        "table_footnote": [
            "Note that $\\star$ represents important concepts. "
        ],
        "table_body": "<html><body><table><tr><td>Name:</td><td>Refer to:</td><td>Description or definition:</td></tr><tr><td>Basic set</td><td>Section 2.2</td><td>The partially ordered multiset that contains all the basic elements that constitute an object, denoted as So.</td></tr><tr><td>Level</td><td>Section 2.2</td><td>It refers to the partial order in the partially ordered multiset. Each level is sepa- rated by double slash \"//\".</td></tr><tr><td>★ (Building) block</td><td>Section 2.2</td><td>Any element in the partially ordered multiset.</td></tr><tr><td>Basic (building) block</td><td>Section 2.2</td><td>Any element in the basic set So.</td></tr><tr><td>Target (building) block</td><td>Section 2.2</td><td>The object to generate in the end, denoted as X'.</td></tr><tr><td>★</td><td>Generation-operation Section 2.2</td><td>A specific operation applied on the partially ordered multiset.Details in the main text.</td></tr><tr><td>★</td><td>Ladderpath</td><td>A sequence of generation-operations that generate the target block X in the Section 2.3 end, which can be represented by a partially ordered multiset,denoted as Jx. Details in the main text.</td></tr><tr><td>★ Ladderon</td><td>Section 2.3</td><td>Any block in the ladderpath is called a ladderon.</td></tr><tr><td>Trivial ladderpath</td><td>Section 2.3</td><td>The particular ladderpath(s) in which all of the ladderons are the basic blocks.</td></tr><tr><td>★ Laddergraph</td><td>Section 2.3</td><td>A ladderpath can also be represented by a graph or network (besides a partially ordered multiset),called a laddergraph.</td></tr><tr><td>★</td><td>Ladderpath-index (λ) Section 2.4</td><td>The length of the shortest ladderpath(s) of an object.</td></tr><tr><td>★ Size-index (S)</td><td>Section 2.4</td><td>The length of the shortest trivial ladderpath(s) of an object</td></tr><tr><td>★ Order-index (ω)</td><td>Section 2.4</td><td>Defined as (S -λ),referring to Equation (4).</td></tr><tr><td></td><td>Length unit of a ladderpath Section 2.4</td><td>A system-dependent quantity. In the string examples in this paper, it is defined as carrying out the action that concatenates any two strings, once.</td></tr><tr><td>Length of a ladderpath</td><td>Section 2.4</td><td>The sum of the lengths of all generation-operations along the ladderpath.</td></tr><tr><td>★ lift</td><td>Section 2.4</td><td>The name of the length unit of the ladderpath.</td></tr><tr><td> Shortest ladderpath</td><td>Section 2.4</td><td>The ladderpath(s) that has the minimum length.</td></tr><tr><td>★ Target system</td><td>Section 2.6</td><td>A group of target blocks that need to be generated altogether in the end.</td></tr><tr><td>★</td><td>Ladderpath-system Section 3</td><td>Adl</td></tr><tr><td>Isolated system</td><td>Section 4.1</td><td>We calla system an isolated system if we force it to have nothing to do with any other systems.</td></tr><tr><td>Non-isolated (/united) system</td><td>Section 4.2</td><td>It may not be possible to isolate a system. For example, when considering one single sentence,we should consider it in the context of the language it belongs to,so, this sentence and the language altogether form a united system.</td></tr></table></body></html>",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "Appendix B: Examples of the ladderpath of strings ",
        "text_level": 1,
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "For a better illustration, we give more examples here to show how to construct a ladderpath of a target block, by strictly following the rules elaborated in Section 2.2 and 2.3. We first show one of the most trivial cases, e.g., string $\\mathcal { A } = \\mathrm { A B C D E F }$ . One ladderpath of $\\mathcal { A }$ can be constructed as follows in $\\operatorname { E x } . \\operatorname { B 1 }$ . In order not to be confused with the set $\\mathbf { S } _ { i }$ in the main text, in this appendix we always use ${ \\bf R } _ { i }$ . The basic set of $\\mathcal { A }$ is $\\mathbf { R } _ { 0 } = \\left\\{ \\mathbf { A } ( 0 ) , \\mathbf { B } ( 0 ) , \\right.$ （204号 $C ( 0 ) , \\ D ( 0 ) , \\ E ( 0 ) , \\ F ( 0 ) \\ \\}$ ： ",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "875   \n876   \n877   \n878   \n879   \n880 ",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "Ex.B1. 1st generation-operation, ${ \\bf R } _ { 0 }$ ： $\\mathrm { A } + \\mathrm { B } + \\mathrm { C } + \\mathrm { D } + \\mathrm { E } + \\mathrm { F } = \\mathcal { A } \\longrightarrow \\mathbb { R } _ { 1 } = \\{ \\mathrm { ~ A } ( - 1 ) , \\mathrm { ~ B } ( - 1 ) , \\mathrm { C } ( - 1 ) , \\mathrm { D } ( - 1 ) , \\mathrm { E } ( - 1 ) , \\mathrm { F } ( - 1 ) \\mathrm { ~ } / \\mathrm { ~ } / \\mathrm { ~ } \\mathcal { A } ( 1 ) \\}$ . The last generation-operation, $\\mathbf { R } _ { 1 } \\colon A ( - 1 ) \\to \\mathbf { R } _ { 2 } { = } \\{ \\mathrm { A } ( - 1 ) ,$ ,B(-1),C(-1),D(-1),E(-1),F(-1) // $\\mathcal { A } ( 0 ) \\}$ （204号 ",
        "page_idx": 21
    },
    {
        "type": "text",
        "text": "So, we can see from ${ \\bf R } _ { 2 }$ that the ladderpath corresponding to $\\operatorname { E x } . \\operatorname { B 1 }$ .s $J _ { \\mathcal { A } } = \\left\\{ \\mathrm { A } , \\mathrm { B } , \\mathrm { C } , \\mathrm { D } , \\mathrm { E } , \\mathrm { F } \\right\\}$ 8   \nIn fact, this is the only ladderpath of $\\mathcal { A }$ 8 ",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "The second example we give here is string $\\boldsymbol { B } =$ AAAAAAAA. The basic set of $\\boldsymbol { B }$ is ${ \\bf R } _ { 0 } = \\{ \\mathrm { A } ( 0 ) \\}$ . One ladderpath of $\\boldsymbol { B }$ can be constructed as follows: ",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "Ex.B2.1st generation-operation, ${ \\bf R } _ { 0 } \\colon \\mathrm { A } + \\mathrm { A } = \\mathrm { A A }  { \\bf R } _ { 1 } = \\{ \\mathrm { A } ( - 2 ) / \\mathrm { A A } ( 1 ) \\}$ .2nd, ${ \\bf R } _ { 1 }$ ： $\\mathrm { { A A } + \\mathrm { { A } \\mathrm { { \\dot { A } = A A A A }  R _ { \\Omega } = \\{ \\ A ( - 2 ) / \\ A A ( - 1 ) / \\langle \\ A A A A ( 1 ) | } } } $ .3rd, ${ \\bf R } _ { 2 }$ ： $\\mathrm { { A A A A } + A A A A = } \\mathcal { B } \\to \\mathbf { R } _ { 3 } = \\{ \\mathrm { { \\ A ( - 2 ) } / / \\mathrm { { \\ A A ( - 1 ) } / / \\mathrm { { \\ A A A A ( - 1 ) } / \\mathrm { { \\Omega } } } } } / \\mathrm { { \\Omega } } \\mathcal { B } ( 1 ) \\}$ （20. Lastly, $\\mathbf { R } _ { 3 } \\colon B ( - 1 ) \\to \\mathbf { R } _ { 4 } { = } \\{ \\mathrm { A } ( - 2$ 2) // AA(-1) // AAAA(-1) // B(O) }",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "So, the ladderpath corresponding to Ex.B2 is $J _ { B } = \\{ \\mathrm { A } ( 2 ) / / \\mathrm { A A } / / \\mathrm { A A A A } \\}$ . Let's construct 885   \nanother ladderpath of $\\boldsymbol { B }$ ： 886 ",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "Ex.B3.1st generation-operation, ${ \\bf R } _ { 0 }$ ${ \\mathrm { A } } + { \\mathrm { A } } + { \\mathrm { A } } = { \\mathrm { A } } { \\mathrm { A } } { \\mathrm { A } } \\to { \\mathrm { R } } _ { 1 } = \\{ { \\mathrm { A } } ( - 3 ) / / { \\mathrm { ~ A A A } } ( 1 ) \\}$ .2nd, ${ \\bf R } _ { 1 }$ : AAA $. + .$ AAA $\\underline { { \\underline { { \\mathbf { \\Pi } } } } } = \\underline { { \\underline { { \\mathbf { \\Pi } } } } }$ AAAAAA $ \\mathbf { R } _ { 2 } = \\{ \\begin{array} { r l } \\end{array} $ A(-3) // AAA(-1) // AAAAAA(1) ) . 3rd, ${ \\bf R } _ { 2 }$ ${ \\mathrm { A } { + } { \\mathrm { A } { + } } { \\mathrm { A } { \\mathrm { A } { \\mathrm { A } { A } { A } { - } { B } } } } } \\to { \\mathrm { R } _ { 3 } } { = } \\{ { \\mathrm { A } } $ (-5) // AAA(-1) // AAAAAA(0) // $\\boldsymbol { B } ( 1 ) \\left. \\right\\}$ . Lastly, $\\mathbf { R } _ { 3 } \\colon B ( - 1 ) \\to \\mathbf { R } _ { 4 } { = } \\{ \\mathrm { ~ A } ( - 5 )$ / AAA(-1) // AAAAAA(0) // $\\boldsymbol { B } ( 0 )$ 1 ",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "So,the ladderpath corresponding to $\\operatorname { E x } . \\operatorname { B 3 }$ is $J _ { B } ^ { \\prime } = \\{ \\mathrm { A } ( 5 ) / / \\mathrm { A A A } \\}$ . After we introduced the definition of the length of a ladderpath in Section 2.4,we can see that the length of $J _ { B }$ is 4 lifts while the length of $J _ { B } ^ { \\prime }$ is 6 lifts. In fact, $J _ { B }$ is the shortest ladderpath of $\\boldsymbol { B }$ (which can be confirmed by our algorithm introduced in Section 2.7),and thus the ladderpath-index of $\\boldsymbol { B }$ is $\\lambda ( B ) = 4$ lifts. ",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "Another example we give is string ${ \\mathcal { C } } =$ ATGTGCATG. Its basic set is ${ \\bf R } _ { 0 } = \\{ \\mathrm { A } ( 0 ) , \\mathrm { T } ( 0 ) ,$ （204号 G(O), C(O) }. One ladderpath of $\\mathcal { C }$ can be constructed as follows: ",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "Ex.B4.1st generation-operation, ${ \\bf R } _ { 0 }$ 号 $\\mathrm { ~ : ~ } \\mathrm { T + G = T G  R _ { 1 } = \\{ ~ A ( 0 ) , ~ T ( - 1 ) , ~ G ( - 1 ) , ~ C ( 0 ) ~ / / ~ } ~ T G ( 1 ) ~ \\}$ .2nd, ${ \\bf R } _ { 1 }$ ： $\\mathrm { A + T G } { = } \\mathrm { A T G }  \\mathrm { R } _ { 2 } { = } \\{$ A(-1), T(-1),G(-1), C(0) // TG(0) // ATG(1) }. 3rd, ${ \\bf R } _ { 2 }$ $\\mathrm { A T G + T G + C + A T G = } \\emptyset \\to \\mathbf { R } _ { 3 } \\mathbf { = } \\{ \\mathrm { ~ A ( - 1 ) , T ( - 1 ) , G ( - 1 ) , C ( - 1 ) ~ / ~ / ~ T G ( - 1 ) ~ / ~ / ~ A T G ( - 1 ) ~ / ~ / ~ } \\mathcal { C } ( 1 ) \\} .$ . Lastly, $\\mathbf { \\Delta } _ { 3 } \\colon { \\mathcal { C } } ( - 1 ) \\to \\mathbf { R } _ { 4 } { = } \\{ \\mathrm { ~ A ~ } $ (-1), T(-1),G(-1),C(-1) // TG(-1) // ATG(-1) // C(0)}",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "So, the ladderpath corresponding to $\\mathrm { E x . B 4 }$ is $J _ { \\mathcal { C } } = \\{ \\mathrm { A , T , G , C / / T G / / A T G } \\}$ . Of course, 894   \nthere are many other ladderpaths for ${ \\mathcal { C } } ,$ but we don't show them here. 895   \nMoreover, let's look at string ${ \\mathcal { K } } = \\tt X Y X Y X Y Z X Y Y$ . Its basic set is $\\mathbf { R } _ { 0 } = \\{ \\mathbf { \\boldsymbol { X } } ( 0 ) , \\mathbf { \\boldsymbol { Y } } ( 0 ) ,$ 896   \n$Z ( 0 ) \\}$ . One ladderpath of $\\kappa$ can be constructed as follows: 897 ",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "Ex.B5. 1st generation-operation, ${ \\bf R } _ { 0 }$ ： ${ \\mathrm { X + Y = X Y \\to \\mathbf { R } _ { 1 } = \\{ \\ X ( - 1 ) , \\ Y ( - \\frac { 1 } { \\delta } ) } } $ 1),Z(0) // XY(1)}.2nd, ${ \\bf R } _ { 1 }$ ： ${ \\mathrm { X Y + X Y + X Y + Z + X Y + Y = } } \\ K _ { 2 } = \\{ \\ X ( - 1 ) , \\ Y ( - 1 ) = 0 \\}$ 2),Z(-1) // XY(-3) // $\\kappa ( 1 )$ 1. Lastly, $\\mathbf { R } _ { 2 } \\colon \\mathcal { K } ( - 1 ) \\to \\mathbf { R } _ { 3 } { = } \\{ \\mathrm { X } ( - 1 ) , \\mathrm { Y } ( - 2 ) , \\mathrm { Z } ( - 1 ) \\ / / \\}$ XY(-3) // $\\kappa ( 0 )$ 1",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "So, the ladderpath corresponding to $\\operatorname { E x } . \\operatorname { B } 5$ is $J _ { K } = \\{ \\mathrm { X } , \\mathrm { Y } ( 2 ) , Z / / \\mathrm { X Y } ( 3 ) \\}$ 898   \nThe last example is string ${ \\mathcal { L } } =$ GGGCAUCAUAUAUAUG.Its basic set is $\\begin{array} { r } { \\mathbf { R } _ { 0 } = \\{ \\mathbf { A } ( 0 ) , } \\end{array}$ 899   \n${ \\mathrm { U } } ( 0 ) , { \\mathrm { G } } ( 0 ) , { \\mathrm { C } } ( 0 ) \\ \\}$ . One ladderpath of $\\mathcal { L }$ can be constructed as follows: 900 ",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "Ex.B6.1st generation-operation, ${ \\bf R } _ { 0 }$ $\\mathrm { \\bf ~ A } + \\mathrm { \\bf U } = \\mathrm { \\bf A U } \\to \\mathrm { \\bf ~ R } _ { 1 } = \\{ \\mathrm { \\bf ~ A } ( - 1 ) , \\mathrm { \\bf ~ U } ( - 1 ) , \\mathrm { \\bf ~ G } ( 0 ) , \\mathrm { \\bf ~ C } ( 0 ) / / \\mathrm { \\bf ~ A U } ( 1 ) \\}$ .2nd, ${ \\bf R } _ { 1 }$ $\\mathrm  C + A U = C A U \\to R _ { 2 } = \\{ A ( - 1 ) $ $= \\{ \\mathrm { A ( - 1 ) , U ( - 1 ) , G ( 0 ) , C ( - 1 ) } / / \\mathrm { A U ( 0 ) } / / \\mathrm { C A U ( 1 ) } \\}$ .3rd, ${ \\bf R } _ { 2 }$ ：C $\\mathrm { \\partial _ { 3 } + G + G + C A U + C A U + A U + A U + A U + A U = } \\mathcal { L } \\mathrm { \\partial _ { 3 } = } \\{$ A(-1), U(-1),G(-4),C(-1) // AU(-3) // CAU(-1) // L(1) } . Lastly, ${ \\bf R } _ { 3 } \\colon { \\mathcal { L } } ( - 1 ) \\to { \\bf R } _ { 4 } { = } \\{ \\mathrm { ~ A } ( - 1 ) , \\mathrm { U } ( - 1 ) , \\mathrm { G } ( - 4 ) , \\mathrm { C } ( - 1 ) \\mathrm { ~ } / \\mathrm { ~ } .$ AU(-3) // CAU(-1) // ${ \\mathcal { L } } ( 0 ) \\}$ （20 ",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "So, the ladderpath corresponding to $\\operatorname { E x } . \\operatorname { B 6 }$ is $J _ { \\mathcal { L } } = \\{ \\mathrm { A } , \\mathrm { U } , \\mathrm { G } ( 4 ) , \\mathrm { C } / / \\mathrm { A U } ( 3 ) / / \\mathrm { C A U } \\} .$ ",
        "page_idx": 22
    },
    {
        "type": "text",
        "text": "Appendix C: Compute the ladderpaths of stone patterns ",
        "text_level": 1,
        "page_idx": 23
    },
    {
        "type": "text",
        "text": "Here we illustrate how to compute the ladderpaths of the stone patterns in Section 2.5. We take the stone pattern [i] and [i] as two examples, shown in Figure Bla and B1b. The basic set consists of a single stone,and each generation-operation consists of translation, rotation of a block and concatenation with another block. This is illustrated below which strictly follows the definition of ladderpath (see Section 2.3). ",
        "page_idx": 23
    },
    {
        "type": "image",
        "img_path": "images/656e6bb2139e695a6599abba151b431aa4921a45d418b6b2c8e24d811038e0ec.jpg",
        "img_caption": [
            "Figure B1. (a) The sequence of generation-operations that generate the target stone pattern [i] in the end. Each arrow on the left represents one generation-operation. (b) Likewise, the sequence of generation-operations that generate the target stone patern [ii]. (c) It shows the six stone patterns, with the irregular part highlighted. The red color means that these stones are positioned in an iregular manner,and thus,those stones have to be added one by one.For example,for stone pattern [ii], after the black part has been generated,we need six more generation-operations each of which adds one \"red\" stone. "
        ],
        "img_footnote": [],
        "page_idx": 23
    },
    {
        "type": "text",
        "text": "Appendix D: Example to illustrate the algorithm for the shortest ladderpaths ",
        "text_level": 1,
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "Here we take the target system $\\mathcal { Q } = \\{ \\mathrm { A B D E D B E D } ( 2 ) ,$ ABDED,ABDABD,CAB(2), ED(3)} in Section 2.6 as an example to illustrate the algorithm described in Section 2.7: ",
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "i. First create an empty multiset $\\mathcal { H }$ to store blocks,and later the ladderpath can be readily computed from $\\mathcal { H }$ ：   \nii. Starting from the target system $\\scriptstyle { \\mathcal { Q } } ,$ we preserve only one instance of each type of distinct blocks in $\\mathcal { Q } ,$ ,and put all other repetitions into $\\mathcal { H }$ . So we have ${ \\mathcal { Q } } = { \\mathcal { \\cdot } }$ {ABDEDBED, ABDED,ABDABD,CAB, $\\mathrm { E D } \\}$ and $\\mathcal { H } =$ {ABDEDBED,CAB,ED(2)} (if there is no bracket behind a block,it means the multiplicity of this block is 1).   \niii.And then in the 3rd step,we keep slicing the blocks in $\\mathcal { Q }$ ina pre-determined systematic manner, until in $\\mathcal { Q }$ there are at least two substrings that are identical. There could be many systematic manners to slice strings, one of which is to treat the positions where slicing could happen as binary numbers and consecutively count. For example, for string abcd,there are three positions where slicing could happen,so the consecutive counting of binary numbers is 001,010,011,100,101,110,111, which can be considered as a sequence of an inclusive slicing scheme where 1 denotes for slicing and O denotes otherwise. Thus, the sequence of a slicing scheme for abcd is as follows: $a b c | d , a b | c d ,$ $a b | c | d , a | b c d , a | b c | d , a | b | { \\bar { c } } d , a | b | c | d$ In this case, when we count until O000100, namely slicing ABDEDBED into ABDED and BED,we find that there are two ABDED in $\\mathcal { Q }$ . So, we put one ABDED into $\\mathcal { H }$ ,and then we have $\\begin{array} { r } { \\mathcal { Q } = \\{ \\mathrm { B E D } , } \\end{array}$ ABDED, ABDABD, CAB, $\\mathrm { E D } \\}$ while $\\mathcal { H } =$ {ABDEDBED, CAB, ED(2),ABDED).   \niv. Repeat step 3.We can slice BED into B and ED,and also ABDED into ABD and ED. Then we find that there are three ED in $\\mathcal { Q }$ . So, we put two ED into $\\mathcal { H }$ , and then we have $\\mathcal { Q } = \\{ { \\sf B } ,$ ABD,ABDABD,CAB, $\\mathrm { E D } \\}$ while $\\mathcal { H } =$ {ABDEDBED,CAB,ED(4),ABDED}.   \nV. Repeat step 3.We can slice ABDABD into ABD and ABD.Then we find that there are three ABD in $\\mathcal { Q }$ . So, we put two ABD into ${ \\mathcal { H } } ,$ and then we have $\\mathcal { Q } = \\{ { \\sf B } ,$ ABD, CAB, $\\mathrm { E D } \\}$ while $\\mathcal { H } =$ {ABDEDBED, CAB,ED(4),ABDED,ABD(2)).   \nVi. Repeat step 3.We can slice ABD into AB and D,and also CAB into C and AB. Then we find that there are two AB in $\\mathcal { Q }$ . So, we put one AB into $\\mathcal { H }$ ,and then we have $\\mathcal { Q } =$ {B,D,C,AB,ED} while $\\mathcal { H } =$ {ABDEDBED,CAB,ED(4),ABDED,ABD(2),AB}.   \nvii. Repeat step 3. We can slice AB into A and B. Then we find that there are two B in $\\mathcal { Q }$ .So, we put one B into $\\mathcal { H }$ , and then we have $\\mathcal { Q } = \\{ \\mathrm { B } , \\mathrm { D } , \\mathrm { C } , \\mathrm { A } , \\mathrm { E D } \\}$ while $\\mathcal { H } =$ {ABDEDBED, CAB,ED(4),ABDED,ABD(2), AB, B}.   \nviii. Repeat step 3.We can slice ED into E and D.Then we find that there are two D in $\\mathcal { Q }$ So, we put one D into $\\mathcal { H }$ , and then we have $\\mathcal { Q } = \\{ \\mathrm { B } , \\mathrm { D } , \\mathrm { C } , \\mathrm { A } , \\mathrm { E } \\}$ while $\\mathcal { H } = \\{ \\mathrm { A B D E D B E D } ,$ CAB, ED(4), ABDED, ABD(2),AB, B, D}.   \nix. Then we cannot find repetitive letters or strings anymore. Now we put all of the remaining letters into ${ \\mathcal { H } } ,$ .and thenwe have $\\mathcal { H } = \\cdot$ {ABDEDBED,CAB,ED(4),ABDED, ABD(2), AB, B(2), D(2), C,A,E}, while $\\mathcal { Q }$ becomes empty. ",
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "Now, $\\mathcal { H }$ records one ladderpath. Based on how we sliced the strings,we can align the strings in $\\mathcal { H }$ in the right hierarchical order, resulting in the partially ordered multiset $\\mathcal { H }$ = {A, B(2),C,D(2),E // AB,ED(4) // CAB, ABD(2) // ABDED // ABDEDBED), namely, a ladderpath (which is actually $J _ { \\mathcal { Q } }$ in Section 2.6, Equation (7)). ",
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "Appendix E: Looking for the evidence of intelligent life ",
        "text_level": 1,
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "Here we investigate the question of looking for the evidence of intelligent life,which is actually looking at the evolution of ladderpath-systems from the opposite direction,i.e., given the status of a system, we need to tell whether the system reaches this status via the ladderpath mechanism. Here we put forward 5 hypotheses: ",
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "1. The order-index $\\omega$ of life is very high; intelligent life including the things created by intellgent life has an even higher order-index; and the more intelligent, the higher the order-index (although intelligent life can also create things with low order-indices, it is the upper limit that we are considering here). The reason is that $\\omega$ describes how different the system is from the systems that are completely generated by random ",
        "page_idx": 24
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 25
    },
    {
        "type": "text",
        "text": "processes, that is, the larger $\\omega$ is, the more different the system is from random systems; and the involvement of life and intelligent life must deviate the system from randomness.   \n2. However, the system withahigh order-index $\\omega$ maynot always be life,intelligent life, or things created by intelligent life (e.g., crystals produced by simple chemical /physical processes are very much ordered but not life).   \n3. The ladderpath-index $\\lambda$ (equivalent to the costs or the difficulties to generate /reproduce the system) of life is relatively high; intelligent life including the things created by intelligent life has an even higher ladderpath-index; and the more intelligent, the higher the ladderpath-index (likewise, we only consider the upper limit here). The reason is that, as discussed in the last section, ladderpath-systems automatically evolve more and more \"complex\" (in both aspects, i.e., increasing order-index and ladderpath-index).   \n4. However, the system with a high ladderpath-index $\\lambda$ may not always be life, intelligent life, or things created by intelligent life (e.g., the ladderpath-index of a random system is high,but it is not life).   \n5. The four points above infer that if a system is life,intelligent life,or created by intelligent life,its order-index $\\omega$ and ladderpath-index $\\lambda$ should be both high, and vice versa (but as for how high can be considered high, that is another question). ",
        "page_idx": 25
    },
    {
        "type": "text",
        "text": "We take an example to further explain. As shown in the following figure,imagine that $( a ) - ( e )$ are five photos of five extraterrestrial planets taken by our spacecraft, where each black dot represents a normal stone. Now we need to tellfrom these photos whether or not these systems are life, intelligent life,or relics left by intelligent life on the planet. Based on our hypothesis, the most probable one out of the five systems is $( b )$ (asits order-index and ladderpath-index are both very high),and then $( d )$ and $( e )$ ,but $( e )$ is more likely to be generated by physical processes such as crystallization. ",
        "page_idx": 25
    },
    {
        "type": "table",
        "img_path": "images/e3925d2690340140a9d400448566d29b2603b852a2e21c975a42a9ef501b8ac5.jpg",
        "table_caption": [],
        "table_footnote": [],
        "table_body": "<html><body><table><tr><td>(a) .. . ：</td><td>(b) \": . . ： . :. :.</td><td>(c) .. .· . :::: ：</td><td>(d)</td><td>:::: . ： : :::: ： ::::</td><td>(e) ： ： ： ： ： ： : : : :::: :::: ::::</td></tr><tr><td>{(8）}</td><td>{·(8) / .(5)} · ：</td><td></td><td>{0(2)//:·//::) {(2)//. {·(2)//··/</td><td>… :://::(5)} ： ： ： ： ::(5)</td><td>A ：：</td></tr></table></body></html>",
        "page_idx": 25
    },
    {
        "type": "table",
        "img_path": "images/76cbb11f022f906961873e0aa9e0d5be778ae01c661345a5031ab42398d9505e.jpg",
        "table_caption": [],
        "table_footnote": [
            "where Sis the size-index, $\\lambda$ is the ladderpath-index,and $\\omega$ is the order-index $\\overline { { ( : = { \\cal S } - \\lambda ) } } ,$ ).Theunits of the three quantities are all lift. "
        ],
        "table_body": "<html><body><table><tr><td></td><td>(a) (b)</td><td>(c)</td><td>(d)</td><td>(e)</td></tr><tr><td>S</td><td>8</td><td>48 8</td><td>48</td><td>48</td></tr><tr><td>入</td><td>8</td><td>13 4</td><td>9</td><td>7</td></tr><tr><td>w</td><td>0</td><td>35 4</td><td>39</td><td>41</td></tr></table></body></html>",
        "page_idx": 25
    },
    {
        "type": "text",
        "text": "There are two points to be noticed. (1) It is not certain that $( b )$ must correspond to life or intelligent life, since we do not know how high the values of $\\omega$ and $\\lambda$ would definitely correspond to life, whereas they can only give us a relative probability. The ladderpath itself cannot tell us the thresholds (if they ever exist) of $\\omega$ and $\\lambda$ beyond which life or inteligent life definitely exists.Nevertheless,the information of the thresholds might be figured out from other sources, e.g., as Earth is a place with life and intelligent life, we can investigate $\\omega$ and $\\lambda$ of plant or animal systems, $\\omega$ and $\\lambda$ of indigenous peoples in isolation, people living in cities, etc.,and from those data we may infer the thresholds of $\\omega$ and $\\lambda$ that life or intelligent life corresponds to (if the thresholds ever exist). (2) When we compare the order-index, we need to set the basic set to be consistent across allsystems that we are going to compare, e.g.,here we set each basic set to be constituted of the black dots only. ",
        "page_idx": 25
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "In the example above, we actually considered each photo as an isolated system. Now we consider a different example, namely the following 3 scenarios: ",
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "$( f )$ We found an airplane (denoted $\\mathcal { F }$ ) on another planet, which is exactly the same as our airplane on Earth,even the positions of the windows are the same.   \n（g） We found a UFO-like thing, denoted $\\mathcal { G }$ , but we have absolutely no idea whether it is an aircraft. It looks like a disc, with a similar size as an airplane,with some patterns on the surface, with a door-like thing but no clue how to get in.   \n$( h )$ We found two exact $\\mathcal { G }$ on another planet. ",
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "Now, the question is, which case is most likely to be involved with intelligent life? ",
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "In case $( f )$ ,if $\\mathcal { F }$ is considered as an isolated system, its ladderpath can be written as {basic blocks $/ / \\ F _ { r e p } \\}$ (where $\\mathcal { F } _ { r e p }$ is the repetitive part of $\\mathcal { F }$ )，so its order-index is $\\omega _ { f } ^ { \\prime } = S ( \\mathcal { F } _ { r e p } ) - 1 \\doteq S ( \\mathcal { F } _ { r e p } )$ (according to Equation (6). However, we should consider $\\dot { \\mathcal { F } }$ and airplanes on Earth as a united system since $\\mathcal { F }$ is repetitive in our experiences, indeed. So, $\\mathcal { F }$ itself is a ladderon and its ladderpath is thus {basic blocks / $\\langle \\mathcal { F } _ { r e p } \\ / / \\ \\mathcal { F } \\}$ (similar to the scenario where we find two identical $\\mathcal { F }$ ，and $( f ) ^ { \\prime } \\mathbf { s }$ order-index is thus $\\omega _ { f } \\doteq S ( \\mathcal { F } _ { r e p } ) + S ( \\mathcal { F } )$ .But in case $( g )$ , we can only consider $\\mathcal { G }$ as an isolated system, since we do not know what it is (thus we cannot consider it and the airplanes on Earth as a united system). So,its ladderpath can only be written as {basic blocks $\\mathrm { ~ \\ / ~ } \\mathcal { G } _ { r e p } \\}$ (where $\\mathcal { G } _ { r e p }$ is the repetitive parts of $\\mathcal { G }$ ), and its order-index is $\\omega _ { g } \\doteq S ( \\mathcal { G } _ { r e p } )$ . In case $( h )$ , we do not know what $\\mathcal { G }$ is neither, but as $\\mathcal { G }$ is repetitive in the system itself, its ladderpath is thus {basic blocks // $\\textit { \\textbf { \\textit { G } } } _ { r e p } \\textit { \\mathrm { / / } } \\mathcal { G } \\}$ , and its order-index is $\\omega _ { h } \\doteq \\mathsf { \\bar { S } } ( \\mathcal G _ { r e p } ) + S ( \\mathcal G )$ ： ",
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "If we further assume that $\\mathcal { F }$ and $\\mathcal { G }$ have the same size,i.e., $S ( { \\mathcal { F } } ) = S ( { \\mathcal { G } } )$ ,and their repetitive parts also have the same size, i.e., $S ( \\mathcal { F } _ { r e p } ) = S ( \\mathcal { G } _ { r e p } ) .$ , then we have $\\omega _ { f } = \\omega _ { h } > \\omega _ { g }$ and $\\lambda _ { f } = \\lambda _ { h } = \\lambda _ { g }$ . Then, $( f )$ and $( h )$ are very similar cases, which would be more likely to be caused by intelligent life than $( g )$ . Nevertheless, note that if $\\omega _ { g }$ and $\\lambda _ { g }$ are already very large,that is, the order-index and ladderpath-index of $\\mathcal { G }$ are already larger than the \"thresholds\" that might be caused by intelligent life,inferred from other sources,it is still possible that $( g )$ is also caused by intelligent life. ",
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "It is reasonable to hypothesize that not only does the evolution of life follow the mechanism of ladderpath (as explained in Section 3),but also the evolution of civilizations (such as human society and the development of technology). Therefore, when we find or try to find alien civilizations,we might have the following scenarios: ",
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "1. On another planet, we find a whole set of processes (or traces of processes) that follow the ladderpath mechanism,while the processes are completely different from what happened on Earth (e.g., silicon-based life,immersed in liquid methane).   \n2. We trytolook forhigh- $\\mathbf { \\nabla } \\cdot \\lambda$ objects (namely, dificult to make) that look like things in our own world (such as man-made airplanes,architectures with complex shapes but similar to ours, complex metabolic activities but similar to ours, complex machines but similar with ours),which is analogous to case $( f )$ . As long as we find a high- $\\mathbf { \\nabla } \\cdot \\lambda$ object similar to the counterpart in our own world (even if we only find one such object),we can treat it as a ladderon (since it is repetitive in this united system). Therefore,both the order-index and the ladderpath-index of this united system are high,which implies that it is the result of a civilization (However, if we and they are independent civilizations,this scenario is very unlikely because the probability that two independent civilizations emerged from literally an infinite number of possible civilizations happen to be identical is practically zero).   \n3. We find only one single machine (or the relic of one machine), yet it has many repetitive and hierarchical structures inside,resulting in that both its order-index and ladderpath-index are very high. In this case,it is also very likely that this machine was made by an alien civilization.   \n4. Of course,we cannot exclude the last possibility: we find a large number of identical high- $\\mathbf { \\nabla } \\cdot \\lambda$ objects that have,however, no repetitive structure inside (i.e., each object has a very low order-index). This case is also very likely to be an alien civilization,because on one hand,as the number of objects is very large (the object is thus ladderon), the order-index of the whole system is very large, while on the other hand,as the object has a very high $\\lambda .$ ,the ladderpath-index $\\lambda$ of the whole system will be also very high. However, the probability that this type of civilization emerges is almost zero (which does not follow the ladderpath mechanism), just as the metaphor of the junkyard tornado,as discussed in Section 4.3. ",
        "page_idx": 26
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "Appendix F: Connections between the ladderpath and Shannon entropy ",
        "text_level": 1,
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "First to note is that both the ladderpath and Shannon entropy characterize the syntactic information of an object or system,and have no bearing on the semantic information content. Then, what are the other connections between them? Consider an example,a target system $\\mathcal { D }$ which is an enclosed box containing 1 mol of butane $\\mathrm { ( C H _ { 3 } C H _ { 2 } C H _ { 2 } C H _ { 3 } ) }$ at equilibrium, namely $6 . 0 2 2 \\times 1 0 ^ { 2 3 }$ butane molecules. We know that ladderpath can describe static objects, structures,patterns,etc.So,in this case, we can use the ladderpath to describe a specific point in the state space of these 1 mol butane molecules. This state can be considered as a pattern where the gas molecules are all placed randomly /irregularly in space at fixed positions and thus no repetitive pattern arises (referring to Figure 2b,and we could consider those stones as gas molecules). Now, if we define the generation-operation as forming covalentbonds, then the ladderpath of the target system $\\mathcal { D }$ is: ",
        "page_idx": 27
    },
    {
        "type": "equation",
        "text": "$$\nJ _ { \\mathcal { D } } = \\{ \\mathrm { C } , \\mathrm { H ( 3 ) } ~ / ( \\mathrm { C } \\mathrm { H } _ { 2 } ~ / / ~ \\mathrm { C } \\mathrm { H } _ { 3 } \\mathrm { C } \\mathrm { H } _ { 2 } ~ / / ~ \\mathrm { C } \\mathrm { H } _ { 3 } \\mathrm { C } \\mathrm { H } _ { 2 } \\mathrm { C } \\mathrm { H } _ { 2 } \\mathrm { C } \\mathrm { H } _ { 3 } ~ ( 6 . 0 2 2 \\times 1 0 ^ { 2 3 } - 1 ) \\}\n$$",
        "text_format": "latex",
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "We can see that $J _ { \\mathcal { D } }$ mainly describes the molecular structure of butane and the fact that the ic system $\\mathcal { D }$ consists of 1 mol butane molecules that are placed randomly. 1C ",
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "On the other hand, Shannon entropy of $\\mathcal { D }$ , reduced to thermodynamic entropy in 1062   \nthis case [42], can be calculated from the wel-known Sackur-Tetrode equation, which is a 1063   \nfunction of the molecular internal energy, the number of molecules,and the volume of the 1064   \ncontainer [43]. It can be considered as the description of the logarithm of the number of all 1065   \npossible states constrained by the movements /vibrations /rotations /etc of the molecules. 106e   \nWe can see that it is very different from what the ladderpath describes. 1067 ",
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "Notes ",
        "text_level": 1,
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "Infact,thisstringis\"welieinjupiter.weloejupiter\".Wejustconvertedaleterintoanother (incudingspaceand period): EMZBRCNKX is \"jupiter.\" (notice period and space),and ACX is \"we.\",while LPIC is love,and LGIC is live. 107 ",
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "References ",
        "text_level": 1,
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "1. Smith,J.M.20thcentury biologyasascience of information (95/102).YouTube Video,1997.youtube.com/watch?v $\\mathbf { \\bar { \\rho } } = \\mathbf { \\bar { \\rho } }$ 78ikxE5-POY.1072   \n2. KolchinskyA.Wolrtaticforatioutooousgendqlaisticalpics.ntefaceu 2018,8,20180041. doi:10.1098/rsfs.2018.0041. 1074   \n3. Crutchfield,Joung,K.ergsatisticalcolexity.s.ReLet89,6,0508.do:1/Re60. 1075   \n4. Thorén,H.;Gerlee,PWeakEmergeceandComplexityIroceedingsoftertificialLifeXIroceedingsoftheTwelft6 IntermationalConferenceontheSythesisandSimulationofivingSstems;Feleran,H;DrM.;HnczyM;Ldegad Laursen,L;eS.;erkleD;ad,PA;tyK.;n.ds.;r:UiedStats; p8. 1078   \n5. Kolmogorov.rapproacsteuantitativedeionofforatio.robyPeredachimatsirobf Information Transmission]1965,1,3-11. doi:10.1080/00207166808803030. 1080   \n6. Chaitin,GJOeengthofprgsforomputigfitebaryqens.JAC65469.d04/566   \n7. Chaitin,GJ.Ontegthofprgamsfoomputigfitearysqens:titicalseratis.J.AC69,6459 doi:10.1145/321495.321506.   \n9. Zvonkin,A.K.;evin,L.A.Thecomplexityoffniteobjectsandteevelopmentof theconceptsofinformationandandoess bymeansof thetheoryofalgorithms.RusianMathematicalSurueys1970,25,3-124.doi:10.1070/RM1970v025n06ABEH01269.   \n10. Vitanyi,PM.B.How incomputableis Kolmogorov complexity? Entropy 2020,22,408.doi:10.3390/e22040408.   \n11. Lempel,A.;ZivJ.OntheComplexityofFiniteSequences.IEEETransactionsonInformation Theory976,22,75-81. doi:10.1109/TIT.1976.1055501.   \n12. Ziv,J;elltcso4. doi:10.1109/TIT.1977.1055714.   \n13.Ziv,J;el,ofasblengisotio8, 24,530-536.doi:10.1109/TIT.1978.1055934.   \n14. Adami,C.；Cerf,N.J.Physical complexityof symbolic sequences.Physica D: Nonlinear Phenomena 20oo,137,62-69. doi:https://doi.0rg/10.1016/S0167-2789(99)00179-7.   \n15. Shanon,C..Aatematicalteoryoommuniation.eBellsteTicalJual948,277923.do 7305.1948.tb01338.x.   \n16. Graberger,P.Towardsaquantitativetheoryofself-generatedcomplexity.InternationalJournalofTheoretical Physics986, 25,907-938. doi:10.1007/BF00668821.   \n17. Achile,A.; Paolini,G.;Mbeng,G.;SoatoS.Theinformationcomplexityoflearning tasks,theirstructureand theirdistance. Information and Inference: A Journal of the IMA 2021,10,51-72.doi:10.1093/imaiai/iaaa033.   \n18.MakowskiM.;otrowski,E.W.;aciewicz,P;opa,M.TransactionalInterpretationforterincipleofiuer Information. Entropy 2021,23. doi:10.3390/e23111464.   \n19.Li,M.; Vitanyi,P.AnIntroductionto Kolmogoro ComplexityandIts Applications,thirded.;SpringerVerlag,2008.   \n20.Hanel9;el Berlin Heidelberg: Berlin, Heidelberg,1992; pp.513-528.   \n21.Ziv,J;erav,.meaureofaieeopwndiualsqueesitptiotversalasfcaiE Transactions on Information Theory 1993,39,1270-1279. doi:10.1109/18.243444.   \n22. Jacob,F. Evolution and tinkering. Science 1977,196,1161-1166.doi:10.1126/science.860134.   \n23. Middendorf,M.; ZivE.; Wiggins,Cnferrng netorkmhanisms:TeDrosophilamelanogasterproteiniteractionetwork. Proceedings of the National Academy of Sciences 2005,102,3192-3197. doi:10.1073/pnas.0409515102.   \n24. WagnerG.P;avicevM.;Cheverud,J.eroadtomodularityNatureReiesGenetics28,92-931.doi:008/67.   \n25. Valverde,S.; Sole,R.Hierarchical SmallWorlds inSoftwareArchitecture.InProceedings of theSoftwareEngineeringand Complex Networks,20,Vol.14,Dynamics ofContinuous,Discreteand Impulsie Systems eries B,pp.1-11.   \n26. Valverde,S.BreakdownofModularityinComplexNetworks.Frontiers inPysiology2017,8.doi:10.3389/fphys.2017.00497.   \n27.Sole,R.;Valrde,Svongomplexity:owkegascelstaredeologcaletoks.opcalctio of the Royal Society B: Biological Sciences 2020,375,20190325. doi:10.1098/rstb.2019.0325.   \n28. Knuth,Daioors.Itofmtergamngue2:umeicaloritdd.dsosle Professional, 1997; pp. 461-485.   \n29. Marshall,S.M.; MurrayA.R.G.; Cronin,L.A probabilistic framework for identifying biosignaturesusing Pathway Complexityoocalacisflyeical,cldegies4. doi:10.1098/rsta.2016.0342.   \n30.MurrayA;arsal,Son,LefigtbldEplogitspcatios.a18.d48v   \n31.Marshall;e,D;uryGeS;on,Lanifghtfgblysc 2019.doi:10.48550/arXiv.1907.04649.   \n32.Marshal,S;athsC;Carick,E.;KeenanG.;CoperGJT;Graa,H.;Crven,;GromskiS.;oore,DG;Waker S.I;tal.Identifying moleculesasbiosignatures withassemblytheoryand masspectrometry.Nature Communications201, 12,3033.doi:10.1038/s41467-021-23258-x.   \n33.Liu,Y.; athis,C.; Bjczk,.D.;arshal,.M.; Wbraham,L.;Cronin,LExploring and mappngchemicaaceith molecular assembly trees. Science Aduances 2021,7,eabj2465. doi:10.1126/sciadv.abj2465.   \n34.Downey,P;LeongB.thiR.Computingsequences withdditionhas.AJoualonComputing81,138646. doi:10.1137/0210047.   \n35.Hordijl,eectocaalytcstagsalacoalfec 227, 451-461. doi:10.1016/j.jtbi.2003.11.020.   \n36. Liu,Y;Sumpter,D.J.T.Mathematicalmodelingrevealsspontaneous emergenceofself-replicationinchemicalreactionsystems Journal of Biological Chemistry 2018,293,18854-18863. doi:10.1074/jbc.RA118.003795.   \n37.Liu,Y.Onthedefinitionofaself-sustainingchemical reactionsystem and itsrolein heredity.Bology Direct200,15. doi:10.1186/s13062-020-00269-0.   \n38. Gatherer,D.Finiteuniverseofdiscourse: thesystems biologyof Walter Elsasser(1904-1991).TheOpenBiology Journal08, 1,9-20. doi:10.2174/1874196700801010009.   \n39. Zimmerman,E.;onath,A.iologicaliplicationsof thebosome'stunningstereochemistry.Chemiohem,0,6-72. doi:10.1002/cbic.200800554. ",
        "page_idx": 27
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 28
    },
    {
        "type": "text",
        "text": "40.Schrodinger,E.WhatIsLife?hePysical Aspectof theLiving Cell;CambridgeUniversityPres,Cambridge.,944. 11   \n41.WuK.;nQWu,Tilosocalalysisoftheagadaturefetrodgatietroytors.omleiy   \n2020.doi:10.1155/2020/8769060. 11   \n42. Gao,X.;GallccioE.;Roitberg,AE.egeneralizedBolmadstrbutionis teolydistributioniichteGb-ao   \nentropy equalsthethermodynamicentropyTheJournalofChemicalPhysics19,151,034113.doi:10.1063/11133. 11   \n43.Schroeder, D.V. An Introduction to Thermal Physics; Addison Wesley Longman,1999. 11 ",
        "page_idx": 29
    }
]